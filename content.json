{"meta":{"title":"Cholesterol","subtitle":"你的经历终成谈吐","description":"你的经历终成谈吐","author":"胆固醇","url":"http://unknownfor.github.io","root":"/"},"pages":[{"title":"archive","date":"2016-03-23T06:24:06.000Z","updated":"2019-05-23T07:23:38.000Z","comments":true,"path":"archives/index.html","permalink":"http://unknownfor.github.io/archives/index.html","excerpt":"","text":""},{"title":"欢迎来到这里。","date":"2017-03-23T06:24:06.000Z","updated":"2021-08-12T07:41:06.501Z","comments":true,"path":"about/index.html","permalink":"http://unknownfor.github.io/about/index.html","excerpt":"","text":"# 关于博客博客建立于 1490198400(UNIX)，由 Hexo 强力驱动。 # 关于我重度可乐爱好者，所以自命名cholesterol。 加班🐶一只，软件工程专业，喜欢侦探小说和数学。 有两只猫 (´ཀ`」 ∠) 目前的职位是「前端 开发工程师」。 # 联系我如果你希望同我交流，可以发送邮件 （cholesterol54@gmail.com）给我。 偶尔会在 github 上冒泡，fork最近的新的前端代码。"},{"title":"categories","date":"2016-03-23T06:24:06.000Z","updated":"2019-05-23T06:28:42.000Z","comments":true,"path":"categories/index.html","permalink":"http://unknownfor.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Promise控制请求并发次数","slug":"Promise控制请求并发次数","date":"2023-03-01T07:03:47.000Z","updated":"2023-09-14T03:05:00.078Z","comments":true,"path":"2023/03/01/Promise控制请求并发次数/","link":"","permalink":"http://unknownfor.github.io/2023/03/01/Promise控制请求并发次数/","excerpt":"","text":"背景接手了一个老项目，启动后首页打开请求三十几个接口，人都崩溃。只能想办法写promise优化下，现在基本上前端项目都是通过axios来实现异步请求的封装，异步编程。 明确概念这里有几个概念需要明确一下 并发：并发是多个任务同时交替的执行（因为cpu执行指令的速度非常之快，它可以不必按顺序一段代码一段代码的执行，这样效率反而更加低下），这样看起来就是一起执行的，所以叫并发。 并行：可以理解为多个物理cpu或者有分布式系统，是真正的’同时’执行 并发控制：意思是多个并发的任务，一旦有任务完成，就立刻开启下一个任务 切片控制：将并发任务切片的分配出来，比如10个任务，切成2个片，每片有5个任务，当前一片的任务执行完毕，再开始下一个片的任务，这样明显效率没并发控制那么高了 思路首先执行能执行的并发任务，根据并发的概念，每个任务执行完毕后，捞起下一个要执行的任务。 将关键步骤拆分出合适的函数来组织代码 循环去启动能执行的任务 取出任务并且推到执行器执行 执行器内更新当前的并发数，并且触发捞起任务 捞起任务里面可以触发最终的回调函数和调起执行器继续执行任务 12345678910111213141516171819202122232425262728293031323334353637383940414243// 设计一个函数，可以限制请求的并发，同时请求结束之后，调用callback函数// sendRequest(requestList:,limits,callback):voidsendRequest( [() =&gt; request('1'), () =&gt; request('2'), () =&gt; request('3'), () =&gt; request('4')], 3, //并发数 (res) =&gt; &#123; console.log(res) &#125;)// 其中request 可以是： function request(url, time = 1) &#123; return new Promise((resolve, reject) =&gt; &#123; setTimeout(() =&gt; &#123; console.log('请求结束：' + url); if (Math.random() &gt; 0.5) &#123; resolve('成功') &#125; else &#123; reject('错误;') &#125; &#125;, time * 1e3) &#125;)&#125; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455async function sendRequest(requestList,limits,callback)&#123; // 维护一个promise队列 const promises = [] // 当前的并发池,用Set结构方便删除 const pool = new Set() // set也是Iterable&lt;any&gt;[]类型，因此可以放入到race里 // 开始并发执行所有的任务 for(let request of requestList)&#123; // 开始执行前，先await 判断 当前的并发任务是否超过限制 if(pool.size &gt;= limits)&#123; // 这里因为没有try catch ，所以要捕获一下错误，不然影响下面微任务的执行 await Promise.race(pool) .catch(err=&gt;err) &#125; const promise = request()// 拿到promise // 删除请求结束后，从pool里面移除 const cb = ()=&gt;&#123; pool.delete(promise) &#125; // 注册下then的任务 promise.then(cb,cb) pool.add(promise) promises.push(promise) &#125; // 等最后一个for await 结束，这里是属于最后一个 await 后面的 微任务 // 注意这里其实是在微任务当中了，当前的promises里面是能确保所有的promise都在其中(前提是await那里命中了if) Promise.allSettled(promises).then(callback,callback)&#125;","categories":[],"tags":[{"name":"工作笔记","slug":"工作笔记","permalink":"http://unknownfor.github.io/tags/工作笔记/"}]},{"title":"新官网踩坑笔记","slug":"新官网踩坑笔记","date":"2023-02-28T02:30:53.000Z","updated":"2023-09-14T03:04:17.783Z","comments":true,"path":"2023/02/28/新官网踩坑笔记/","link":"","permalink":"http://unknownfor.github.io/2023/02/28/新官网踩坑笔记/","excerpt":"","text":"统一修改 首页banner 滚动 - 文字不滚动 理念主张：before也需要连着文字算居中 怀庭 - 公共区域/客房区域- 加上白色滚动进度条 品牌页面 - 左右滑动fix 安卓 - 芷岸 滚动nav 没出现 芷岸美学 - 图上缺字 芷岸、怀挺icon高度140， 其他110 图片压缩 视频 cover gif - 杨奇上传服务器，替换本地为云端图片 首页/新闻与活动 - 替换公众号地址 im 等待时间1000 乐乎集团 轮播图 替换正确的 footer 手机号 tips 对齐 招聘 - input搜索 样式 乐乎租房 - 安卓会文字溢出。商量修改文案 title背景字母 - 长度会溢出 认识行业专家 - 文字会超出长度第二行 - icon和name平级 二级页面弹窗 - 用reload 跳转 ，需要页面滚动到顶部 tabs切换替换bug input框文字被遮挡 swiper 一个轮回后再次点击，没有出来弹窗 gif背景播放图，过大加载优化，解决首次加载出现白色屏幕 品牌页面 icon替换计算，而不是用css控制居中 点击menu，当前id匹配的话收起menu而不是固定不动 图片加载白 表单提交节流 压缩 gif会出现播放一次后，会卡顿几秒，然后再次播放。本地用定时器 + 随机数，强行webpack二次压缩，时间到了reload 该gif解决卡顿 1234567891011/** * @description: 定时器重载视频背景gif，解决卡顿问题 * @return &#123;*&#125; image url * 一轮播放60s,是因为gif是60s的播放长度 */reloadGif() &#123; this.show = true this.timeRunner = setInterval(() =&gt; &#123; this.cover = require('@/assets/insight.gif') + '?' + Math.random() &#125;, 600000)&#125;, swiper 一个轮回后再次点击，没有出来弹窗，swiper 一次轮回，init了，直接绑定在dom上的@click事件是无法二次触发的。采用原生的click事件，拿到点击的index再去召唤弹窗1234567891011121314151617181920212223&lt;div class=\"swiper-container expert-swiper expert-js\"&gt; &lt;div class=\"swiper-wrapper \"&gt; &lt;div class=\"swiper-slide\" v-for=\"(item,index) in data\" :key=\"index\"&gt; &lt;img :src=\"item.img\" /&gt; &lt;div class=\"expert-item\"&gt; &lt;div class=\"layout-slide\"&gt; &lt;span class=\"name pb16\"&gt;&#123;&#123; item.title &#125;&#125;&lt;/span&gt; &lt;img class=\"icon\" src=\"@/assets/arrow- detraction.png\" /&gt; &lt;/div&gt; &lt;div class=\"position\"&gt; &#123;&#123; item.info[0] &#125;&#125;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;!-- 专家弹窗 --&gt;&lt;p-detail-popup :data=\"current\" :visible.sync=\"show\" height=\"80%\" complex /&gt; 12345678910111213141516mounted() &#123; let vm = this new Swiper(\".expert-js\", &#123; slidesPerView: \"auto\", autoplay: true, speed: 300, loop: true, swiperIndex: null, // 初始化 on: &#123; click: function (e) &#123; vm.swiperIndex = this.realIndex vm.handleShow(vm.data[this.realIndex]) &#125; &#125; &#125;); &#125;, css计算 1height: calc(100% / 6); 表单提交节流 12345678910111213141516171819//校验表单合法 checkValid() &#123; if (this.isPending) return this.$refs.form.validate().then(() =&gt; &#123; this.isPending = true // 验证通过 this.handleSubmit() &#125;).catch((err) =&gt; &#123; this.isPending = false //验证失败 Toast(&#123; message: err[0].message, className: 'toastStyle', //所加样式名 &#125;) &#125;) &#125;, // 请求成功后 form = &#123;&#125;,避免重复提交","categories":[],"tags":[{"name":"VUE","slug":"VUE","permalink":"http://unknownfor.github.io/tags/VUE/"}]},{"title":"判断当前打卡状态","slug":"判断当前打卡状态","date":"2022-12-19T03:23:50.000Z","updated":"2022-12-19T03:24:19.523Z","comments":true,"path":"2022/12/19/判断当前打卡状态/","link":"","permalink":"http://unknownfor.github.io/2022/12/19/判断当前打卡状态/","excerpt":"","text":"做考勤需求，公司下存在多个考勤时间段，需要判断当前打卡是上班、下班、早退或者迟到等状态 需要注意的点： 会出现9:00-18：00的考勤时间，也会出现9:00-12:00，13:15 - 18:00 等不定时的多个考勤时间段 公司可以设置不同星期几，设置不一样的考勤时间规则，比如周一到周四9:00-18：00，周五10:00-20:15，周六日休息没有考勤时间 周六日没有设置考勤规则，也就是非工作日打卡，当天没有打卡记录，则本次为上班；有打卡记录，则本次为下班 需要按照接口返回的法定调休或者公共假期，剔除节假日，节假日打卡按3处理 9点上班，9点整打卡为迟到，8:59打卡为正常上班 考勤判断基本规则 多时段考勤规则梳理 utils.js12345678910111213141516171819202122232425262728293031323334353637383940414243444546/** * js判断当前“时 : 分”是否在一天中某一区间内 * 比如：15.30 在不在08.30到16.00之间 * @param &#123;*&#125; beginTime * @param &#123;*&#125; endTime * @returns */export function checkAuditTime(beginTime, endTime) &#123; var nowDate = new Date(); var beginDate = new Date(nowDate); var endDate = new Date(nowDate); var beginIndex = beginTime.lastIndexOf(':'); var beginHour = beginTime.substring(0, beginIndex); var beginMinue = beginTime.substring(beginIndex + 1, beginTime.length); beginDate.setHours(beginHour, beginMinue, 0, 0); var endIndex = endTime.lastIndexOf(':'); var endHour = endTime.substring(0, endIndex); var endMinue = endTime.substring(endIndex + 1, endTime.length); endDate.setHours(endHour, endMinue, 0, 0); return ( nowDate.getTime() - beginDate.getTime() &gt;= 0 &amp;&amp; nowDate.getTime() &lt;= endDate.getTime() );&#125;/** * [isDuringDate 比较指定时间是否在指定时间段内] * @author dongsir * @DateTime 2019-08-21 * @version 1.0 * @param date [beginDateStr] [开始时间] * @param date [endDateStr] [结束时间] * @param date [compareDateStr] [需要比较的时间] * @return Boolean */export function isDuringDate(beginDateStr, endDateStr, compareDateStr) &#123; let curDate = new Date(compareDateStr), beginDate = new Date(beginDateStr), endDate = new Date(endDateStr); if (curDate &gt;= beginDate &amp;&amp; curDate &lt;= endDate) &#123; return true; &#125; return false;&#125; index.vuelt;template&gt; &lt;view v-if=\"innerVisible\"&gt; &lt;!-- 普通打卡的弹窗 --&gt; &lt;u-popup :show=\"show\" v-if=\"show\" overlay round=\"10\" closeOnClickOverlay :safeAreaInsetBottom=\"false\" @close=\"closePopup\" mode=\"center\"&gt; &lt;view class=\"check-container\"&gt; &lt;view class=\"check-box\"&gt; &lt;image class=\"icon\" v-if=\"check.show_error\" src=\"/static/pages_tools/gps-error.svg\"&gt; &lt;/image&gt; &lt;image class=\"icon\" v-else src=\"/static/pages_tools/gps-success.svg\"&gt; &lt;/image&gt; &lt;view class=\"info\" v-if=\"check.type_name\" :class=\"check.show_error ? 'error' : ''\"&gt;&#123;&#123; check.type_name &#125;&#125; &lt;/view&gt; &lt;view class=\"address\"&gt;&#123;&#123; check_placeName &#125;&#125;&lt;/view&gt; &lt;/view&gt; &lt;view class=\"time\"&gt;&#123;&#123; currentTime &#125;&#125;&lt;/view&gt; &lt;view class=\"btn submit-btn flex justify-center items-center\" @tap.stop=\"submit\"&gt; &lt;text&gt;&#123;&#123; check.show_error ? '确认' : '' &#125;&#125;打卡&lt;/text&gt; &lt;/view&gt; &lt;view class=\"btn cancel flex justify-center items-center\" @tap.stop=\"cancel\"&gt;&lt;text&gt;取消&lt;/text&gt;&lt;/view&gt; &lt;/view&gt; &lt;/u-popup&gt; &lt;!-- 外勤打卡弹窗 --&gt; &lt;pp-outdoor v-if=\"showOutdoor\" :latAndLon=\"latAndLon\" :visible.sync=\"showOutdoor\" @outdoorCheck=\"outdoorCheck\" @close=\"closeOutdoor\"&gt;&lt;/pp-outdoor&gt; &lt;!-- 打卡成功弹窗 --&gt; &lt;pp-success :visible.sync=\"showSuccess\" :data=\"success\" @closeSuccess=\"closeSuccess\" /&gt; &lt;!-- 打卡有冲突 --&gt; &lt;conflict v-if=\"showConflict\" :visible.sync=\"showConflict\" :data=\"conflict\" from=\"打卡\" @cancel=\"closeConflict\" @submit=\"cancelSubmit\" /&gt; &lt;!-- 弹窗提示新增考勤组 --&gt; &lt;u-modal :show=\"showManage\" width=\"500rpx\" @confirm=\"addGroup('add')\" @cancel=\"cancelAddGroup\" ref=\"noManageModal\" confirmText=\"前往设置\" :showCancelButton=\"true\"&gt; &lt;view class=\"slot-content\"&gt; &lt;text class=\"info\"&gt;请先设置考勤规则&lt;/text&gt; &lt;/view&gt; &lt;/u-modal&gt; &lt;!-- 没有考勤组信息提示弹窗--&gt; &lt;u-modal :show.sync=\"showGroup\" width=\"500rpx\" @confirm=\"addGroup()\" @cancel=\"cancelAddGroup\" ref=\"noGroupModal\" confirmText=\"确定\" cancelText=\"取消\" confirmColor=\"#4C8AFC\" showCancelButton=\"true\" :safeAreaInsetBottom=\"false\" :asyncClose=\"true\"&gt; &lt;view class=\"slot-content\"&gt; 是否将自己加入考勤组？ &lt;/view&gt; &lt;/u-modal&gt; &lt;/view&gt;&lt;/template&gt;&lt;script&gt;import &#123; checkAuditTime, isDuringDate &#125; from '@/utils/index';import outdoor from './outdoor-popup';import successPopup from './success-popup';import conflict from '../approve-conflict-modal';import Big from 'big.js';import dayjs from 'dayjs';import isBetween from 'dayjs/plugin/isBetween';dayjs.extend(isBetween);import attendanceApi from '@/api/attendance';const app = getApp();export default &#123; props: &#123; visible: &#123; type: Boolean, default: false, &#125;, latAndLon: &#123; type: Object, default: () =&gt; (&#123;&#125;), &#125;, placeName: &#123; type: String, default: '', &#125;, &#125;, components: &#123; 'pp-outdoor': outdoor, 'pp-success': successPopup, conflict, &#125;, computed: &#123; innerVisible: &#123; get() &#123; return this.visible; &#125;, set(v) &#123; this.$emit('update:visible', v); &#125;, &#125;, &#125;, data() &#123; return &#123; intervalTimer: null, showOutdoor: false, attendance: &#123; placeList: [], //打卡地址 timeList: [], //上下班时间 &#125;, success: &#123;&#125;, showSuccess: false, showGroup: false, // 考勤组弹窗 show: false, // 打卡弹窗 check: &#123;&#125;, // 打卡信息 check_placeName: '', // 打卡地址 currentTime: dayjs().format('HH:mm:ss'), history: [], // 当天当前用户的全部考勤记录 workRules: '', // 当天当前用户的考勤规则 isAdmin: Vue.prototype.$storage ._getStorage('userinfo') .userAuthorizationList.filter( (a) =&gt; a.userAuthority == '100101' || a.userAuthority == '100108', ).length &gt; 0, // 管理员权限、考勤权限 showManage: false, // 没有考勤组 showConflict: false, // 请假有冲突 conflict: &#123;&#125;, // 冲突信息 inside_arr: [], // 考勤时间内 during_arr: [], // 休息时间 outside_work: &#123;&#125;, // 考勤时间外,上班 outside_off: &#123;&#125;, // 考勤时间外,下班 &#125;; &#125;, mounted() &#123; let _this = this; setInterval(() =&gt; &#123; _this.currentTime = dayjs().format('HH:mm:ss'); &#125;, 1000); &#125;, watch: &#123; show(val) &#123; if (val) &#123; this.handleCheckType(); this.intervalTimer = setInterval(this.handleCheckType, 1000); app.globalData.scrollLock = true; &#125; &#125;, showOutdoor(val) &#123; app.globalData.scrollLock = val; &#125;, showManage(val) &#123; app.globalData.scrollLock = val; &#125;, showGroup(val) &#123; app.globalData.scrollLock = val; &#125;, showSuccess(val) &#123; app.globalData.scrollLock = val; &#125;, &#125;, created() &#123; this.getUserCheckList(); this.getUserAttendanceGroupDetails(); &#125;, methods: &#123; //查询用户当天的打卡记录 getUserCheckList() &#123; let params = &#123; userId: app.globalData.userId, employeeNo: app.globalData.employeeNo, enterpriseId: app.globalData.enterpriseId, date: dayjs(new Date()).format('YYYY-MM-DD'), // 今天 &#125;; attendanceApi .getOneDayAttendanceByUserId(params) .then((res) =&gt; &#123; if (res &amp;&amp; res.data &amp;&amp; res.data.clockRecord) &#123; this.history = res.data.clockRecord; // 当日打卡历史 &#125; &#125;) .catch((errors) =&gt; &#123; uni.$u.toast(errors.msg || '获取打卡出了问题，请稍后再试'); &#125;) .finally(() =&gt; &#123; uni.hideLoading(); &#125;); &#125;, // 获取当前用户考勤组详情 getUserAttendanceGroupDetails() &#123; let params = &#123; userId: app.globalData.userId, employeeNo: app.globalData.employeeNo, enterpriseId: app.globalData.enterpriseId, hideLoadingTitle: true, // 隐藏请求动画 &#125;; attendanceApi .getUserAttendanceGroupDetails(params) .then((res) =&gt; &#123; if (res.data) &#123; this.attendance = res.data; // 考勤组信息 this.workRules = this.handleCheckRules(); // 当天的考勤规则 // 判断当天是否有考勤规则 if (this.workRules) &#123; this.calType(this.workRules.shift.shiftTimeList); this.formatAttance(); &#125; else &#123; // 没有考勤规则，属于非工作日 // 有打卡记录，属于下班，否则上班 this.check_placeName = this.placeName; this.history.length ? this.handleCheckStatus('offduty') : this.handleCheckStatus(0); this.show = true; &#125; &#125; else &#123; // 是管理员 if (this.isAdmin) &#123; this.getGroupList(); &#125; else &#123; // this.$showToast('您尚未加入考勤组，无需打卡'); // this.$emit('handleBottomBtnShow'); // 普通员工 - 没有考勤组 - 隐藏底部长按按钮 uni.showModal(&#123; content: '您尚未加入考勤组，无需打卡', showCancel: false, confirmText: '我知道了', success: (res) =&gt; &#123; if (res.confirm) &#123; this.innerVisible = false; &#125; &#125;, &#125;); &#125; &#125; &#125;) .catch((errors) =&gt; &#123; uni.$u.toast(errors.msg || '获取用户考勤组详情出了问题，请稍后再试'); &#125;) .finally(() =&gt; &#123; uni.hideLoading(); &#125;); &#125;, // 获取考勤组列表 getGroupList() &#123; let params = &#123; enterpriseId: app.globalData.enterpriseId, hideLoadingTitle: true, // 隐藏请求动画 &#125;; attendanceApi .getAttendanceGroup(params) .then((res) =&gt; &#123; // 展示新增考勤组弹窗 if (res.data &amp;&amp; res.data.records &amp;&amp; res.data.records.length) &#123; this.showGroup = true; // 提示加入考勤组 &#125; else &#123; this.showManage = true; // 提示设置考勤规则 &#125; &#125;) .catch((err) =&gt; &#123; this.$showToast('获取考勤组失败'); &#125;); &#125;, // 当前星期几，拿到设定的对应打卡规则 handleCheckRules() &#123; let res = ''; let timeArr = this.attendance.timeList; let currentWeek = dayjs().day(); currentWeek == 0 ? (currentWeek = 7) : ''; // 强制转换周日由0变7 if (timeArr &amp;&amp; timeArr.length) &#123; timeArr.map((t) =&gt; &#123; if (t.clockWeek.includes(currentWeek)) &#123; res = t; // 当天的考勤规则 &#125; &#125;); &#125; return res; &#125;, // 判断是否在打卡范围内 formatAttance() &#123; let placeArr = this.attendance.placeList; placeArr.map((p) =&gt; &#123; p.latitude = p.dimension; // 计算当前位置经纬度 和所在考勤组的地址经纬度 直线距离 &lt;=设置的距离 let num = this.getMapDistance( p.latitude, p.longitude, this.latAndLon.latitude, this.latAndLon.longitude, ); p.distance = new Big(num).times(1000).toString(); // 距离，单位米 p.atPlace = p.distance &lt;= p.range; // 是否在打卡范围 &#125;); // 取最近的打卡地址 let data = placeArr.filter((item) =&gt; item.atPlace); if (data &amp;&amp; data.length) &#123; this.check_placeName = data[0].placeName; // 获取打卡地址名 // 正常打卡，计算上下班 // todo setTimeout(() =&gt; &#123; this.show = true; &#125;, 600); &#125; else &#123; this.showOutdoor = true; // 外勤打卡 &#125; &#125;, //拿到打卡时间，判断打卡类型 // 把一天分为多个打卡时间段 // 判断是否处在这个时间段里 handleCheckType() &#123; if (this.workRules) &#123; let time = this.workRules.shift.shiftTimeList; let arr = []; time.map((t) =&gt; &#123; arr.push(&#123; startTime: t.workTime, endtTime: t.knockOffTime, &#125;); &#125;); // 只有一条考勤规则 if (time.length == 1) &#123; let unselect = this.unselectTime(arr); let before = checkAuditTime( unselect[0].startTime, unselect[0].endtTime, ); let during = checkAuditTime(arr[0].startTime, arr[0].endtTime); let after = checkAuditTime(unselect[1].endtTime, '24:00'); // 正常上班 if (before) &#123; this.handleCheckStatus(0); &#125; // 正常下班 if (after) &#123; this.handleCheckStatus('offduty'); &#125; // 考勤时间内 if (during) &#123; // 有打卡记录，属于早退，否则迟到 if (this.history.length) &#123; this.handleCheckStatus(4); &#125; else &#123; this.handleCheckStatus(1); &#125; &#125; &#125; // 多条考勤规则 if (time.length &gt; 1) &#123; let inside_arr = this.inside_arr; // 考勤时间内 let during_arr = this.during_arr; // 休息时间 let outside_work = this.outside_work; // 考勤时间外,上班 let outside_off = this.outside_off; // 考勤时间外,下班 // 开始判断考勤时间段 if ( this.checkAuditSeocnd(outside_work.workTime, outside_work.knockOffTime) ) &#123; this.handleCheckStatus(0); // 正常上班 return; &#125; if (this.checkAuditSeocnd(outside_off.workTime, outside_off.knockOffTime)) &#123; this.handleCheckStatus('offduty'); // 正常下班 return; &#125; // 在正常的考勤时间段内 for (var i = 0; i &lt; inside_arr.length; i++) &#123; let s = inside_arr[i]; if (this.checkAuditSeocnd(s.workTime, s.knockOffTime)) &#123; if (this.history.length) &#123; this.handleCheckStatus(4); // 早退 &#125; else &#123; this.handleCheckStatus(1); // 迟到 &#125; return; &#125; &#125; // 在午休范围内 for (var j = 0; j &lt; during_arr.length; j++) &#123; let d = during_arr[j]; let lastest = ''; // 最新打卡记录的打卡时间 let lastest_type = ''; // 最新打卡记录的打卡类型 if (this.history &amp;&amp; this.history.length) &#123; lastest = this.history[this.history.length - 1].createTime; lastest_type = this.history[this.history.length - 1].type; &#125; if (this.checkAuditSeocnd(d.workTime, d.knockOffTime)) &#123; let today = dayjs(new Date()).format('YYYY/MM/DD'); let w = today + ' ' + d.workTime; let k = today + ' ' + d.knockOffTime; if (lastest) &#123; // 今天打过卡 console.log( '在午休范围内,最新打卡记录:' + lastest, '午休时间:' + w + '至' + k, ); let history = dayjs(lastest).format('YYYY/MM/DD HH:mm:ss'); // 最新一条打卡记录 if (isDuringDate(w, k, history)) &#123; // 在午休时间段内，则本次展示上班 this.handleCheckStatus(0); // 上班 &#125; else if (lastest_type == 4) &#123; // 不在午休时间段内，最新的打卡记录是早退，则本次展示上班 this.handleCheckStatus(0); // 上班 &#125; else &#123; // 不在午休时间段内，则本次展示下班 this.handleCheckStatus('offduty'); // 下班 &#125; return; &#125; else &#123; // 今天没有打过卡 this.handleCheckStatus('offduty'); // 下班 return; &#125; &#125; &#125; this.handleCheckStatus(''); &#125; &#125; &#125;, // 当前时间处于什么打卡类型 calType(format_time) &#123; let lastest = ''; // 最新的一条打卡时间 if (this.history &amp;&amp; this.history.length) &#123; lastest = this.history[this.history.length - 1].createTime; &#125; let today = dayjs(new Date()).format('YYYY/MM/DD'); // 当天 let inside_arr = []; // 考勤时间内 let during_arr = []; // 休息时间 let outside_work = &#123;&#125;; // 考勤时间外,上班 let outside_off = &#123;&#125;; // 考勤时间外,下班 // 考勤时间段数组排序 format_time.map((d) =&gt; &#123; d.sort_workTime = today + ' ' + d.workTime; d.sort_knockOffTime = today + ' ' + d.knockOffTime; // 解决iOS无法识别 yyyy-mm-dd格式的时间转换为时间戳在苹果手机上为NaN d.new_date_workTime = new Date( d.sort_workTime.replace(/-/g, '/'), ).getTime(); d.new_date_knockOffTime = new Date( d.sort_knockOffTime.replace(/-/g, '/'), ).getTime(); &#125;); format_time.sort((a, b) =&gt; &#123; return ( new Date(a.sort_workTime).getTime() - new Date(b.sort_workTime).getTime() ); &#125;); format_time.map((t, index) =&gt; &#123; inside_arr.push(&#123; workTime: t.workTime + ':01', knockOffTime: dayjs(t.new_date_knockOffTime - 60000).format('HH:mm') + ':59', // - 1分钟 &#125;); if (format_time[index + 1] &amp;&amp; format_time[index + 1].sort_workTime) &#123; during_arr.push(&#123; workTime: t.knockOffTime + ':00', knockOffTime: format_time[index + 1].workTime + ':00', &#125;); &#125; // 考勤时间前 if (index == 0) &#123; outside_work = &#123; workTime: '00:00:00', knockOffTime: t.workTime + ':00', &#125;; &#125; // 考勤时间后 if (index == format_time.length - 1) &#123; outside_off = &#123; workTime: t.knockOffTime + ':00', knockOffTime: '23:59:59', &#125;; &#125; &#125;); this.inside_arr = inside_arr; // 考勤时间内 this.during_arr = during_arr; // 休息时间 this.outside_work = outside_work; // 考勤时间外,上班 this.outside_off = outside_off; // 考勤时间外,下班 console.log('考勤时间段数组：', format_time); console.log('考勤时间外,上班:', outside_work); console.log('考勤时间外,下班:', outside_off); console.log('考勤时间内:', inside_arr); console.log('休息时间:', during_arr); &#125;, // 打卡弹窗 //0 正常打卡 1 迟到打卡 2外勤打卡 3缺卡打卡 4 早退打卡 5没加入打卡 6请假 7 出差 8加班 10 旷工 // 5表示为加入 比如今天加入如考勤 昨天的记录就是5 handleCheckStatus(type) &#123; console.log('打卡类型:', type); let type_name = ''; let show_error = false; switch (type) &#123; case 0: type_name = '上班·打卡正常'; break; case 'offduty': type_name = '下班·打卡正常'; break; case 1: type_name = '上班·你迟到了'; show_error = true; break; case 4: type_name = '下班·你早退了'; show_error = true; break; default: type_name = ''; break; &#125; this.check = &#123; placeName: this.check_placeName ? this.check_placeName : this.placeName, // 非外勤打卡，展示的打卡地址取考勤组保存的地址 latitude: this.latAndLon.latitude, longitude: this.latAndLon.longitude, dimension: this.latAndLon.latitude, type, // 1迟到4早退 type_name, show_error, &#125;; &#125;, // 确认打卡 submit() &#123; this.show = false; let params = &#123; enterpriseId: app.globalData.enterpriseId, userId: app.globalData.userId, employeeNo: app.globalData.employeeNo, ...this.check, &#125;; delete params.type; console.log(params, '打卡postdata'); attendanceApi .saveAttendanceData(params) .then((res) =&gt; &#123; if (res.extra &amp;&amp; res.extra.extraCode) &#123; // 销毁定时器 clearInterval(this.intervalTimer); app.globalData.scrollLock = false; // 打卡有冲突 this.conflict = &#123; ...res.data, extraCode: res.extra.extraCode, &#125;; this.showConflict = true; &#125; else &#123; // 如果今天没有打过卡 if (!this.history || !this.history.length) &#123; this.getClockType() &#125; this.success = res.data; this.showSuccess = true; &#125; &#125;) .catch((errors) =&gt; &#123; uni.$u.toast(errors.msg || '打卡出错，请稍后再试'); &#125;) .finally(() =&gt; &#123; uni.hideLoading(); &#125;); &#125;, // 储存用户行动轨迹 getClockType() &#123; let ln = this.$storage._getStorage('latAndLon') let params = &#123; enterpriseId: app.globalData.enterpriseId, userId: app.globalData.userId, employeeNo: app.globalData.employeeNo, longitude: ln.longitude, dimension: ln.latitude, placeName: this.$storage._getStorage('placeName'), hideLoadingTitle: true // 隐藏请求动画 &#125;; attendanceApi.attendanceGetClockType(params).then((res) =&gt; &#123; &#125;) &#125;, // 外勤打卡成功后,展示打卡成功弹窗 outdoorCheck(params) &#123; this.showOutdoor = false; console.log(params, '外勤打卡postdata'); attendanceApi.saveAttendanceData(params).then((res) =&gt; &#123; if (res.extra &amp;&amp; res.extra.extraCode) &#123; // 销毁定时器 clearInterval(this.intervalTimer); app.globalData.scrollLock = false; // 打卡有冲突 this.conflict = &#123; ...res.data, extraCode: res.extra.extraCode, &#125;; this.showConflict = true; &#125; else &#123; // 如果今天没有打过卡 if (!this.history || !this.history.length) &#123; this.getClockType() &#125; this.success = res.data; this.showSuccess = true; &#125; &#125;); &#125;, // 关闭打卡成功的弹窗 closeSuccess() &#123; this.$emit('after'); // 打卡成功后的回调 this.showSuccess = false; this.innerVisible = false; &#125;, // 加入考勤组 addGroup(query) &#123; let url = '/pages_tools/manage/index'; if (query) &#123; url = url + '?from=' + query; &#125; uni.redirectTo(&#123; url, &#125;); &#125;, // 取消打卡 cancel() &#123; this.show = false; this.innerVisible = false; &#125;, // 取消跳转新增考勤组 cancelAddGroup() &#123; this.showManage = false; this.showGroup = false; this.innerVisible = false; &#125;, closeOutdoor() &#123; this.showOutdoor = false; this.innerVisible = false; &#125;, closePopup() &#123; this.innerVisible = false; app.globalData.scrollLock = false; &#125;, // 有冲突，取消打卡 closeConflict() &#123; this.showConflict = false; this.innerVisible = false; &#125;, // 确认作废有冲突的记录 cancelSubmit() &#123; this.showConflict = false; this.submit(); // 继续打卡 &#125;, //经纬度转换成三角函数中度分表形式 Rad(d) &#123; return (d * Math.PI) / 180.0; &#125;, // 计算两点之间的距离 getMapDistance(lat1, lng1, lat2, lng2) &#123; var radLat1 = this.Rad(lat1); var radLat2 = this.Rad(lat2); var a = radLat1 - radLat2; var b = this.Rad(lng1) - this.Rad(lng2); var s = 2 * Math.asin( Math.sqrt( Math.pow(Math.sin(a / 2), 2) + Math.cos(radLat1) * Math.cos(radLat2) * Math.pow(Math.sin(b / 2), 2), ), ); s = s * 6378.137; // EARTH_RADIUS; s = Math.round(s * 10000) / 10000; // 输出为公里 return s; &#125;, //入参 格式 unselectTime=[&#123; startTime:\"1:00\", endtTime:'3:00'&#125;] //返回数据 [&#123; startTime:\"00:00\", endtTime:'1:00'&#125;，&#123; startTime:\"3:00\", endtTime:'00:00'&#125;] //转化成分钟 toMinites(time) &#123; let mins = null; let times = time.split(':'); mins = parseInt(times[0]) * 60 + parseInt(times[1]); return mins; &#125;, toHHmmFormat(minutes) &#123; let h = null; let m = null; if (minutes) &#123; h = ('0' + parseInt(minutes / 60)).slice(-2); m = ('0' + (minutes % 60)).slice(-2); &#125; return [h, m].join(':'); &#125;, formateTime(selectedTime) &#123; let newSelectTime = [...selectedTime]; selectedTime.forEach((item, index) =&gt; &#123; if ( this.toMinites(item.startTime) &gt; this.toMinites(item.endtTime) &amp;&amp; this.toMinites(item.endtTime) != 0 ) &#123; newSelectTime.splice(index, 1); newSelectTime.push(&#123; startTime: item.startTime, endtTime: '00:00', &#125;); newSelectTime.push(&#123; startTime: '00:00', endtTime: item.endtTime, &#125;); &#125; &#125;); console.log(newSelectTime, 'newSelectTime'); return newSelectTime; &#125;, unselectTime(selectedTime) &#123; let arr = [...selectedTime]; let newSelectTime = this.formateTime(arr); let timeArr = []; let unselectTime = []; if (newSelectTime &amp;&amp; newSelectTime.length) &#123; for (let i = 0; i &lt; newSelectTime.length; i++) &#123; if ( this.toMinites(newSelectTime[i].startTime) == this.toMinites(newSelectTime[i].endtTime) ) &#123; return unselectTime; &#125; timeArr.push([ this.toMinites(newSelectTime[i].startTime), this.toMinites(newSelectTime[i].endtTime), ]); &#125; &#125; timeArr.sort((a, b) =&gt; &#123; return a[0] - b[0]; &#125;); if (timeArr.length) &#123; if (timeArr[0][0] !== 0) &#123; unselectTime.unshift(&#123; startTime: '00:00', endtTime: this.toHHmmFormat(timeArr[0][0]), &#125;); &#125; for (let i = 0; i &lt; timeArr.length; i++) &#123; if (i + 1 &gt; timeArr.length - 1) &#123; continue; &#125; if (timeArr[i][1] == timeArr[i + 1][0]) &#123; continue; &#125; unselectTime.push(&#123; startTime: this.formateTime(timeArr[i][1]), endtTime: this.toHHmmFormat(timeArr[i + 1][0]), &#125;); &#125; if (timeArr[timeArr.length - 1][1] !== 0) &#123; unselectTime.push(&#123; endtTime: this.toHHmmFormat(timeArr[timeArr.length - 1][1]), startTime: '00:00', &#125;); &#125; if ( unselectTime.length &amp;&amp; unselectTime[0].startTime == '00:00' &amp;&amp; unselectTime[unselectTime.length - 1].endtTime == '00:00' ) &#123; let startTime = unselectTime[unselectTime.length - 1].startTime; let endtTime = unselectTime[0].endtTime; unselectTime.splice(0, 1); unselectTime.splice(unselectTime.length - 1, 1); unselectTime.push(&#123; startTime, endtTime, &#125;); &#125; &#125; return unselectTime; &#125;, /** * [checkAuditSeocnd 比较当前时间是否在指定时间段内,精确到毫秒] * @author dongsir * @DateTime 2022-11-23 * @version 1.0 * @param date [beginDateStr] [开始时间] HH:mm:ss * @param date [endDateStr] [结束时间] HH:mm:ss * @return Boolean */ checkAuditSeocnd(beginTime, endTime) &#123; let today = dayjs(new Date()).format('YYYY/MM/DD'); beginTime = today + ' ' + beginTime; endTime = today + ' ' + endTime; // default milliseconds if (dayjs().isBetween(beginTime, endTime)) &#123; return true; &#125; else &#123; return false; &#125; &#125;, &#125;, beforeDestroy() &#123; // 销毁定时器 clearInterval(this.intervalTimer); app.globalData.scrollLock = false; &#125;,&#125;;&lt;/script&gt;&lt;style lang=\"scss\" scoped&gt;.check-container &#123; text-align: center; .check-box &#123; border-bottom: 1px solid rgba(187, 187, 187, 0.6); margin: 0 3rem; padding: 1.13rem 2rem; .icon &#123; width: 3.5rem; height: 3.5rem; &#125; .info &#123; padding: 0.44rem 0; font-size: 1.25rem; font-weight: bold; color: #262626; &amp;.error &#123; color: #e74b47; &#125; &#125; .address &#123; width: 320rpx; font-size: 0.75rem; color: #999999; &#125; &#125; .time &#123; padding: 1.3rem 0; font-size: 1.06rem; font-weight: bold; color: #262626; &#125; .btn &#123; height: 4rem; background: #4c8afc; font-size: 1.06rem; font-weight: bold; color: #ffffff; &amp;.submit-btn &#123; letter-spacing: 3px; &#125; &amp;.cancel &#123; background: #fff; color: #999; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px; &#125; &#125;&#125;&lt;/style&gt;","categories":[],"tags":[{"name":"VUE","slug":"VUE","permalink":"http://unknownfor.github.io/tags/VUE/"},{"name":"uniapp开发","slug":"uniapp开发","permalink":"http://unknownfor.github.io/tags/uniapp开发/"}]},{"title":"uni+微信小程序 安卓图片空白bug","slug":"uni-微信小程序-安卓图片空白bug","date":"2022-12-19T01:14:40.251Z","updated":"2022-12-19T02:48:07.914Z","comments":true,"path":"2022/12/19/uni-微信小程序-安卓图片空白bug/","link":"","permalink":"http://unknownfor.github.io/2022/12/19/uni-微信小程序-安卓图片空白bug/","excerpt":"","text":"一个超级无语的bug，&lt;image&gt;标签渲染图片，后端给的文件url，是不带诸如.png、.jpg等附件名称后缀的地址，直接返回了https://xx.filename的文件路径，在iOS和模拟器上能正常读取照片，在安卓上就会展示空白 起初以为是没有把图片的https加入小程序配置的合法域名，最后的解决方案，是把后端给的url图转换base64才行 哎这个坑痛心疾首，记录下 实现效果 图片上传公共方法1234567891011121314151617181920/** * 本地选择的图片 - 转化为base64 * @param &#123;*&#125; file uni.choseImage后拿到的path数组的第一个 * @returns */export function setBase64(file) &#123; return new Promise((resolve, reject) =&gt; &#123; uni.getFileSystemManager().readFile(&#123; filePath: file, encoding: 'base64', success: (res) =&gt; &#123; resolve(res); &#125;, fail: (e) =&gt; &#123; reject(e.msg); uni.$u.toast('图片转换失败'); &#125;, &#125;); &#125;);&#125; 安卓专用图片转换方法12345678910111213141516171819202122232425/** * 网络图 转换为base64格式 * @param &#123;*&#125; url * @returns base64 file */export function fileStreamturn(url) &#123; return new Promise((resolve, reject) =&gt; &#123; uni.request(&#123; url: url, method: 'GET', responseType: 'arraybuffer', header: &#123; Authorization: uni.getStorageSync('token'), // Authorization: token &#125;, success: (res) =&gt; &#123; let datas = res.data; let fileName = url.slice(url.indexOf('.') + 1); resolve( `data:image/$&#123;fileName&#125;;base64,` + uni.arrayBufferToBase64(datas), ); &#125;, &#125;); &#125;);&#125; 例子因为会出现多个&lt;image&gt;标签，同时转化base64有较长的等待时，所以做了当前设备判断，如果是安卓才会调用转换方法 1234567891011121314151617181920212223242526var arr = [ 'https://xxx.filename1', 'https://xxx.filename2', 'https://xxx.filename3', ...] //安卓设备 - 处理图片数组 handleImage(arr) &#123; let result = []; if (arr &amp;&amp; arr.length) &#123; if (uni.getSystemInfoSync().platform == \"android\") &#123; let base64 = []; arr.forEach((item) =&gt; &#123; fileStreamturn(item).then((res) =&gt; &#123; base64.push(res); &#125;); &#125;); result = base64; &#125; else &#123; result = arr; &#125; &#125; return result &#125;","categories":[],"tags":[]},{"title":"uni+微信小程序 按照速度区分颜色的轨迹图","slug":"uni-微信小程序-按照速度区分颜色的轨迹图","date":"2022-12-16T04:00:36.022Z","updated":"2022-12-19T02:34:03.871Z","comments":true,"path":"2022/12/16/uni-微信小程序-按照速度区分颜色的轨迹图/","link":"","permalink":"http://unknownfor.github.io/2022/12/16/uni-微信小程序-按照速度区分颜色的轨迹图/","excerpt":"","text":"记录一下需求，要求拿到用户的经纬度，然后按照30s一次上报后端，然后一次性获取所有的经纬度点，按照点与点之间不同的距离，计算出速度，然后绘制成带区分色的轨迹图 实现效果 data.jsoncode\":0, \"data\":[ &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:53:24\", \"dimension\":22.71166734498046, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.20920941391502, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:54:44\", \"dimension\":22.71166008788287, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.20898698228511, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:54:48\", \"dimension\":22.711693503519076, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.20875726100549, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:54:52\", \"dimension\":22.71189860469305, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.20869256136642, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:54:56\", \"dimension\":22.712181104603896, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.20886675764767, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:55:00\", \"dimension\":22.712506135198485, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.20907492939607, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:55:04\", \"dimension\":22.712842776280617, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.20928553737295, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:55:08\", \"dimension\":22.71319016342363, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.20949474032147, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:55:12\", \"dimension\":22.71350534020304, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.20971273260996, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:55:16\", \"dimension\":22.713791684549886, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.20990119142213, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:55:20\", \"dimension\":22.714036827858415, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.210070202799, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:55:24\", \"dimension\":22.714266030993794, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21023024427261, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:55:28\", \"dimension\":22.71442604665383, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21034282943285, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:55:32\", \"dimension\":22.71448621071001, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21037110912891, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:55:44\", \"dimension\":22.714628938239677, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21053399055451, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:55:48\", \"dimension\":22.71465771333451, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21087655322795, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:55:52\", \"dimension\":22.71467711256273, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21125094755847, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:55:56\", \"dimension\":22.714682375931073, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21161537704236, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:56:00\", \"dimension\":22.714676307593784, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21188376191323, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:56:04\", \"dimension\":22.71468110961003, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21212021982076, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:56:08\", \"dimension\":22.71466774066909, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21235499195997, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:56:12\", \"dimension\":22.714666955670868, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21253397872917, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:58:01\", \"dimension\":22.714657245049036, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21259598217958, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:58:04\", \"dimension\":22.714662977502993, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2128423931212, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:58:08\", \"dimension\":22.714679401534834, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21314766821581, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:58:12\", \"dimension\":22.714683542998344, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21349713948362, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:58:16\", \"dimension\":22.71469151639618, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21386985436938, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:58:20\", \"dimension\":22.71469840018674, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2142374541996, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:58:24\", \"dimension\":22.714710190772863, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21458169812438, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:58:28\", \"dimension\":22.714716666885508, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2149158067759, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:58:32\", \"dimension\":22.71472675842538, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2152932672711, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:58:36\", \"dimension\":22.714735544070944, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21567027290654, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:58:40\", \"dimension\":22.714746934638526, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21600937226607, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:58:44\", \"dimension\":22.71474531602733, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21630222070142, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:58:48\", \"dimension\":22.71475756560034, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21658579179083, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:58:52\", \"dimension\":22.7147754988659, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.216923014858, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:58:56\", \"dimension\":22.714778082401658, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21723619993996, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:59:00\", \"dimension\":22.714771523450338, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21741966309897, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:59:04\", \"dimension\":22.71476752614504, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.217509838215, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:59:08\", \"dimension\":22.714814057950495, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21756453898232, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:59:28\", \"dimension\":22.714767591707222, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21749000880261, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 07:59:32\", \"dimension\":22.71472381947862, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21744404043126, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:00:12\", \"dimension\":22.714752348555827, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21748934928218, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:00:16\", \"dimension\":22.71475485667822, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21755344828007, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:00:20\", \"dimension\":22.714760169035635, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21773959845069, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:00:24\", \"dimension\":22.714769784204858, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21798007952485, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:00:28\", \"dimension\":22.714785723413375, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21824364605955, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:00:32\", \"dimension\":22.71493339486867, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21843132531077, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:00:36\", \"dimension\":22.715199863798023, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21847183881765, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:00:40\", \"dimension\":22.715509457888327, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21850942074495, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:00:44\", \"dimension\":22.715853631525217, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21850705515993, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:00:48\", \"dimension\":22.716181958000874, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21849920971333, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:00:52\", \"dimension\":22.716512279117712, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21850405879921, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:00:56\", \"dimension\":22.716877387926818, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21852607528479, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:01:00\", \"dimension\":22.717256742057675, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21859467881966, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:01:04\", \"dimension\":22.71757489911249, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21853688333465, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:01:09\", \"dimension\":22.717906960690303, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21851826978653, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:01:12\", \"dimension\":22.718171144053734, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21849988191971, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:01:16\", \"dimension\":22.718276072397508, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21849159461227, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:01:24\", \"dimension\":22.71836093899089, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21848840588443, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:01:28\", \"dimension\":22.718414641729094, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21848963646993, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:01:32\", \"dimension\":22.71857582921908, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21851774902089, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:01:36\", \"dimension\":22.71877979594395, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21861123246154, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:01:40\", \"dimension\":22.71897988148927, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21876890707762, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:01:44\", \"dimension\":22.719097384788377, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2190075857295, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:01:48\", \"dimension\":22.719158065321334, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21935886891531, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:01:52\", \"dimension\":22.719167210823525, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.21970596141334, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:01:56\", \"dimension\":22.719162798310663, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22007604186517, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:02:00\", \"dimension\":22.71917403911972, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22050008235797, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:02:05\", \"dimension\":22.719190816569437, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2209074413749, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:02:08\", \"dimension\":22.71919999684288, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22128092063352, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:02:13\", \"dimension\":22.71920351711499, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22156255001013, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:02:17\", \"dimension\":22.719203258378997, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22186173834818, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:02:20\", \"dimension\":22.719207645832345, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22215030009414, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:02:24\", \"dimension\":22.71920405568835, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22240214346795, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:02:28\", \"dimension\":22.719208683027663, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22265103499771, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:02:32\", \"dimension\":22.71921596054, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22286667100457, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:02:36\", \"dimension\":22.719212489164047, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22303556516229, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:02:40\", \"dimension\":22.719214074548187, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22314687775298, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:02:44\", \"dimension\":22.719215404918966, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22320039821086, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:04:09\", \"dimension\":22.719229383015872, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22325904995131, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:04:12\", \"dimension\":22.719247885681625, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22352139464499, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:04:16\", \"dimension\":22.719345685784102, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2236893600681, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:04:20\", \"dimension\":22.719601773020415, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22369947601904, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:04:24\", \"dimension\":22.71990372911814, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22370368547439, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:04:28\", \"dimension\":22.720141059754024, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22370630417791, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:04:32\", \"dimension\":22.720293891651924, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22369638118128, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:04:36\", \"dimension\":22.720357608293583, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22368772077975, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:05:09\", \"dimension\":22.72045297180199, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.223680529476, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:05:16\", \"dimension\":22.72065023437033, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22369893678533, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:05:16\", \"dimension\":22.720927782074693, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22368698464251, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:05:21\", \"dimension\":22.721281873382114, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22369046840628, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:05:25\", \"dimension\":22.72165175116794, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22369204658347, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:05:32\", \"dimension\":22.72239796811318, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22366875208037, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:05:36\", \"dimension\":22.72276495788978, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22365914073147, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:05:39\", \"dimension\":22.72195955510468, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22368208250278, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:05:41\", \"dimension\":22.723115404139772, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22364878980729, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:05:44\", \"dimension\":22.72348123670898, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22364564646378, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:05:48\", \"dimension\":22.723777075907208, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22363753829237, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:05:52\", \"dimension\":22.723989433961908, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22362812776778, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:05:56\", \"dimension\":22.724106985277402, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2236377167716, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:06:00\", \"dimension\":22.724176690130662, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22363237061235, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:07:37\", \"dimension\":22.72426045244677, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22363277464207, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:07:40\", \"dimension\":22.7243611552018, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22376370901743, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:07:44\", \"dimension\":22.72434281109563, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22401779127807, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:07:48\", \"dimension\":22.72436471808387, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22408085703397, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:08:04\", \"dimension\":22.724414258355903, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22404719149297, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:08:16\", \"dimension\":22.724411529827755, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2239629756914, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:08:28\", \"dimension\":22.724424096331536, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22391458521047, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:09:12\", \"dimension\":22.724442259277566, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22373467710806, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:09:16\", \"dimension\":22.724557611434964, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22362538522293, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:09:20\", \"dimension\":22.72481035979971, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22362577890588, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:09:24\", \"dimension\":22.72509132813704, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22361513457489, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:09:28\", \"dimension\":22.725350975266284, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22360942991091, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:09:32\", \"dimension\":22.725575217952237, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22361712848125, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:09:36\", \"dimension\":22.725703060132563, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22361960120473, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:09:40\", \"dimension\":22.725770110263515, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22373559112553, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:09:44\", \"dimension\":22.72577355384784, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22386939514324, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:09:48\", \"dimension\":22.725756190711447, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22399552266337, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:09:52\", \"dimension\":22.72574931111423, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22422242720208, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:09:56\", \"dimension\":22.72575503498403, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22445080157111, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:10:00\", \"dimension\":22.725769937369844, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22465648933498, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:10:04\", \"dimension\":22.725780796093566, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22477231052068, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:10:12\", \"dimension\":22.72573571734934, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2248250427536, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:10:36\", \"dimension\":22.725786092733873, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22483288148169, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:10:48\", \"dimension\":22.72571394287688, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22476759522763, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:12:09\", \"dimension\":22.72585305418696, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22476451871387, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:12:52\", \"dimension\":22.72580279799154, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22482288047848, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:13:24\", \"dimension\":22.72573600445524, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22480912150246, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:13:28\", \"dimension\":22.72572342315431, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22491948180424, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:13:32\", \"dimension\":22.725726842403155, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22516580940378, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:13:36\", \"dimension\":22.725777503057266, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22545349807348, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:13:40\", \"dimension\":22.72579442669164, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22573199402697, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:13:44\", \"dimension\":22.725790322664423, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22598567527362, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:13:48\", \"dimension\":22.725807322913553, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2261648009138, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:13:52\", \"dimension\":22.72597017484282, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22627466734963, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:13:56\", \"dimension\":22.726235909857557, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22628217931974, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:14:00\", \"dimension\":22.72645181333114, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22627791908914, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:14:04\", \"dimension\":22.726658384578514, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22627337881853, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:14:08\", \"dimension\":22.726795490324864, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22625563774187, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:14:12\", \"dimension\":22.726843370470277, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2262585553525, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:14:36\", \"dimension\":22.727037200464363, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2262714437939, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:14:40\", \"dimension\":22.727275414533537, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22627275506666, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:14:44\", \"dimension\":22.727545943872638, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22626787902973, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:14:48\", \"dimension\":22.7277875946114, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22626371010828, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:14:52\", \"dimension\":22.728014256385656, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22626432194915, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:14:58\", \"dimension\":22.728233825276007, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22625611884581, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:15:00\", \"dimension\":22.728416909980673, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22626175938406, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:15:04\", \"dimension\":22.72856377499358, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2263356183156, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:15:08\", \"dimension\":22.728675564349615, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2265927655562, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:15:12\", \"dimension\":22.728760672050775, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22697604536071, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:15:16\", \"dimension\":22.728807158779542, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2273037835168, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:15:20\", \"dimension\":22.728814524082534, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22752356754961, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:15:24\", \"dimension\":22.728813210062818, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22758842673466, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:16:20\", \"dimension\":22.72881473763901, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22765259740675, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:16:24\", \"dimension\":22.728818144712097, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22782057189954, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:16:28\", \"dimension\":22.728824082351007, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2280724657185, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:16:32\", \"dimension\":22.72883118860196, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22830742036493, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:16:36\", \"dimension\":22.728826002057595, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22857529132177, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:16:40\", \"dimension\":22.728827598477814, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2289298514748, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:16:44\", \"dimension\":22.72885905076257, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22930232848607, \"type\":2, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:16:48\", \"dimension\":22.72887443183621, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.22964344083444, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:16:52\", \"dimension\":22.728875280794473, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2299756710356, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:16:56\", \"dimension\":22.72886726238431, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23026145947337, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:17:00\", \"dimension\":22.728874592342425, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23053435242863, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:17:04\", \"dimension\":22.728851788835954, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23074737158144, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:17:08\", \"dimension\":22.728800313937484, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23090861276462, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:17:12\", \"dimension\":22.728785884702628, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23100681657283, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:17:16\", \"dimension\":22.72872533619655, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23111297557733, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:17:20\", \"dimension\":22.728648872136336, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23119766786047, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:17:24\", \"dimension\":22.728578514272055, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2312773885663, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:17:32\", \"dimension\":22.728548164280173, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23131429891129, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:17:36\", \"dimension\":22.72854287759444, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23144927720902, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:17:40\", \"dimension\":22.72853441113965, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23163096325663, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:17:44\", \"dimension\":22.728522280591857, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23178192797546, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:17:48\", \"dimension\":22.728513896511778, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2318914178959, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:17:52\", \"dimension\":22.728516247798495, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.2319505166727, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:18:04\", \"dimension\":22.728531854471473, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23188782447674, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:18:20\", \"dimension\":22.72856907216821, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23184311580049, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:19:41\", \"dimension\":22.728549651292568, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23190946202295, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:19:48\", \"dimension\":22.728484035448844, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23195466842698, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:19:52\", \"dimension\":22.728468979964976, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23200427100286, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:20:08\", \"dimension\":22.728396381850423, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23198996893971, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:20:16\", \"dimension\":22.728312422760563, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23200911462374, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:20:24\", \"dimension\":22.72828229345752, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23205842689165, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:20:39\", \"dimension\":22.728305758963234, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23198744767465, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:21:06\", \"dimension\":22.728541, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232045, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:21:38\", \"dimension\":22.727982, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232259, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:22:00\", \"dimension\":22.727973, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23234, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:23:41\", \"dimension\":22.727988, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232656, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:35:45\", \"dimension\":22.727992, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232722, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 08:36:17\", \"dimension\":22.72797, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23236, \"type\":0, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:01:51\", \"dimension\":22.727993, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232074, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:02:12\", \"dimension\":22.727792, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.231854, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:02:55\", \"dimension\":22.72758, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232564, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:04:03\", \"dimension\":22.727792, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.231854, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:04:23\", \"dimension\":22.72758, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232564, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:04:36\", \"dimension\":22.727804, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.231872, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:05:16\", \"dimension\":22.727962, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232328, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:11:56\", \"dimension\":22.727581, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232533, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:12:36\", \"dimension\":22.727961, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232336, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:14:36\", \"dimension\":22.727581, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232533, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:14:44\", \"dimension\":22.727936, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232363, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:16:52\", \"dimension\":22.727154, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232758, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:19:36\", \"dimension\":22.727936, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232358, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:21:20\", \"dimension\":22.727978, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232074, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:21:40\", \"dimension\":22.72758, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232675, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:22:44\", \"dimension\":22.727166, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.23275, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:27:28\", \"dimension\":22.727936, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232358, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:40:49\", \"dimension\":22.727578, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232711, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:41:53\", \"dimension\":22.727935, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232366, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:42:09\", \"dimension\":22.727578, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232711, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:42:57\", \"dimension\":22.727988, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232071, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:44:21\", \"dimension\":22.727791, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.231911, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:45:01\", \"dimension\":22.727988, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232071, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:45:33\", \"dimension\":22.727791, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.231911, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:46:01\", \"dimension\":22.727988, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232071, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:46:05\", \"dimension\":22.727935, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232366, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:47:33\", \"dimension\":22.727791, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.231911, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:47:49\", \"dimension\":22.727936, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232358, \"type\":4, \"userId\":\"110169488214196224\" &#125;, &#123; \"attendancegroupid\":\"5fe1e81368cb5a441f573e3f7ef79fa2\", \"createTime\":\"2022-12-16 10:50:39\", \"dimension\":22.727973, \"employeeNo\":\"e3226256812343558144\", \"enterpriseId\":\"c2226256812326780928\", \"longitude\":114.232073, \"type\":4, \"userId\":\"110169488214196224\" &#125; ], \"extra\":&#123; &#125;, \"msg\":\"请求成功!\", \"state\":200&#125; index.vue123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330&lt;template&gt; &lt;map id=\"polylineMap\" :longitude=\"longitude\" :latitude=\"latitude\" :markers=\"markers\" :scale=\"scale\" :polyline=\"polyline\" :style=\"&#123;height: height,width:width&#125;\"&gt;&lt;/map&gt;&lt;/template&gt;&lt;script&gt;export default &#123; props: &#123; height: &#123; type: String, default: '100vh' &#125;, width: &#123; type: String, default: '100%' &#125;, points: &#123; type: Array, default() &#123; return [] &#125; &#125;, username: &#123; type: String, default: '' &#125; &#125;, data() &#123; return &#123; maxSpeed: null, // 最快速度的点 scale: 4, // 地图缩放比例 markers: [], // 标记点集合 polyline: [&#123; points: [], &#125;,], // 坐标点集合 latitude: 39.909, longitude: 116.39742, // 中间点 centerPoint: &#123; latitude: 0, longitude: 0 &#125;, &#125; &#125;, watch: &#123; points(e) &#123; let that = this; if (that.points.length &gt; 0) &#123; that.setDateByPoints(that.points); &#125; &#125;, &#125;, created: function () &#123; let that = this; if (that.points.length &gt; 0) &#123; that.setDateByPoints(that.points); &#125; &#125;, methods: &#123; // 根据速度计算路线颜色 computePointsSpeed(points) &#123; let lineColor = '#ffd500' let list = [] if (!points || !points.length) &#123; return list &#125; let lastArr = [] let lastSpeed = 0 for (let i = 0; i &lt; points.length; i++) &#123; let speed = this.covertSpeed(points[i].speed) if (!this.maxSpeed) &#123; this.maxSpeed = points[i] &#125; else &#123; if (points[i].speed &gt; this.maxSpeed.speed) &#123; this.maxSpeed = points[i] &#125; &#125; if (i === points.length - 1 || !speed) &#123; // 还剩最后一个不计入 continue &#125; let nextPoint = points[i + 1] let nextSpeed = this.covertSpeed(points[i + 1].speed) if (!nextSpeed) &#123; continue &#125; lastSpeed = speed if (!lastArr.length) &#123; lastArr.push(points[i], nextPoint) &#125; else &#123; lastArr.push(nextPoint) &#125; if (speed &lt;= 20) &#123; lineColor = '#ffd500' if (nextSpeed &gt; 20) &#123; // 清空 list.push(&#123; points: lastArr, color: lineColor, arrowLine: true, //带箭头的线 width: 8, &#125;) lastArr = [] &#125; &#125; if (speed &gt; 20 &amp;&amp; speed &lt;= 40) &#123; lineColor = '#ff8800' if (nextSpeed &lt;= 20 || nextSpeed &gt; 40) &#123; // 清空 list.push(&#123; points: lastArr, color: lineColor, arrowLine: true, //带箭头的线 width: 8, &#125;) lastArr = [] &#125; &#125; if (speed &gt; 40 &amp;&amp; speed &lt;= 60) &#123; lineColor = '#ff5d00' if (nextSpeed &lt;= 40 || nextSpeed &gt; 60) &#123; // 清空 list.push(&#123; points: lastArr, color: lineColor, arrowLine: true, //带箭头的线 width: 8, &#125;) lastArr = [] &#125; &#125; if (speed &gt; 60 &amp;&amp; speed &lt;= 80) &#123; lineColor = '#ff4d00' if (nextSpeed &lt;= 60 || nextSpeed &gt; 80) &#123; // 清空 list.push(&#123; points: lastArr, color: lineColor, arrowLine: true, //带箭头的线 width: 8, &#125;) lastArr = [] &#125; &#125; if (speed &gt; 80 &amp;&amp; speed &lt;= 100) &#123; lineColor = '#ff3d00' if (nextSpeed &lt;= 80 || nextSpeed &gt; 100) &#123; // 清空 list.push(&#123; points: lastArr, color: lineColor, arrowLine: true, //带箭头的线 width: 8, &#125;) lastArr = [] &#125; &#125; if (speed &gt; 100 &amp;&amp; speed &lt;= 120) &#123; lineColor = '#ff2d00' if (nextSpeed &lt;= 100 || nextSpeed &gt; 120) &#123; // 清空 list.push(&#123; points: lastArr, color: lineColor, arrowLine: true, //带箭头的线 width: 8, &#125;) lastArr = [] &#125; &#125; if (speed &gt; 120) &#123; lineColor = '#ff1d00' if (nextSpeed &lt;= 120) &#123; // 清空 list.push(&#123; points: lastArr, color: lineColor, arrowLine: true, //带箭头的线 width: 8, &#125;) lastArr = [] &#125; &#125; &#125; this.centerPoint = points[Math.round(points.length / 2)] console.log(\"centerPoint\", this.centerPoint) if (!list.length &amp;&amp; lastArr.length) &#123; list.push(&#123; points: lastArr, color: lineColor, arrowLine: true, //带箭头的线 width: 8, &#125;) &#125; return list &#125;, // 设置路线和点 setDateByPoints(points) &#123; let that = this; let color = \"#ffd500\" // 标记点集合 that.polyline = this.computePointsSpeed(points) if (!that.polyline.length) &#123; that.polyline = [&#123; points: points, color: color, arrowLine: true, //带箭头的线 width: 8, &#125;] &#125; // // 极速点 // if (that.maxSpeed) &#123; // that.maxSpeed.iconPath = '/' // that.maxSpeed.width = 0 // that.maxSpeed.height = 0 // that.maxSpeed.id = 2 // that.maxSpeed.callout = &#123; // anchorY: 0, // anchorX: 0, // display: 'ALWAYS', // color: '#5d5d5d', // fontSize: 14, // borderRadius: 6, // padding: 8, // bgColor: '#fff', // content: `$&#123;this.username&#125; $&#123;this.username ? ':' : ''&#125;极速 $&#123;this.covertSpeed(this.maxSpeed.speed)&#125; km/h` // &#125; // that.markers.push(this.maxSpeed) // &#125; let map_obj = &#123; anchorY: 0, anchorX: 0, display: 'ALWAYS', color: '#fff', fontSize: 14, borderRadius: 8, padding: 8, &#125; let start = &#123; ...points[0], id: 1, width: 1, height: 1, iconPath: '/', callout: &#123; ...map_obj, bgColor: '#4C8AFC', content: '起' &#125; &#125; let end = &#123; ...points[points.length - 1], id: 3, width: 1, height: 1, iconPath: '/', callout: &#123; ...map_obj, bgColor: '#E74B47', content: '终' &#125; &#125; that.markers.push(start, end); this.setCenterPoint(start, end) &#125;, // 地图中心点 （计算3个点的中心点） setCenterPoint(start, end) &#123; this.longitude = (start.longitude + this.centerPoint.longitude + end.longitude) / 3 this.latitude = (start.latitude + this.centerPoint.latitude + end.latitude) / 3 let distance1 = this.getDistance(start.latitude, start.longitude, this.centerPoint.latitude, this.centerPoint.longitude) let distance2 = this.getDistance(this.centerPoint.latitude, this.centerPoint.longitude, end.latitude, end.longitude) const distance = Number(distance1) + Number(distance2) console.log('计算两点之间的距离', distance1, distance2, distance) if (distance &lt; 200) &#123; this.scale = 17 &#125; if (distance &gt;= 200 &amp;&amp; distance &lt; 1000) &#123; this.scale = 15 &#125; if (distance &gt;= 1000 &amp;&amp; distance &lt; 5000) &#123; this.scale = 13 &#125; if (distance &gt;= 5000 &amp;&amp; distance &lt; 10000) &#123; this.scale = 12 &#125; if (distance &gt;= 10000 &amp;&amp; distance &lt; 15000) &#123; this.scale = 11 &#125; if (distance &gt;= 15000 &amp;&amp; distance &lt; 50000) &#123; this.scale = 10 &#125; if (distance &gt;= 50000 &amp;&amp; distance &lt; 200000) &#123; this.scale = 8 &#125; if (distance &gt; 200000) &#123; this.scale = 5 &#125; &#125;, // 速度转换 m/s -&gt; km/h covertSpeed(ms) &#123; if (ms &lt;= 0) &#123; return 0.00 &#125; const kmh = ms * (60 * 60) return parseFloat(String(kmh / 1000)).toFixed(2) &#125;, // 计算两坐标点之间的距离 getDistance: function (lat1, lng1, lat2, lng2) &#123; let rad1 = lat1 * Math.PI / 180.0; let rad2 = lat2 * Math.PI / 180.0; let a = rad1 - rad2; let b = lng1 * Math.PI / 180.0 - lng2 * Math.PI / 180.0; let r = 6378137; return (r * 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) + Math.cos(rad1) * Math.cos(rad2) * Math.pow(Math .sin(b / 2), 2)))).toFixed(0) &#125; &#125;&#125;&lt;/script&gt;","categories":[],"tags":[]},{"title":"uni-微信小程序 分包","slug":"uni-微信小程序-分包","date":"2022-12-09T08:48:54.000Z","updated":"2023-02-09T09:06:27.575Z","comments":true,"path":"2022/12/09/uni-微信小程序-分包/","link":"","permalink":"http://unknownfor.github.io/2022/12/09/uni-微信小程序-分包/","excerpt":"","text":"提前拆分模块任务，把主包压缩小点，UI设计给了太多本地资源静态图，所以需要连图也一起分包，记录下 · 整个小程序所有分包大小不超过 20M· 单个分包/主包大小不能超过 2M 结果静态资源生成路径 123/mp-weixin/pages_tools/pages // 分包代码/mp-weixin/pages_tools/static // 分包静态资源 vue.config.js12345678910111213141516171819const webpack = require('webpack')const path = require('path')const CopyWebpackPlugin = require('copy-webpack-plugin')module.exports = &#123; configureWebpack: &#123; plugins: [ new webpack.ContextReplacementPlugin( /zh-cn/, ), new CopyWebpackPlugin([ &#123; from: path.join(__dirname, '/static'), to: path.join(__dirname+'/unpackage/', 'dist', process.env.NODE_ENV === 'production' ? 'build' : 'dev', process.env.UNI_PLATFORM, '/') &#125; ]) ] &#125;&#125; 根目录执行命令1npm install copy-webpack-plugin --save-dev manifest.json123\"mp-weixin\": &#123; \"usingComponents\": true &#125; pages.json1234567891011121314151617181920212223242526272829303132\"subPackages\": [ &#123; \"root\": \"pages_index\", // 首页 \"pages\": [ &#123; \"path\": \"index\", \"style\": &#123; \"navigationStyle\": \"custom\" &#125; &#125; ] &#125;, &#123; \"root\": \"pages_tools\", // 工具 \"pages\": [ &#123; \"path\": \"test/index\", \"style\": &#123; \"navigationBarTitleText\": \"uni-app\" &#125; &#125; &#125;， &#123; \"root\": \"pages_salary\", // 工资 \"pages\": [ &#123; \"path\": \"test/index\", \"style\": &#123; \"navigationBarTitleText\": \"uni-app\" &#125; &#125; &#125; static图片资源分包，文件夹取名也需要对应pages.json下的文件夹命名 12/pages_tools/static/images// 放图片的文件夹，用于放分包图片资源，需要和分包名称对应 在index.vue内引入图片路径： 1&lt;image src=\"/pages_tools/static/images/test.svg\" /&gt;","categories":[],"tags":[{"name":"uniapp","slug":"uniapp","permalink":"http://unknownfor.github.io/tags/uniapp/"},{"name":"微信小程序","slug":"微信小程序","permalink":"http://unknownfor.github.io/tags/微信小程序/"},{"name":"移动端","slug":"移动端","permalink":"http://unknownfor.github.io/tags/移动端/"}]},{"title":"setTimeout定时器 延迟bug","slug":"setTimeout定时器 延迟","date":"2022-12-09T08:26:44.000Z","updated":"2023-02-09T08:39:43.326Z","comments":true,"path":"2022/12/09/setTimeout定时器 延迟/","link":"","permalink":"http://unknownfor.github.io/2022/12/09/setTimeout定时器 延迟/","excerpt":"","text":"问题线上遇到bug，写了定时器，展示打卡时间读秒，结果定时器越跑延迟越大，用setTimeout fix了。记录下 12345678910111213//timeRange为定时器时间间隔var startTime = new Date().getTime();var count = 0;function handle () &#123; count++; var offset = new Date().getTime() - (startTime + count * timeRange); var nextTime = timeRange - offset; if (nextTime &lt; 0) nextTime = 0; timer = setTimeout(handle, nextTime); totalDiatane += distanceBlock document.getElementById('distance').innerText = totalDiatane.toFixed(2)&#125;timer = setTimeout(handle, timeRange);","categories":[],"tags":[{"name":"uniapp","slug":"uniapp","permalink":"http://unknownfor.github.io/tags/uniapp/"},{"name":"微信小程序","slug":"微信小程序","permalink":"http://unknownfor.github.io/tags/微信小程序/"},{"name":"移动端","slug":"移动端","permalink":"http://unknownfor.github.io/tags/移动端/"}]},{"title":"vue3.0+ts+原生高德地图","slug":"vue3-0-ts-原生高德地图","date":"2022-11-09T05:49:23.000Z","updated":"2023-02-09T08:38:11.849Z","comments":true,"path":"2022/11/09/vue3-0-ts-原生高德地图/","link":"","permalink":"http://unknownfor.github.io/2022/11/09/vue3-0-ts-原生高德地图/","excerpt":"","text":"index.vue123456789101112131415161718192021222324252627282930313233&lt;template&gt; &lt;div style=\"width:100%;height:400px;\" id=\"container\" &gt;&lt;/div&gt;&lt;/template&gt;&lt;script lang=\"ts\"&gt;import &#123; defineComponent, onMounted &#125; from \"vue\";export default defineComponent(&#123; name: \"Home\", setup() &#123; onMounted(() =&gt; &#123; mapInit(); &#125;); const mapInit = () =&gt; &#123; let marker, map = new AMap.Map(\"container\", &#123; resizeEnable: true, center: [120.439915, 36.160679], zoom: 18 &#125;); marker = new AMap.Marker(&#123; icon: \"http://a.amap.com/jsapi_demos/static/demo-center/icons/poi-marker-default.png\", position: [120.439915, 36.160679], // offset: new AMap.Pixel(-13, -30) &#125;); marker.setMap(map); &#125;; &#125;,&#125;);&lt;/script&gt; 引入高德SDK1234567891011&lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\"&gt; &lt;link rel=\"icon\" href=\"&lt;%= BASE_URL %&gt;favicon.ico\"&gt; &lt;title&gt; &lt;%= htmlWebpackPlugin.options.title %&gt; &lt;/title&gt; &lt;script type=\"text/javascript\" src=\"https://webapi.amap.com/maps?v=1.4.15&amp;key=你的key&amp;plugin=AMap.ToolBar\"&gt;&lt;/script&gt;&lt;/head&gt; webpack配置为了防止打包时把高德纳入，我们需要在webpack中配置，这里以vue.config.js为例 12345configureWebpack: config =&gt; &#123; config[\"externals\"] = &#123; 'AMap': \"AMap\" // 高德地图配置 &#125;;&#125;, 声明文件用了typescript，那么就是想运用到它的类型提醒功能，那么必不可少地需要引入高德地图的声明文件，由于官方也没有给出，我们只能根据api文档来自己书写自己需要用到的函数声明，下面是我们项目中大部分会用到的声明，可以在src目录下新建一个types文件夹专门用于存放声明文件：src/types/Amap.d.tsdeclare namespace AMap &#123; /**此对象用于表示地图、覆盖物、叠加层上的各种鼠标事件返回，包含以下字段： 高德的事件说明文档有问题； 不是 LngLat 类，而是一个普通对象; **/ export class MapsEvent &#123; /** 发生事件时光标所在处的经纬度坐标 **/ public lnglat: &#123; lng: number, lat: number &#125;; /** 发生事件时光标所在处的像素坐标 **/ public pixel: &#123; x: number, y: number &#125;; /** 事件类型。 **/ public type: string; /** 发生事件的目标对象。 **/ public target: any; &#125; /** 像素坐标, 确定地图上的一个像素点。 **/ export class Pixel &#123; /**构造一个像素坐标对象。**/ constructor(x: number, y: number); /**获得X方向像素坐标**/ public getX(): number; /**获得Y方向像素坐标**/ public getY(): number; /**当前像素坐标与传入像素坐标是否相等**/ public equals(point: Pixel): boolean; /**以字符串形式返回像素坐标对象**/ public toString(): string; &#125; /** 地物对象的像素尺寸 **/ export class Size &#123; /**构造尺寸对象。参数width: 宽度, height: 长度, 单位: 像素；**/ constructor(width: number, height: number); /**获得宽度。**/ public getWidth(): number; /**获得高度。**/ public getHeight(): number; /**以字符串形式返回尺寸大小对象(自v1.2 新增)**/ public toString(): string; &#125; /** 经纬度坐标, 确定地图上的一个点。 **/ export class LngLat &#123; /**构造一个地理坐标对象, lng、lat分别代表经度、纬度值**/ constructor(lng: number, lat: number); /**当前经纬度坐标值经度移动w, 纬度移动s, 得到新的坐标。经度向右移为正值, 纬度向上移为正值, 单位为米。(自v1.2 新增)**/ public offset(w: number, s: number): LngLat; /**当前经纬度和传入经纬度或者经纬度数组连线之间的地面距离, 单位为米 相关示例**/ public distance(lnglat: LngLat | Array&lt;LngLat&gt;): number; /**获取经度值。(自v1.2 新增)**/ public getLng(): number; /**获取纬度值。(自v1.2 新增)**/ public getLat(): number; /**判断当前坐标对象与传入坐标对象是否相等**/ public equals(lnglat: LngLat): boolean; /**LngLat对象以字符串的形式返回。**/ public toString(): string; &#125; /** 地物对象的经纬度矩形范围。 **/ export class Bounds &#123; /**矩形范围的构造函数.参数southWest、northEast分别代表地物对象西南角经纬度和东北角经纬度值。**/ constructor(southWest: LngLat, northEast: LngLat); /**指定点坐标是否在矩形范围内 相关示例**/ public contains(point: LngLat): boolean; /**获取当前Bounds的中心点经纬度坐标。**/ public getCenter(): LngLat; /**获取西南角坐标。**/ public getSouthWest(): LngLat; /**获取东北角坐标**/ public getNorthEast(): LngLat; /**以字符串形式返回地物对象的矩形范围**/ public toString(): string; &#125; /** MapOptions **/ export interface MapOptions &#123; /**地图视口, 用于控制影响地图静态显示的属性, 如: 地图中心点“center”推荐直接使用zoom、center属性为地图指定级别和中心点(自v1.3 新增)**/ view?: View2D; /**地图图层数组, 数组可以是图层 中的一个或多个, 默认为普通二维地图。当叠加多个图层时, 普通二维地图需通过实例化一个TileLayer类实现(自v1.3 新增)**/ layers?: Array&lt;any&gt;; /**地图显示的缩放级别, 若center与level未赋值, 地图初始化默认显示用户所在城市范围 3D地图下, zoom值, 可以设置为浮点数。(在V1.3.0版本level参数调整为zoom, 3D地图修改自V1.4.0开始生效)**/ zoom?: number; /**地图中心点坐标值**/ center?: LngLat | number[]; /**3D模式下的地图旋转角度 */ rotation?: number; /**地图标注显示顺序, 大于110即可将底图上的默认标注显示在覆盖物(圆、折线、面)之上。**/ labelzIndex?: number; /**地图显示的缩放级别范围在PC上, 默认为[3, 18], 取值范围[3-18]；在移动设备上, 默认为[3, 19], 取值范围[3-19]**/ zooms?: Array&lt;any&gt;; /**地图语言类型可选值: zh_cn: 中文简体, en: 英文, zh_en: 中英文对照默认为: zh_cn: 中文简体注: 由于图面内容限制, 中文、英文 、中英文地图POI可能存在不一致的情况(自v1.3 新增)**/ lang?: string; /**地图默认鼠标样式。参数defaultCursor应符合CSS的cursor属性规范**/ defaultCursor?: string; /**地图显示的参考坐标系, 取值: 'EPSG3857''EPSG3395''EPSG4326'自V1.3.0移入view对象中**/ crs?: string; /**地图平移过程中是否使用动画(如调用panBy、panTo、setCenter、setZoomAndCenter等函数, 将对地图产生平移操作, 是否使用动画平移的效果), 默认为true, 即使用动画**/ animateEnable?: boolean; /**是否开启地图热点, 默认false 不打开(自v1.3 新增)**/ isHotspot?: boolean; /**当前地图中默认显示的图层。默认图层可以是TileLayer.Satellite等切片地图, 也可以是通过TileLayer自定义的切片图层(自v1.3 废弃)**/ // defaultLayer?: TileLayer; /**地图是否可旋转, 默认false。3D视图默认为true, 2D视图默认false。(V1.3版本新增, 3D视图自V1.4.0开始支持)**/ rotateEnable?: boolean; /**是否监控地图容器尺寸变化, 默认值为false**/ resizeEnable?: boolean; /**是否在有矢量底图的时候自动展示室内地图, PC端默认是true, 移动端默认是false**/ showIndoorMap?: boolean; /**在展示矢量图的时候自动展示室内地图图层, 当地图complete之后可以获取到该对象**/ // indoorMap?: IndoorMap; /**是否支持可以扩展最大缩放级别, 和zooms属性配合使用设置为true的时候, zooms的最大级别在PC上可以扩大到20级, 移动端还是高清19/非高清20**/ expandZoomRange?: boolean; /**地图是否可通过鼠标拖拽平移, 默认为true。此属性可被setStatus/getStatus 方法控制**/ dragEnable?: boolean; /**地图是否可缩放, 默认值为true。此属性可被setStatus/getStatus 方法控制**/ zoomEnable?: boolean; /**地图是否可通过双击鼠标放大地图, 默认为true。此属性可被setStatus/getStatus 方法控制**/ doubleClickZoom?: boolean; /**地图是否可通过键盘控制, 默认为true方向键控制地图平移, \"+\"和\"-\"可以控制地图的缩放, Ctrl+“→”顺时针旋转, Ctrl+“←”逆时针旋转。此属性可被setStatus/getStatus 方法控制**/ keyboardEnable?: boolean; /**地图是否使用缓动效果, 默认值为true。此属性可被setStatus/getStatus 方法控制**/ jogEnable?: boolean; /**地图是否可通过鼠标滚轮缩放浏览, 默认为true。此属性可被setStatus/getStatus 方法控制**/ scrollWheel?: boolean; /**地图在移动终端上是否可通过多点触控缩放浏览地图, 默认为true。关闭手势缩放地图, 请设置为false。**/ touchZoom?: boolean; /**可缺省, 当touchZoomCenter=1的时候, 手机端双指缩放的以地图中心为中心, 否则默认以双指中间点为中心**/ touchZoomCenter?: number; /**设置地图的显示样式, 目前支持两种地图样式: 第一种: 自定义地图样式, 如\"amap: //styles/d6bf8c1d69cea9f5c696185ad4ac4c86\"可前往地图自定义平台定制自己的个性地图样式；第二种: 官方样式模版, 如\"amap: //styles/grey\"。其他模版样式及自定义地图的使用说明见开发指南**/ mapStyle?: string; /**设置地图上显示的元素种类支持'bg'(地图背景)、'point'(POI点)、'road'(道路)、'building'(建筑物)**/ features?: Array&lt;any&gt;; /**设置地图显示3D楼块效果, 移动端也可使用。推荐使用。**/ showBuildingBlock?: boolean; /**默认为‘2D’, 可选’3D’, 选择‘3D’会显示 3D 地图效果。(自V1.4.0开始支持)**/ viewMode?: string; /**俯仰角度, 默认0, [0, 83], 2D地图下无效 。(自V1.4.0开始支持)**/ pitch?: number; /**是否允许设置俯仰角度, 3D视图下为true, 2D视图下无效。(自V1.4.0开始支持)**/ pitchEnable?: boolean; /**楼块出现和消失的时候是否显示动画过程, 3D视图有效, PC端默认true, 手机端默认false。(自V1.4.0开始支持)**/ buildingAnimation?: boolean; /**调整天空颜色, 配合自定义地图, 3D视图有效, 如‘#ff0000’。(自V1.4.0开始支持)**/ skyColor?: string; /**设置地图的预加载模式, 开启预加载的地图会在适当时刻提前加载周边和上一级的地图数据, 优化使用体验。该参数默认值true。 (自v1.4.4开始支持)**/ preloadMode?: boolean; &#125; /** 地图对象类, 封装了地图的属性设置、图层变更、事件交互等接口的类。相关示例 **/ export class Map &#123; /**构造一个地图对象, 参数container中传入地图容器DIV的ID值或者DIV对象, opts地图初始化参数对象, 参数详情参看MapOptions列表。**/ constructor(container: string | HTMLDivElement, opts: MapOptions); /**唤起高德地图客户端marker页其中Object里面包含有&#123; id: \"B000A7BD6C\", POIIDname: String, 必要参数location: LngLat|position属性 必须参数&#125;**/ public poiOnAMAP(obj: any): void; /**唤起高德地图客户端marker详情页其中Object里面包含有&#123; id: \"B000A7BD6C\", POIIDname: String, 必要参数location: LngLat|position属性 必须参数&#125;**/ public detailOnAMAP(obj: any): void; /**获取当前地图缩放级别, 在PC上, 默认取值范围为[3, 18]；在移动设备上, 默认取值范围为[3-19]3D地图会返回浮点数, 2D视图为整数。(3D地图自V1.4.0开始支持)**/ public getZoom(): number; /**获取地图图层数组, 数组为一个或多个图层(自v1.3 新增)**/ public getLayers(): Array&lt;any&gt;; /**获取地图中心点经纬度坐标值。**/ public getCenter(): LngLat; /**返回地图对象的容器**/ public getContainer(): HTMLDivElement; /**获取地图中心点所在区域, 回调函数返回对象属性分别对应为&#123;省, 市, 区/县&#125;**/ public getCity(callback: (province: string, city: string, citycode: string, district: string) =&gt; void): void; /**获取当前地图视图范围, 获取当前可视区域。3D地图下返回类型为ArrayBounds, 2D地图下仍返回Bounds 。(3D自V1.4.0开始支持)**/ public getBounds(): Bounds; /**获取当前地图标注的显示顺序**/ public getLabelzIndex(): number; /**获取Map的限制区域**/ public getLimitBounds(): Bounds; /**获取底图语言类型(自v1.3 新增)**/ public getLang(): string; /**获取地图容器像素大小**/ public getSize(): Size; /**获取地图顺时针旋转角度(自v1.3 新增)**/ public getRotation(): number; /**获取当前地图状态信息, 包括是否可鼠标拖拽移动地图、地图是否可缩放、地图是否可旋转(rotateEnable)、是否可双击放大地图、是否可以通过键盘控制地图旋转(keyboardEnable)等**/ public getStatus(): any; /**获取地图默认鼠标指针样式**/ public getDefaultCursor(): string; /**获取指定位置的地图分辨率, 单位: 米/像素。 参数point有指定值时, 返回指定点地图分辨率, point缺省时, 默认返回当前地图中心点位置的分辨率**/ public getResolution(point: LngLat): number; /**获取当前地图比例尺。其值为当前地图中心点处比例尺值的倒数**/ public getScale(dpi: number): number; /**设置地图显示的缩放级别, 在PC上, 参数zoom可设范围: [3, 18]；在移动端: 参数zoom可设范围: [3, 19]3D地图下, 可将zoom设置为浮点数。(3D自V1.4.0开始支持)**/ public setZoom(level: number): void; /**设置地图标注显示的顺序**/ public setlabelzIndex(index: number): void; /**设置地图图层数组, 数组为一个或多个图层。当叠加多个图层时, 普通二维地图需通过实例化一个TileLayer类实现(自v1.3 新增)**/ public setLayers(layers: Array&lt;any&gt;): void; /**添加地图覆盖物数组, 数组为一个或多个覆盖物。**/ public add(overlayers: Array&lt;any&gt;): void; /**删除地图覆盖物数组, 数组为一个或多个覆盖物。**/ public remove(overlayers: Array&lt;any&gt;): void; /**返回添加的覆盖物对象, 可选类型包括marker、circle、polyline、polygon； Type可缺省, 缺省时返回所有覆盖物(marker、circle、polyline、polygon)。 返回结果不包含官方覆盖物等, 比如定位marker, 周边搜索圆等**/ public getAllOverlays(type: any): any; /**设置地图显示的中心点**/ public setCenter(position: LngLat | number[]): void; /**地图缩放至指定级别并以指定点为地图显示中心点**/ public setZoomAndCenter(zoomLevel: number, center: LngLat | number[]): void; /**按照行政区名称或adcode来设置地图显示的中心点。行政区名称支持中国、省、市、区/县名称, 如遇重名的情况, 会按城市编码表顺序返回第一个。adcode请在城市编码表中查询。建议不要同时使用center/setCenter()和setCity(), 如一起使用程序将以setCity()作为最后结果。 相关示例**/ public setCity(city: string, callback: Function): void; /**指定当前地图显示范围, 参数bounds为指定的范围**/ public setBounds(bound: Bounds): void; /**设置Map的限制区域, 设定区域限制后, 传入参数为限制的Bounds。地图仅在区域内可拖拽 相关示例**/ public setLimitBounds(bound: Bounds): void; /**清除限制区域**/ public clearLimitBounds(): void; /**设置地图语言类型, 设置后底图重新加载(自v1.3 新增)**/ public setLang(lang: string): string; /**设置地图顺时针旋转角度, 旋转原点为地图容器中心点, 取值范围 [0-360](自v1.3 新增)**/ public setRotation(rotation: number): number; /**设置当前地图显示状态, 包括是否可鼠标拖拽移动地图、地图是否可缩放、地图是否可旋转(rotateEnable)、是否可双击放大地图、是否可以通过键盘控制地图旋转(keyboardEnable)等 相关示例**/ public setStatus(status: any): void; /**设置鼠标指针默认样式, 参数cursor应符合CSS的cursor属性规范。可为CSS标注中的光标样式, 如: setCursor(“pointer”)等；或者自定义的光标样式, 如: setCursor(\"url('http: //http://lbs.amap.com/webapi/static/Images//0.png'), pointer\")**/ public setDefaultCursor(cursor: string): void; /**地图放大一级显示**/ public zoomIn(): void; /**地图缩小一级显示**/ public zoomOut(): void; /**地图中心点平移至指定点位置**/ public panTo(positon: LngLat): void; /**以像素为单位, 沿x方向和y方向移动地图, x向右为正, y向下为正**/ public panBy(x: number, y: number): void; /**根据地图上添加的覆盖物分布情况, 自动缩放地图到合适的视野级别, 参数overlayList默认为当前地图上添加的所有覆盖物图层**/ public setFitView(overlayList: Array&lt;any&gt;): void; /**删除地图上所有的覆盖物**/ public clearMap(): void; /**注销地图对象, 并清空地图容器**/ public destroy(): void; /**插件加载方法。参数name中指定需要加载的插件类型, 同时加载多个插件时, 以字符串数组的形式添加。在Callback回调函数中进行地图插件的创建、插件事件的绑定等操作；插件为地图功能的扩展, 按需加载；插件写作方法, 请参考相关示例。**/ public plugin(name: string | Array&lt;any&gt;, callback: Function): void; /**添加控件。参数可以是插件列表中的任何插件对象, 如: ToolBar、OverView、Scale等**/ public addControl(obj: any): void; /**移除地图上的指定控件**/ public removeControl(obj: any): void; /**清除地图上的信息窗体。**/ public clearInfoWindow(): void; /**平面地图像素坐标转换为地图经纬度坐标 相关示例**/ public pixelToLngLat(pixel: Pixel, level: number): LngLat; /**地图经纬度坐标转换为平面地图像素坐标**/ public lnglatToPixel(lngLat: LngLat, level: number): Pixel; /**地图容器像素坐标转为地图经纬度坐标 相关示例**/ public containerToLngLat(pixel: Pixel): LngLat; /**地图经纬度坐标转为地图容器像素坐标**/ public lngLatToContainer(lnglat: LngLat): Pixel; /**设置地图的显示样式, 目前支持两种地图样式: 第一种: 自定义地图样式, 如\"amap: //styles/d6bf8c1d69cea9f5c696185ad4ac4c86\"可前往地图自定义平台定制自己的个性地图样式；第二种: 官方样式模版, 如\"amap: //styles/grey\"。其他模版样式及自定义地图的使用说明见开发指南**/ public setMapStyle(style: string): void; /**获取地图显示样式**/ public getMapStyle(): string; /**设置地图上显示的元素种类, 支持bg(地图背景)、point(兴趣点)、road(道路)、building(建筑物)**/ public setFeatures(feature: Array&lt;any&gt;): void; /**获取地图显示元素种类**/ public getFeatures(): Array&lt;any&gt;; /**修改底图图层(自v1.3 废弃)**/ // setDefaultLayer (layer: TileLayer): void; /**设置俯仰角, 3D视图有效(自V1.4.0开始支持)**/ public setPitch(Number: any): void; /**获取俯仰角(自V1.4.0开始支持)**/ public getPitch(): number; /** * 绑定事件声明 */ public on(event: string, callback: Function): void; &#125; /** View2DOptions **/ export interface View2DOptions &#123; /**地图中心点坐标值**/ center?: LngLat; /**地图顺时针旋转角度, 取值范围 [0-360], 默认值: 0**/ rotation?: number; /**地图显示的缩放级别。若center与zoom未赋值, 地图初始化默认显示用户所在城市范围**/ zoom?: number; /**地图显示的参考坐标系, 取值: 'EPSG3857''EPSG3395''EPSG4326'默认值: 'EPSG3857'**/ crs?: string; &#125; /** 二维地图显示视口, 用于定义二维地图静态显示属性, 如地图缩放级别“zoom”、地图中心点“center”等。 **/ export class View2D &#123; /**构造一个二维地图显示视口对象, opts二维地图视口对象初始化属性, 详见View2Doptions**/ constructor(opt: View2DOptions); &#125; /** MarkerOptions **/ export interface MarkerOptions &#123; /**要显示该marker的地图对象**/ map?: Map; /**点标记在地图上显示的位置, 默认为地图中心点**/ position?: LngLat | number[]; /**点标记显示位置偏移量, 默认值为Pixel(-10, -34)。Marker指定position后, 默认以marker左上角位置为基准点, 对准所给定的position位置, 若需使marker指定位置对准在position处, 需根据marker的尺寸设置一定的偏移量。**/ offset?: Pixel; /**需在点标记中显示的图标。可以是一个本地图标地址, 或者Icon对象。有合法的content内容时, 此属性无效**/ icon?: string | Icon; /**点标记显示内容, 可以是HTML要素字符串或者HTML DOM对象。content有效时, icon属性将被覆盖**/ content?: string | any; /**鼠标点击时marker是否置顶, 默认false , 不置顶 * (自v1.3 新增)**/ topWhenClick?: boolean; /**是否将覆盖物的鼠标或touch等事件冒泡到地图上 * (自v1.3 新增) 默认值: false**/ bubble?: boolean; /**设置点标记是否可拖拽移动, 默认为false**/ draggable?: boolean; /**设置拖拽点标记时是否开启点标记离开地图的效果**/ raiseOnDrag?: boolean; /**指定鼠标悬停时的鼠标样式, 自定义cursor, IE仅支持cur/ani/ico格式, Opera不支持自定义cursor**/ cursor?: string; /**点标记是否可见, 默认为true**/ visible?: boolean; /**点标记的叠加顺序。地图上存在多个点标记叠加时, 通过该属性使级别较高的点标记在上层显示 默认zIndex: 100**/ zIndex?: number; /**点标记的旋转角度, 广泛用于改变车辆行驶方向 注: angle属性是使用CSS3来实现的, 支持IE9及以上版本**/ angle?: number; /**是否自动旋转。点标记在使用moveAlong动画时, 路径方向若有变化, 点标记是否自动调整角度, 默认为false。广泛用于自动调节车辆行驶方向。 IE8以下不支持旋转, autoRotation属性无效**/ autoRotation?: boolean; /**点标记的动画效果, 默认值: “AMAP_ANIMATION_NONE” * 可选值: * “AMAP_ANIMATION_NONE”, 无动画效果 * “AMAP_ANIMATION_DROP”, 点标掉落效果 * “AMAP_ANIMATION_BOUNCE”, 点标弹跳效果**/ animation?: string; /**点标记阴影, 不设置该属性则点标记无阴影**/ shadow?: Icon; /**鼠标滑过点标记时的文字提示, 不设置则鼠标滑过点标无文字提示**/ title?: string; /**点标记是否可点击**/ clickable?: boolean; /**设置Marker的可点击区域, 在定义的区域内可触发Marker的鼠标点击事件**/ shape?: MarkerShape; /**用户自定义属性, 支持JavaScript API任意数据类型, 如Marker的id等**/ extData?: any; /**添加文本标注, content为文本标注的内容, offset为偏移量, 左上角为偏移量为(0, 0)**/ label?: &#123; content: string, offset: LngLat &#125;; &#125; /** Marker类 **/ export class Marker &#123; /**构造一个点标记对象, 通过MarkerOptions设置点标记对象的属性**/ constructor(opt: MarkerOptions); /**唤起高德地图客户端标注页其中Object里面包含有&#123; name: String, name属性 必要参数 position: * LngLat 坐标点 &#125;**/ public markOnAMAP(obj: any): void; /**获取Marker偏移量 * (自v1.3 新增)**/ public getOffset(): Pixel; /**设置Marker偏移量 * (自v1.3 新增)**/ public setOffset(offset: Pixel): void; /**设置点标记的动画效果, 默认值: “AMAP_ANIMATION_NONE” * 可选值: * “AMAP_ANIMATION_NONE”, 无动画效果 * “AMAP_ANIMATION_DROP”, 点标掉落效果 * “AMAP_ANIMATION_BOUNCE”, 点标弹跳效果**/ public setAnimation(animate: string): void; /**获取点标记的动画效果类型**/ public getAnimation(): string; /**设置点标记是支持鼠标单击事件**/ public setClickable(clickable: boolean): void; /**获取点标记是否支持鼠标单击事件**/ public getClickable(): boolean; /**获取点标记的位置**/ public getPosition(): LngLat; /**设置点标记位置**/ public setPosition(lnglat: LngLat): void; /**设置点标记的旋转角度**/ public setAngle(angle: number): void; /**设置点标记文本标签内容相关示例**/ public setLabel(label: any): void; /**获取点标记文本标签内容**/ public getLabel(): any; /**获取点标记的旋转角度**/ public getAngle(): number; /**设置点标记的叠加顺序, 默认最先添加的点标记在最底层**/ public setzIndex(index: number): void; /**获取点标记的叠加顺序**/ public getzIndex(): number; /**设置点标记的显示图标。 参数image可传入String、Icon两种类型的值。 * 若为String(图片url), 表示点标记以指定图片形式显示；若为Icon, 表示点标记以Icon对象形式显示**/ public setIcon(content: string | Icon): void; /**当点标记未自定义图标时, 获取Icon内容**/ public getIcon(): string | Icon; /**设置点标记对象是否可拖拽移动**/ public setDraggable(draggable: boolean): void; /**获取点标记对象是否可拖拽移动**/ public getDraggable(): boolean; /**点标记隐藏**/ public hide(): void; /**点标记显示**/ public show(): void; /**设置鼠标悬停时的光标。 参数cur可为CSS标注中的光标样式, 如: * setCursor(“pointer”)等；或者自定义的光标样式, 如: * setCursor(\"url('http: //http://webapi.amap.com/images/0.png') , pointer\") * 注: 当浏览器不支持css2, url值不起作用, 鼠标样式就按pointer来设置**/ public setCursor(Cursor: any): string; /**设置点标记显示内容, 可以是HTML要素字符串或者HTML DOM对象**/ public setContent(html: string | HTMLDivElement): void; /**获取点标记内容**/ public getContent(): string; /**以指定的速度, 点标记沿指定的路径移动。参数path为路径坐标串；speed为指定速度, 单位: 千米/小时； 回调函数f为变化曲线函数, 缺省为function(k)&#123;return k&#125;；参数circlable表明是否循环执行动画, 默认为false**/ public moveAlong(path: Array&lt;any&gt;, speed: number, f: Function, circlable: boolean): void; /**以给定速度移动点标记到指定位置。参数lnglat为指定位置, 必设；speed为指定速度, 单位: 千米/小时；回调函数f为变化曲线函数, 缺省为function(k)&#123;return k&#125;。**/ public moveTo(lnglat: LngLat, speed: number, f: Function): void; /**点标记停止动画**/ public stopMove(): void; /**暂定点标记的动画效果**/ public pauseMove(): void; /**重新开始点标记的动画效果**/ public resumeMove(): void; /**为Marker指定目标显示地图。当参数值取null时, 地图上移除当前Marker: setMap(null)**/ public setMap(map?: Map | null): void; /**获取Marker所在地图对象**/ public getMap(): Map; /**鼠标滑过点标时的文字提示**/ public setTitle(title: string): void; /**获取点标记的文字提示**/ public getTitle(): string; /**地图上有多个marker时, 当isTop为true时, marker将显示在最前面；当为false时, marker取消置顶**/ public setTop(isTop: boolean): void; /****/ public getTop(): boolean; /**为marker设置阴影效果**/ public setShadow(icon: Icon): void; /**获取marker的阴影图标**/ public getShadow(): Icon; /**设置marker的可点击区域**/ public setShape(shape: MarkerShape): void; /**获取marker的可点击区域**/ public getShape(): MarkerShape; /**设置用户自定义属性, 支持JavaScript API任意数据类型, 如Marker的id等**/ public setExtData(ext: any): void; /**获取用户自定义属性**/ public getExtData(): any; &#125; /** MarkerShapeOptions **/ export interface MarkerShapeOptions &#123; /**可点击区域组成元素数组, 存放图形的像素坐标等信息, 该数组元素由type决定: - circle: coords格式为 [x1, y1, r], x1, y1为圆心像素坐标, r为圆半径 - poly: coords格式为 [x1, y1, x2, y2 … xn, yn], 各x, y表示多边形边界像素坐标 - rect: coords格式为 [x1, y1, x2, y2], x1, y1为矩形左上角像素坐标, x2, y2为矩形右下角像素坐标 Markshape的像素坐标是指相对于marker的左上角的像素坐标偏移量**/ coords?: Array&lt;number&gt;; /**可点击区域类型, 可选值: - circle: 圆形 - poly: 多边形 - rect: 矩形**/ type?: string; &#125; /** MarkerShape **/ export class MarkerShape &#123; /**构造一个Marker可点击区域对象, 通过MarkerShapeOptions设置可点击区域属性**/ constructor(opt: MarkerShapeOptions); &#125; /** IconOptions **/ export interface IconOptions &#123; /**图标尺寸, 默认值(36, 36)**/ size?: Size; /**图标取图偏移量。当image中指定了一个大图时, 可通过size和imageOffset配合, 显示图标的指定范围**/ imageOffset?: Pixel; /**图标的取图地址。默认为蓝色图钉图片**/ image?: string; /**图标所用图片大小, 根据所设置的大小拉伸或压缩图片, 等同于CSS中的background-size属性。可用于实现高清屏的高清效果**/ imageSize?: Size; &#125; /** MarkerShape **/ export class Icon &#123; /**构造点覆盖物图标, 通过IconOptions设置图标属性**/ constructor(opt: IconOptions); /**获取图标图片大小**/ public getImageSize(): Size; /**设置图标图片大小**/ public setImageSize(size: Size): void; &#125; /** ElasticMarkerOptions **/ export interface ElasticMarkerOptions &#123; /**多个不同样式的数组, 每个样式形如: *&#123; * icon: &#123; * img: './a, png', * size: [16, 16], //图标的原始大小 * ancher: [8, 16], //锚点, 图标原始大小下锚点所处的位置, 相对左上角 * imageOffset: [360, 340], * //可缺省, 当使用精灵图时可用, 标示图标在整个图片中左上角的位置 * imageSize: [512, 512], * //可缺省, 当使用精灵图时可用, 整张图片的大小 * fitZoom: 14, //最合适的级别, 在此级别下显示为原始大小 * scaleFactor: 2, //地图放大一级的缩放比例系数 * maxScale: 2, //最大放大比例 * minScale: 1//最小放大比例 * &#125;, * label: &#123; * content: '标记1', //文本内容 * position: 'BM', //文本位置相对于图标的基准点, * //BL、BM、BR、ML、MR、TL、TM、TR分别代表左下角、底部中央、右下角、 * //左侧中央、右侧中央、左上角、顶部中央、右上角。 * //缺省时代表相对图标的锚点位置 * offset: [-35, 0], //相对position的偏移量 * minZoom: 15//label的最小显示级别 * &#125; *&#125;**/ styles?: Array&lt;any&gt;; /**表示地图级别与styles中样式对应关系的映射, 如: &#123; * 14: 0, * 15: 0, * 16: 1, * 17: 1, * 18: 1, * 19: 1, * 20: 1 * &#125; 表示14到15级使用styles中的第0个样式, 16-20级使用第二个样式**/ zoomStyleMapping?: any; /**要显示该标记的地图对象**/ map?: Map; /**点标记在地图上显示的位置, 默认为地图中心点**/ position?: LngLat; /**鼠标点击时marker是否置顶, 默认false , 不置顶 * (自v1.3 新增)**/ topWhenClick?: boolean; /**是否将覆盖物的鼠标或touch等事件冒泡到地图上 * (自v1.3 新增) 默认值: false**/ bubble?: boolean; /**设置点标记是否可拖拽移动, 默认为false**/ draggable?: boolean; /**指定鼠标悬停时的鼠标样式, 自定义cursor, IE仅支持cur/ani/ico格式, Opera不支持自定义cursor**/ cursor?: string; /**点标记是否可见, 默认为true**/ visible?: boolean; /**点标记的叠加顺序。地图上存在多个点标记叠加时, 通过该属性使级别较高的点标记在上层显示 默认zIndex: 100**/ zIndex?: number; /**点标记是否可点击**/ clickable?: boolean; /**用户自定义属性, 支持JavaScript API任意数据类型, 如Marker的id等**/ extData?: any; &#125; /** 灵活点标记, 一种可以随着地图级别变化而改变图标和大小的点标记, 插件类。查看示例 **/ export class ElasticMarker &#123; /**构造一个灵活点标记对象, 通过ElasticMarkerOptions设置点标记对象的属性**/ constructor(opt: ElasticMarkerOptions); /**唤起高德地图客户端标注页其中Object里面包含有&#123; name: String, name属性 必要参数 position: * LngLat 坐标点 &#125;**/ public markOnAMAP(obj: any): void; /**设置点标记是支持鼠标单击事件**/ public setClickable(clickable: boolean): void; /**获取点标记是否支持鼠标单击事件**/ public getClickable(): boolean; /**获取点标记的位置**/ public getPosition(): LngLat; /**设置点标记位置**/ public setPosition(lnglat: LngLat): void; /**设置点标记的叠加顺序, 默认最先添加的点标记在最底层**/ public setzIndex(index: number): void; /**获取点标记的叠加顺序**/ public getzIndex(): number; /**设置点标记对象是否可拖拽移动**/ public setDraggable(draggable: boolean): void; /**获取点标记对象是否可拖拽移动**/ public getDraggable(): boolean; /**点标记隐藏**/ public hide(): void; /**点标记显示**/ public show(): void; /**设置鼠标悬停时的光标。 参数cur可为CSS标注中的光标样式, 如: * setCursor(“pointer”)等；或者自定义的光标样式, 如: * setCursor(\"url('http: //http://webapi.amap.com/images/0.png') , pointer\") * 注: 当浏览器不支持css2, url值不起作用, 鼠标样式就按pointer来设置**/ public setCursor(Cursor: any): string; /**为Marker指定目标显示地图。当参数值取null时, 地图上移除当前Marker: setMap(null)**/ public setMap(map: Map): void; /**获取Marker所在地图对象**/ public getMap(): Map; /**鼠标滑过点标时的文字提示**/ public setTitle(title: string): void; /**获取点标记的文字提示**/ public getTitle(): string; /**地图上有多个marker时, 当isTop为true时, marker将显示在最前面；当为false时, marker取消置顶**/ public setTop(isTop: boolean): void; /****/ public getTop(): boolean; /**设置用户自定义属性, 支持JavaScript API任意数据类型, 如Marker的id等**/ public setExtData(ext: any): void; /**获取用户自定义属性**/ public getExtData(): any; &#125; /** TextOptions **/ export interface TextOptions &#123; /**标记显示的文本内容**/ text?: string; /**横向位置, 'left' 'right', 'center'可选**/ textAlign?: string; /**纵向位置, 'top' 'middle', 'bottom'可选**/ verticalAlign?: string; /**要显示该标记的地图对象**/ map?: Map; /**点标记在地图上显示的位置, 默认为地图中心点**/ position?: LngLat; /**点标记显示位置偏移量, 默认值为Pixel(-10, -34)。Marker指定position后, 默认以marker左上角位置为基准点, 对准所给定的position位置, 若需使marker指定位置对准在position处, 需根据marker的尺寸设置一定的偏移量。**/ offset?: Pixel; /**鼠标点击时是否置顶, 默认false , 不置顶**/ topWhenClick?: boolean; /**是否将覆盖物的鼠标或touch等事件冒泡到地图上 * 默认值: false**/ bubble?: boolean; /**设置点标记是否可拖拽移动, 默认为false**/ draggable?: boolean; /**设置拖拽点标记时是否开启点标记离开地图的效果**/ raiseOnDrag?: boolean; /**指定鼠标悬停时的鼠标样式, 自定义cursor, IE仅支持cur/ani/ico格式, Opera不支持自定义cursor**/ cursor?: string; /**点标记是否可见, 默认为true**/ visible?: boolean; /**点标记的叠加顺序。地图上存在多个点标记叠加时, 通过该属性使级别较高的点标记在上层显示 默认zIndex: 100**/ zIndex?: number; /**点标记的旋转角度, 广泛用于改变车辆行驶方向 注: angle属性是使用CSS3来实现的, 支持IE9及以上版本**/ angle?: number; /**是否自动旋转。点标记在使用moveAlong动画时, 路径方向若有变化, 点标记是否自动调整角度, 默认为false。广泛用于自动调节车辆行驶方向。 IE8以下不支持旋转, autoRotation属性无效**/ autoRotation?: boolean; /**点标记的动画效果, 默认值: “AMAP_ANIMATION_NONE” * 可选值: * “AMAP_ANIMATION_NONE”, 无动画效果 * “AMAP_ANIMATION_DROP”, 点标掉落效果 * “AMAP_ANIMATION_BOUNCE”, 点标弹跳效果**/ animation?: string; /**点标记阴影, 不设置该属性则点标记无阴影**/ shadow?: Icon; /**鼠标滑过点标记时的文字提示, 不设置则鼠标滑过点标无文字提示**/ title?: string; /**点标记是否可点击**/ clickable?: boolean; /**用户自定义属性, 支持JavaScript API任意数据类型, 如Marker的id等**/ extData?: any; &#125; /** 纯文本标记, 继承自Marker, 具有Marker的大部分属性、方法和事件(v1.4.2新增) **/ export class Text &#123; /**构造一个点标记对象, 通过TextOptions设置点标记对象的属性**/ constructor(opt: TextOptions); /**获取文本内容**/ public getText(): string; /**修改文本内容**/ public setText(String: any): void; /**设置文本样式, Object同css样式表, 如: &#123;'background-color': 'red'&#125;**/ public setStyle(Object: any): void; /**唤起高德地图客户端标注页其中Object里面包含有&#123; name: String, name属性 必要参数 position: * LngLat 坐标点 &#125;**/ public markOnAMAP(obj: any): void; /**获取偏移量**/ public getOffset(): Pixel; /**设置偏移量**/ public setOffset(offset: Pixel): void; /**设置点标记的动画效果, 默认值: “AMAP_ANIMATION_NONE” * 可选值: * “AMAP_ANIMATION_NONE”, 无动画效果 * “AMAP_ANIMATION_DROP”, 点标掉落效果 * “AMAP_ANIMATION_BOUNCE”, 点标弹跳效果**/ public setAnimation(animate: string): void; /**获取点标记的动画效果类型**/ public getAnimation(): string; /**设置点标记是支持鼠标单击事件**/ public setClickable(clickable: boolean): void; /**获取点标记是否支持鼠标单击事件**/ public getClickable(): boolean; /**获取点标记的位置**/ public getPosition(): LngLat; /**设置点标记位置**/ public setPosition(lnglat: LngLat): void; /**设置点标记的旋转角度**/ public setAngle(angle: number): void; /**获取点标记的旋转角度**/ public getAngle(): number; /**设置点标记的叠加顺序, 默认最先添加的点标记在最底层**/ public setzIndex(index: number): void; /**获取点标记的叠加顺序**/ public getzIndex(): number; /**设置点标记对象是否可拖拽移动**/ public setDraggable(draggable: boolean): void; /**获取点标记对象是否可拖拽移动**/ public getDraggable(): boolean; /**点标记隐藏**/ public hide(): void; /**点标记显示**/ public show(): void; /**设置鼠标悬停时的光标。 参数cur可为CSS标注中的光标样式, 如: * setCursor(“pointer”)等；或者自定义的光标样式, 如: * setCursor(\"url('http: //http://webapi.amap.com/images/0.png') , pointer\") * 注: 当浏览器不支持css2, url值不起作用, 鼠标样式就按pointer来设置**/ public setCursor(Cursor: any): string; /**以指定的速度, 点标记沿指定的路径移动。参数path为路径坐标串；speed为指定速度, 单位: 千米/小时； 回调函数f为变化曲线函数, 缺省为function(k)&#123;return k&#125;；参数circlable表明是否循环执行动画, 默认为false**/ public moveAlong(path: Array&lt;any&gt;, speed: number, f: Function, circlable: boolean): void; /**以给定速度移动点标记到指定位置。参数lnglat为指定位置, 必设；speed为指定速度, 单位: 千米/小时；回调函数f为变化曲线函数, 缺省为function(k)&#123;return k&#125;。**/ public moveTo(lnglat: LngLat, speed: number, f: Function): void; /**点标记停止动画**/ public stopMove(): void; /**暂定点标记的动画效果**/ public pauseMove(): void; /**重新开始点标记的动画效果**/ public resumeMove(): void; /**为Marker指定目标显示地图。当参数值取null时, 地图上移除当前Marker: setMap(null)**/ public setMap(map: Map): void; /**获取Marker所在地图对象**/ public getMap(): Map; /**鼠标滑过点标时的文字提示**/ public setTitle(title: string): void; /**获取点标记的文字提示**/ public getTitle(): string; /**地图上有多个marker时, 当isTop为true时, marker将显示在最前面；当为false时, marker取消置顶**/ public setTop(isTop: boolean): void; /****/ public getTop(): boolean; /**设置阴影效果**/ public setShadow(icon: Icon): void; /**获取阴影图标**/ public getShadow(): Icon; /**设置用户自定义属性, 支持JavaScript API任意数据类型, 如Marker的id等**/ public setExtData(ext: any): void; /**获取用户自定义属性**/ public getExtData(): any; &#125; /** PolylineOptions **/ export interface PolylineOptions &#123; /**要显示该polyline的地图对象**/ map?: Map; /**折线覆盖物的叠加顺序。默认叠加顺序, 先添加的线在底层, 后添加的线在上层。通过该属性可调整叠加顺序, 使级别较高的折线覆盖物在上层显示 默认zIndex: 50**/ zIndex?: number; /**是否将覆盖物的鼠标或touch等事件冒泡到地图上 * (自v1.3 新增) 默认值: false**/ bubble?: boolean; /**指定鼠标悬停时的鼠标样式, 自定义cursor, IE仅支持cur/ani/ico格式, Opera不支持自定义cursor**/ cursor?: string; /**是否绘制成大地线, 默认false相关示例**/ geodesic?: boolean; /**线条是否带描边, 默认false**/ isOutline?: boolean; /**描边的宽度, 默认为1**/ borderWeight?: number; /**线条描边颜色, 此项仅在isOutline为true时有效, 默认: #000000**/ outlineColor?: string; /**折线的节点坐标数组**/ path?: Array&lt;any&gt;; /**线条颜色, 使用16进制颜色代码赋值。默认值为#006600**/ strokeColor?: string; /**线条透明度, 取值范围[0, 1], 0表示完全透明, 1表示不透明。默认为0.9**/ strokeOpacity?: number; /**线条宽度, 单位: 像素**/ strokeWeight?: number; /**线样式, 实线: solid, 虚线: dashed**/ strokeStyle?: string; /**勾勒形状轮廓的虚线和间隙的样式, 此属性在strokeStyle 为dashed 时有效, 此属性在ie9+浏览器有效 取值: * 实线: [0, 0, 0] 虚线: [10, 10] , [10, 10] 表示10个像素的实线和10个像素的空白(如此反复)组成的虚线 点画线: [10, 2, 10], [10, 2, 10] 表示10个像素的实线和2个像素的空白 + 10个像素的实线和10个像素的空白 (如此反复)组成的虚线**/ strokeDasharray?: Array&lt;any&gt;; /**折线拐点的绘制样式, 默认值为'miter'尖角, 其他可选值: 'round'圆角、'bevel'斜角**/ lineJoin?: string; /**折线两端线帽的绘制样式, 默认值为'butt'无头, 其他可选值: 'round'圆头、'square'方头**/ lineCap?: string; /**设置折线是否可拖拽移动, 默认为false**/ draggable?: boolean; /**用户自定义属性, 支持JavaScript API任意数据类型, 如Polyline的id等**/ extData?: any; /**是否延路径显示白色方向箭头, 默认false。Canvas绘制时有效, 建议折线宽度大于6时使用；在3D视图下不支持显示方向箭头(自V1.4.0版本参数效果变更)**/ showDir?: boolean; &#125; /** Polyline类 **/ export class Polyline &#123; /**构造折线对象, 通过PolylineOptions指定折线样式**/ constructor(opt: PolylineOptions); /**设置组成该折线的节点数组**/ public setPath(path: Array&lt;any&gt;): void; /**获取折线路径的节点数组。其中lat和lng是经纬度参数。**/ public getPath(): Array&lt;any&gt;; /**修改折线属性(包括路径的节点、线样式、是否绘制大地线等。属性详情参看PolylineOptions列表)**/ public setOptions(opt: PolylineOptions): void; /**获取线的属性**/ public getOptions(): any; /**获取折线的总长度(单位: 米)**/ public getLength(): number; /**获取当前折线的矩形范围对象**/ public getBounds(): Bounds; /**地图上隐藏指定折线**/ public hide(): void; /**地图上显示指定折线**/ public show(): void; /**设置折线所在的地图。参数map即为目标地图, 参数为null时, 在地图上移除当前折线**/ public setMap(map: Map): void; /**设置用户自定义属性, 支持JavaScript API任意数据类型, 如Polyline的id等**/ public setExtData(ext: any): void; /**获取用户自定义属性**/ public getExtData(): any; &#125; /** * 多边形绘制的配置项接口 */ export interface PolygonOption &#123; /** 要显示该polygon的地图对象 */ map?: Map; /** 多边形覆盖物的叠加顺序。地图上存在多个多边形覆盖物叠加时， 通过该属性使级别较高的多边形覆盖物在上层显示。 默认zIndex：10 */ zIndex?: number; /** 组成多边形的点集合，格式：[[113.2323,23.2323],[122.33333,44.232323],[...]] */ path: Array&lt;number[]&gt;; /** 是否将覆盖物的鼠标或touch等事件冒泡到地图上, 默认值：false*/ bubble?: boolean; /** 指定鼠标悬停时的鼠标样式，自定义cursor，IE仅支持cur/ani/ico格式，Opera不支持自定义cursor */ cursor?: string; /** 线条的绘制颜色 ,如：'#FF33FF' */ strokeColor?: string; /** 线条的绘制宽度， 如：6 */ strokeWeight?: number; /** 线条的透明度，区间[0,1],如：0.5 */ strokeOpacity?: number; /** 多边形内容的透明度，如：0.7 */ fillOpacity?: number; /** 多边形的填充颜色，如:'#1791fc' */ fillColor?: string; /** 设置多边形是否可拖拽移动，默认为false */ draggable?: boolean; /** 用户自定义属性，支持JavaScript API任意数据类型，如Polygon的id等 */ extData?: any; /** 轮廓线样式，实线:solid，虚线:dashed */ strokeStyle?: string; /** 勾勒形状轮廓的虚线和间隙的样式，此属性在strokeStyle 为dashed 时有效 * 实线：[0,0,0] * 虚线：[10,10] ，[10,10] 表示10个像素的实线和10个像素的空白（如此反复）组成的虚线 * 点画线：[10,2,10]， [10,2,10] 表示10个像素的实线和2个像素的空白 + 10个像素的实线和10个像素的空白 （如此反复）组成的虚线 */ strokeDasharray?: Array&lt;number&gt;; /** 是否绘制完后自动跳转到 */ autoSetView?: boolean; &#125; /** * Polygon类 */ export class Polygon &#123; /** 以PolygonOption作为构建函数的配置项 */ constructor(opt: PolygonOption) /** 设置多边形轮廓线节点数组，当为“环”多边形时，path为二维数组，数组元素为多边形轮廓线的节点坐标数组 */ public setPath(path: Array&lt;number[] | LngLat&gt;): void; /** 获取多边形轮廓线节点数组。其中lat和lng是经纬度参数 */ public getPath(): Array&lt;any&gt;; /** 修改多边形属性（样式风格，包括组成多边形轮廓线的节点、轮廓线样式等。属性详情参看PolygonOptions列表） */ public setOptions(opt: PolygonOption): void; /** 获取多边形的属性 */ public getOptions(): any; /** 获取当前多边形的矩形范围对象 */ public getBounds(): Bounds; /** 获取多边形的面积（单位：平方米） */ public getArea(): number; /** 隐藏多边形 */ public hide(): void; /** 显示多边形 */ public show(): void; /** 在指定地图上显示当前的多边形。参数取值为null时，在地图上移除当前多边形 */ public setMap(map: Map): void; /** 设置用户自定义属性，支持JavaScript API任意数据类型，如Polygon的id等 */ public setExtData(ext: any): any; /** 获取用户自定义属性 */ public getExtData(): any; /** 判断指定点坐标是否在多边形范围内 */ public contains(point: LngLat | number[]): boolean; &#125; /** * InfoWindow配置项接口 */ export interface InfoWindowOption &#123; /** 是否自定义窗体。设为true时，信息窗体外框及内容完全按照content所设的值添加 */ isCustom?: boolean; /** 是否自动调整窗体到视野内 */ autoMove?: boolean; /** 控制是否在鼠标点击地图后关闭信息窗体，默认false，鼠标点击地图后不关闭信息窗体 */ closeWhenClickMap?: boolean; /** 显示内容，可以是HTML要素字符串或者HTMLElement对象 */ content?: string | HTMLElement; /** 信息窗体尺寸（isCustom为true时，该属性无效） */ size?: Size; /** 信息窗体锚点。默认值：'bottom-center';可选值：'top-left'|'top-center'|'top-right'|'middle-left'|'center'|'middle-right'|'bottom-left'|'bottom-center'|'bottom-right' */ anchor?: string; /** 信息窗体显示位置偏移量。默认基准点为信息窗体的底部中心 */ offset?: Pixel; /** 信息窗体显示基点位置 */ position?: number[]; /** Boolean 控制是否显示信息窗体阴影，取值false时不显示窗体阴影，取值true时显示窗体阴影 */ showShadow?: boolean; /** 信息窗体关闭时，是否将其Dom元素从页面中移除，默认为false */ retainWhenClose?: boolean; &#125; /** * InfoWindow类 */ export class InfoWindow &#123; /** 构建信息窗体对象，使用InfoWindowOption的配置项 */ constructor(opt: InfoWindowOption); /** 在地图的指定位置打开信息窗体 */ public open(map: Map, pos: AMap.LngLat | number[]): void; /** 关闭信息窗体 */ public close(): void; /** 获取信息窗体是否打开 */ public getIsOpen(): boolean; /** 设置信息窗体内容，可通过该函数动态更新信息窗体中的信息 */ public setContent(content: string | HTMLElement): void; /** 获取信息窗体内容 ，结果以字符串方式返回 */ public getContent(): string; /** 设置信息窗体显示基点位置 */ public setPosition(lnglat: LngLat): void; /** 获取信息窗体显示基点位置 */ public getPosition(): LngLat | number[]; /** 获取信息窗体锚点 */ public getAnchor(): string; /** 设置信息窗体锚点 可选值：'top-left'|'top-center'|'top-right'|'middle-left'| 'center'|'middle-right'|'bottom-left'|'bottom-center'|'bottom-right' */ public setAnchor(anchor: string): void; /** 设置信息窗体大小（isCustom为false时有效） */ public setSize(size: Size): void; /** 获取信息窗体大小 */ public getSize(): Size; &#125;&#125; tsconfig.json12345678\"include\": [ \"types\", \"src/**/*.ts\", \"src/**/*.tsx\", \"src/**/*.vue\", \"tests/**/*.ts\", \"tests/**/*.tsx\" ],","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://unknownfor.github.io/tags/前端/"},{"name":"学习","slug":"学习","permalink":"http://unknownfor.github.io/tags/学习/"},{"name":"vue3","slug":"vue3","permalink":"http://unknownfor.github.io/tags/vue3/"},{"name":"ts","slug":"ts","permalink":"http://unknownfor.github.io/tags/ts/"}]},{"title":"计算请假小时的时长","slug":"计算请假小时的时长","date":"2022-07-01T12:30:53.000Z","updated":"2022-11-01T13:02:34.879Z","comments":true,"path":"2022/07/01/计算请假小时的时长/","link":"","permalink":"http://unknownfor.github.io/2022/07/01/计算请假小时的时长/","excerpt":"","text":"最近有一个需求，选择两个日期后，计算请假总的小时数 要求： 日期之间如果有法定节假日，需要剔除计算 已设置的非考勤时间段，需要剔除计算 只统计请假日期范围内需要出勤的时间总和 举例： 请假10月1日至10月10日，其中10月1日至10月7日为法定节假日，10月8日、10月9日、10月10日为考勤日期，考勤时间段为9:00-12:00， 13:00-18:00，由此可得请假小时为24个小时 思考： 因为考勤时间可能存在多个时间段和多个筛选日期条件 先统计出需要出勤的日期，计算出全部工作小时，再遍历法定节假日数组，剔除法定节假日的工作小时 demo如下： 参考api节假日api，依据条件进行筛选 数据结构1234567891011121314151617181920212223return &#123; // 法定节假日 festival: [\"2018-12-30\", \"2018-12-31\", \"2019-01-01\", \"2019-02-03\", \"2019-02-04\", \"2019-02-05\", \"2019-02-06\", \"2019-02-07\", \"2019-02-08\", \"2019-02-09\", \"2019-02-10\", \"2019-02-11\", \"2019-04-05\", \"2019-04-06\", \"2019-04-07\", \"2019-05-01\", \"2019-05-02\", \"2019-05-03\", \"2019-05-04\", \"2019-06-07\", \"2019-06-08\", \"2019-06-09\", \"2019-09-13\", \"2019-09-14\", \"2019-09-15\", \"2019-10-01\", \"2019-10-02\", \"2019-10-03\", \"2019-10-04\", \"2019-10-05\", \"2019-10-06\", \"2019-10-07\", \"2020-01-01\", \"2020-01-24\", \"2020-01-25\", \"2020-01-26\", \"2020-01-27\", \"2020-01-28\", \"2020-01-29\", \"2020-01-30\", \"2020-01-31\", \"2020-02-01\", \"2020-02-02\", \"2020-04-04\", \"2020-04-05\", \"2020-04-06\", \"2020-05-01\", \"2020-05-02\", \"2020-05-03\", \"2020-05-04\", \"2020-05-05\", \"2020-06-25\", \"2020-06-26\", \"2020-06-27\", \"2020-10-01\", \"2020-10-02\", \"2020-10-03\", \"2020-10-04\", \"2020-10-05\", \"2020-10-06\", \"2020-10-07\", \"2020-10-08\", \"2021-01-01\", \"2021-02-11\", \"2021-02-12\", \"2021-02-13\", \"2021-02-14\", \"2021-02-15\", \"2021-02-16\", \"2021-02-17\", \"2021-02-26\", \"2021-04-02\", \"2021-04-03\", \"2021-04-04\", \"2021-04-30\", \"2021-05-01\", \"2021-05-02\", \"2021-06-12\", \"2021-06-13\", \"2021-06-14\", \"2021-06-12\", \"2021-09-19\", \"2021-09-20\", \"2021-09-21\", \"2021-10-01\", \"2021-10-02\", \"2021-10-03\", \"2021-10-04\", \"2021-10-05\", \"2021-10-06\", \"2021-10-07\", \"2022-01-01\", \"2022-01-31\", \"2022-02-01\", \"2022-02-02\", \"2022-02-03\", \"2022-02-04\", \"2022-02-05\", \"2022-02-06\", \"2022-04-03\", \"2022-04-04\", \"2022-04-05\", \"2022-04-30\", \"2022-05-01\", \"2022-05-02\", \"2022-06-03\", \"2022-06-04\", \"2022-06-05\", \"2022-09-09\", \"2022-09-10\", \"2022-09-11\", \"2022-10-01\", \"2022-10-02\", \"2022-10-03\", \"2022-10-04\", \"2022-10-05\", \"2022-10-06\", \"2022-10-07\" ], //需要上班的周末 weekendWorkDay: [\"2018-12-29\", \"2019-02-02\", \"2019-09-29\", \"2019-10-12\", \"2019-04-28\", \"2019-05-05\", \"2020-01-19\", \"2020-04-26\", \"2020-05-09\", \"2020-06-28\", \"2020-09-27\", \"2020-10-10\", \"2021-02-07\", \"2021-02-20\", \"2021-09-18\", \"2021-10-09\", \"2021-10-10\" ], festival_list: [], weekendWorkDay_list: [] &#125; 响应方法12345678910// 将节假日,周末工作日转换为时间戳 this.festival.forEach((i, item) =&gt; &#123; this.festival_list.push(new Date(item).valueOf()) &#125;) this.weekendWorkDay.forEach((i, item) =&gt; &#123; this.weekendWorkDay_list.push(new Date(item).valueOf()) &#125;) this.formatCountDay(\"2022-07-22\", \"2022-07-25\") 读入数据12345678910111213141516171819202122232425262728293031323334353637383940// 过滤俩天之间的周末节假日，返回距离的天数 formatCountDay (start, end) &#123; var sign = true var startday = new Date(start) var endday = new Date(end) // 总相差天数 var diffDay = (endday - startday) / (1000 * 60 * 60 * 24) + 1 if (parseInt(diffDay) === 0) return parseInt(diffDay) // 周末周六天数+节假日 var weekEnds = 0 for (var i = 0; i &lt; diffDay; i++) &#123; sign = true // 判断是否是节假日 if (this.festival_list.includes(startday.valueOf())) &#123; console.log(\"节假日\") weekEnds = weekEnds + 1 sign = false &#125; // 判断周六周日，如果是节假日则不作判断 if (sign === true) &#123; if (startday.getDay() === 0 || startday.getDay() === 6) &#123; // 判断该周末是否需要因为节假日补班 var weekEnds_sign = 0 for (var j in this.weekendWorkDay_list) &#123; if (startday.valueOf() === this.weekendWorkDay_list[j]) &#123; weekEnds_sign = weekEnds_sign + 1 &#125; &#125; if (weekEnds_sign === 0) &#123; weekEnds = weekEnds + 1 &#125; &#125; &#125; startday.setDate(startday.getDate() + 1) &#125; console.log(diffDay - weekEnds) return parseInt(diffDay - weekEnds) &#125; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155/** * 计算请假时长 * @param &#123;Object&#125; beginTime 开始时间 * @param &#123;Object&#125; endTime 结束时间 * @param &#123;Object&#125; stWorkTime 上班时间 * @param &#123;Object&#125; enWrokTime 下班时间 * @param &#123;Object&#125; isFreeTime 是否要去除午休工作时长 * @param &#123;Object&#125; freeTimeMon 午休开始时间 * @param &#123;Object&#125; freeTimeAft 午休结束时间 * */ getTotal(beginTime ,endTime,stWorkTime,enWrokTime,isFreeTime,freeTimeMon,freeTimeAft)&#123; var days; var hours; var date; var freeTime=freeTimeAft-freeTimeMon; beginTime = beginTime.replace(/-/g,'/'); var beginArr = beginTime.split(\" \"); var beginMonth = parseInt( beginArr[0].split(\"/\")[1]); var beginDay = parseInt(beginArr[0].split(\"/\")[2]); var beginHours = parseInt(beginArr[1].split(\":\")[0]); var beginMin = parseInt(beginArr[1].split(\":\")[1]); var beginHoursMin = beginHours+beginMin/60; endTime = endTime.replace(/-/g,'/'); var endArr = endTime.split(\" \"); var endMonth = parseInt(endArr[0].split(\"/\")[1]); var endDay = parseInt(endArr[0].split(\"/\")[2]); var endHours = parseInt(endArr[1].split(\":\")[0]); var endMin = parseInt(endArr[1].split(\":\")[1]); var endHoursMin = endHours+endMin/60; //如果beginHoursMin时间小于上班时间都算上班时间 if (beginHoursMin&lt;=stWorkTime)&#123; beginHoursMin = stWorkTime; &#125; //如果endHoursMin时间大于上班时间都算下班时间 if (endHoursMin&gt;=enWrokTime)&#123; endHoursMin = enWrokTime; &#125; //如果结束时间在freeTimeMon和freeTimeAft之间都算freeTimeMon if (isFreeTime==true)&#123; if (endHoursMin&gt;=freeTimeMon &amp;&amp; endHoursMin&lt;=freeTimeAft)&#123; endHoursMin = freeTimeMon; &#125; &#125; //获取结束时间-开始时间的天数 var daysBetween = this.daysBetween(beginTime,endTime); if (daysBetween.length&gt;0)&#123; var daysBetweenLen = daysBetween.length; //午休 if (isFreeTime==true)&#123; var hour = enWrokTime-stWorkTime-freeTime; if (daysBetweenLen==1)&#123; //同一天 hours=(endHoursMin)-(beginHoursMin)-freeTime; &#125;else if (daysBetweenLen==2)&#123; //跨一天 //第一天的时长 hours = enWrokTime - beginHoursMin; //是否有午休 if (beginHoursMin&lt;=freeTimeMon) hours=hours-freeTime; //第二天的时长 hours += endHoursMin -stWorkTime ; //是否有午休 if (endHoursMin&gt;=freeTimeAft) hours=hours-freeTime; &#125;else&#123; //跨两天以上 //第一天的时长 hours = enWrokTime - beginHoursMin; //是否有午休 if (beginHoursMin&lt;=freeTimeMon) hours=hours-freeTime; //中间时长 hours+=(daysBetweenLen-2)*(hour); //最后一天时长 hours += endHoursMin -stWorkTime ; //是否有午休 if (endHoursMin&gt;=freeTimeAft) hours=hours-freeTime; &#125; days = Math.floor(hours/hour); hours = hours%hour; date =&#123;\"days\":days,\"hours\":hours&#125;; &#125;else&#123; //非午休 hour = enWrokTime-stWorkTime; if (daysBetweenLen==1)&#123; //同一天 hours=(endHoursMin)-(beginHoursMin); &#125;else if (daysBetweenLen==2)&#123; //跨一天 hours = enWrokTime - beginHoursMin; //第二天的时长 hours += endHoursMin -stWorkTime ; &#125;else&#123; //跨两天以上 //第一天的时长 hours = enWrokTime - beginHoursMin; //中间时长 hours+=(daysBetweenLen-2)*(hour); //最后一天时长 hours += endHoursMin -stWorkTime ; &#125; days = Math.floor(hours/hour); hours = hours%hour; date =&#123;\"days\":days,\"hours\":hours&#125;; &#125; &#125; console.log(date) return date; &#125;, /*** 根据两个日期，判断相差天数* @param sDate1 开始日期 如：2016-11-01* @param sDate2 结束日期 如：2016-11-02* @returns &#123;number&#125; 返回相差天数*/ daysBetween(sDate1,sDate2)&#123; var arr = []; sDate1 = sDate1.substring(0,10); sDate2 = sDate2.substring(0,10); var startTime = this.gDate(sDate1); var endTime = this.gDate(sDate2); while((endTime.getTime()-startTime.getTime())&gt;=0)&#123; var year = startTime.getFullYear(); var month = startTime.getMonth().toString().length==1?\"0\"+startTime.getMonth().toString():startTime.getMonth(); var day = startTime.getDate().toString().length==1?\"0\"+startTime.getDate():startTime.getDate(); arr.push(year+\"/\"+month+\"/\"+day); startTime.setDate(startTime.getDate()+1); &#125; return arr; &#125;, gDate(datestr)&#123; datestr=datestr.replace(/-/g,'/'); var temp = datestr.split(\"/\"); var date = new Date(temp[0],temp[1],temp[2]); return date; &#125;, //函数调用this.getTotal('2022-08-27 09:00:00' ,'2022-08-28 18:00:00',9,18,false,12,13.5)","categories":[],"tags":[{"name":"VUE","slug":"VUE","permalink":"http://unknownfor.github.io/tags/VUE/"},{"name":"uniapp开发","slug":"uniapp开发","permalink":"http://unknownfor.github.io/tags/uniapp开发/"}]},{"title":"uni+微信小程序 js对象序列化字符串传参","slug":"uni+微信小程序 js对象序列化字符串传参","date":"2022-05-21T06:38:05.000Z","updated":"2022-11-17T06:40:19.041Z","comments":true,"path":"2022/05/21/uni+微信小程序 js对象序列化字符串传参/","link":"","permalink":"http://unknownfor.github.io/2022/05/21/uni+微信小程序 js对象序列化字符串传参/","excerpt":"","text":"需求url里需要传多个参数进行数据传递 传参：1234const item = encodeURIComponent(JSON.stringify(val))uni.navigateTo(&#123; url: '/pages/item-detils' + '?data=' + item&#125;) 解析：123onLoad(e) &#123; this.data = JSON.parse(decodeURIComponent(e.data));&#125;","categories":[],"tags":[{"name":"uniapp","slug":"uniapp","permalink":"http://unknownfor.github.io/tags/uniapp/"},{"name":"微信小程序","slug":"微信小程序","permalink":"http://unknownfor.github.io/tags/微信小程序/"},{"name":"移动端","slug":"移动端","permalink":"http://unknownfor.github.io/tags/移动端/"}]},{"title":"uni+微信小程序 上传多张图片","slug":"uni-微信小程序-上传多张图片","date":"2022-05-17T03:44:21.000Z","updated":"2022-11-17T05:52:42.872Z","comments":true,"path":"2022/05/17/uni-微信小程序-上传多张图片/","link":"","permalink":"http://unknownfor.github.io/2022/05/17/uni-微信小程序-上传多张图片/","excerpt":"","text":"upload.vue123456789101112131415161718192021&lt;u-upload accept=\"image\" capture=\"['album', 'camera']\" :previewImage=\"true\" width=\"200\" height=\"200\" :fileList=\"fileList\" @afterRead=\"afterRead\" @delete=\"deletePic\" name=\"uploader-componet\" multiple :maxCount=\"9\"&gt; &lt;div style=\"background-color: #f4f5f7;width:200rpx;height:200rpx;display: flex;align-items: center;justify-content: center;border-radius: 4rpx;box-sizing: border-box;\"&gt; &lt;u-icon name=\"camera-fill\" color=\"#D3D4D6\" size=\"50\"&gt;&lt;/u-icon&gt; &lt;/div&gt;&lt;/u-upload&gt;&lt;u-button type=\"primary\" :plain=\"true\" text=\"提交申请\" @click=\"submitRefundApplyHandle()\"&gt;&lt;/u-button&gt; script.js123456&lt;script&gt; import refundApi from '@/api/refund.js' export default&#123; data()&#123; return &#123; fileList:[], 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879submitRefundApplyHandle()&#123; // this.$refs.refRefundApplyForm.validate().then(res =&gt; &#123; // uni.$u.toast('校验通过') // &#125;).catch(errors =&gt; &#123; // uni.$u.toast('校验失败') // &#125;) let formObj = deepCopy(this.refundApplyForm) formObj.reasonType = this.transf_reasonType[formObj.reasonType] this.applyRefundHandle(formObj)&#125;,applyRefundHandle(formObj)&#123; console.log('提交的表单：', formObj,this.fileList) const arr_temp = [] this.fileList.forEach((item,index) =&gt; &#123; arr_temp.push(&#123;name:'image'+index,uri: item.url&#125;) &#125;) // formObj.annexFiles = this.fileList let requestLength = 0 const annexFileIds = [] arr_temp.forEach((ele,index) =&gt; &#123; refundApi.uploadRefundAnnexFile(arr_temp[index], 'file').then(res =&gt; &#123; const response = JSON.parse(res) console.log('上传照片结果:',response) if (response.code === 200) &#123; ++requestLength annexFileIds.push(response.data) if(requestLength===arr_temp.length)&#123; formObj.annexFileIds = annexFileIds.join() refundApi.createRefundApply(formObj).then(res =&gt; &#123; console.log('提交申请结果:',res) if (res.code === 200) &#123; // 跳转到结果页 uni.reLaunch(&#123; url: '/pages/my/refundApply/refundResult?pageMsg=申请成功，请等待人员审核' &#125;); &#125; else &#123; uni.showToast(&#123; title: res.msg, icon: 'none', duration: 5000, &#125;) &#125; &#125;) &#125; &#125; else &#123; &#125; &#125;) &#125;)&#125;,// 删除图片deletePic(event) &#123; this.fileList.splice(event.index, 1)&#125;,afterRead(event) &#123; console.log('照片地址:', event) // 当设置 mutiple 为 true 时, file 为数组格式，否则为对象格式 let lists = [].concat(event.file) let fileListLen = this.fileList.length lists.map((item) =&gt; &#123; this.fileList.push(&#123; ...item, status: 'uploading', message: '上传中' &#125;) &#125;) for (let i = 0; i &lt; lists.length; i++) &#123; const url = lists[i].url let item = this.fileList[fileListLen] this.fileList.splice(fileListLen, 1, Object.assign(item, &#123; status: 'success', message: '', url: url &#125;)) fileListLen++ &#125;&#125;, config/request.js1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950function uploadFile_common (url, file, name, callback = '') &#123; const token = uni.getStorageSync('user_token') return new Promise((resolve, reject) =&gt; &#123; console.log('拿到的参数：', url, file, name) uni.uploadFile(&#123; url: baseUrl + url, header: &#123; 'Authorization': 'Bearer ' + token, 'Content-Type': 'multipart/form-data' &#125;, fileType:'image', filePath: file.uri, name: name, success: res =&gt; &#123; &#125;, fail: err =&gt; &#123; reject(err) console.log('[上传接口错误:uploadFile_common:',err) &#125;, complete: res =&gt; &#123; if (callback)&#123; return callback(res.data) &#125; if (res.data.code === 401) &#123; console.log('上传接口401:uploadFile_common') try &#123; uni.removeStorageSync('user_token') &#125; catch (e) &#123; console.log('user_token移除失败(uploadFile_common)') &#125; // 将需要重新执行的接口缓存到一个队列中 addSubscriber(() =&gt; &#123; uploadFile_common(url, file, name, formData, resolve) &#125;) if (isRefreshing) &#123; getNewToken().then(() =&gt; &#123; // 依次去执行缓存的接口 onAccessTokenFetched(); isRefreshing = true; &#125;).catch(e =&gt; &#123; console.log('getNewToken错误(uploadFile_common):', e) &#125;) &#125; isRefreshing = false; &#125; else &#123; resolve(res.data) &#125; &#125; &#125;) &#125;)&#125;export &#123; uploadFile_common &#125; refund.js12345678import &#123;uploadFile_common&#125; from '@/config/request.js'export default &#123; // 上传申请照片 uploadRefundAnnexFile(file, name) &#123; return uploadFile_common('/wechat/selfPrint/refundApply/uploadRefundApplyAnnexFile', file, name) &#125;,&#125; refundResult.vue 上传成功后展示1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;template&gt; &lt;view class=\"content\"&gt; &lt;view &gt; &lt;u--image :showLoading=\"true\" :src=\"require('static/img/my/submit.png')\" width=\"500rpx\" height=\"500rpx\"&gt; &lt;/u--image&gt; &lt;view class=\"text-style\"&gt;&#123;&#123;message&#125;&#125;&lt;/view&gt; &lt;view class=\"mg30\"&gt; &lt;u-button type=\"primary\" :plain=\"true\" text=\"返回首页\" @click=\"backHome()\"&gt; &lt;/u-button&gt; &lt;/view&gt; &lt;/view&gt; &lt;/view&gt;&lt;/template&gt;&lt;script&gt; export default&#123; data()&#123; return&#123; message:'' &#125; &#125;, onLoad:function(option)&#123; this.message = option.pageMsg &#125;, methods:&#123; backHome()&#123; uni.switchTab(&#123; url: '/pages/home/index' &#125;) &#125;, &#125; &#125;&lt;/script&gt;&lt;style lang=\"scss\" scoped&gt; .content&#123; margin-top: 100rpx; padding: 30rpx; display: flex; justify-content: center;; &#125; .text-style&#123; color: #aaa; text-align: center; &#125; .mg30&#123; margin-top: 30rpx; &#125;&lt;/style&gt;","categories":[],"tags":[{"name":"uniapp","slug":"uniapp","permalink":"http://unknownfor.github.io/tags/uniapp/"},{"name":"微信小程序","slug":"微信小程序","permalink":"http://unknownfor.github.io/tags/微信小程序/"},{"name":"移动端","slug":"移动端","permalink":"http://unknownfor.github.io/tags/移动端/"}]},{"title":"uni-小程序 环境变量配置","slug":"小程序-环境变量配置","date":"2022-05-09T08:11:34.000Z","updated":"2023-02-09T08:23:50.622Z","comments":true,"path":"2022/05/09/小程序-环境变量配置/","link":"","permalink":"http://unknownfor.github.io/2022/05/09/小程序-环境变量配置/","excerpt":"","text":"小程序环境变量配置，区分开发、体验、线上 封装__wxConfig.envVersion，main.js中引入注册，全局使用； 和后端约定了在请求header里除了token，还要加上requestId,为随机生成40位的字母，数字，-，三种,最后一位默认为4，为小程序标识 注意1234567891011121314151617181920let REQUEST_URL = \"\";function baseUrl() &#123; const envVersion = __wxConfig.envVersion; switch (envVersion) &#123; case 'develop': REQUEST_URL =\"http://xxxx.com\"; //开发版 break; case 'trial': REQUEST_URL = \"http://xxxx.com\"; //体验版 break; case 'release': REQUEST_URL = \"https://xxxx.com\"; //正式版 break; default: REQUEST_URL = \"正式域名地址\"; break; &#125; return REQUEST_URL;&#125;baseUrl() request公共方法123456789101112131415const randomString = (length) =&gt; &#123; let str = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-'; let result = ''; for (var i = length; i &gt; 0; --i) &#123; result += str[Math.floor(Math.random() * str.length)] &#125; return result&#125;const getHeader = () =&gt; &#123; const token = uni.getStorageSync('token') || ''; return &#123; token, 'Content-type': 'application/json;charset=UTF-8', 'requestId': randomString(39) + '4' // 随机生成40位的字母，数字，-，三种,最后一位默认为4，为小程序标识 &#125;&#125;","categories":[],"tags":[{"name":"uniapp","slug":"uniapp","permalink":"http://unknownfor.github.io/tags/uniapp/"},{"name":"微信小程序","slug":"微信小程序","permalink":"http://unknownfor.github.io/tags/微信小程序/"},{"name":"移动端","slug":"移动端","permalink":"http://unknownfor.github.io/tags/移动端/"}]},{"title":"Taro使用笔记","slug":"Taro使用笔记","date":"2021-05-09T02:38:41.000Z","updated":"2022-11-17T06:47:09.880Z","comments":true,"path":"2021/05/09/Taro使用笔记/","link":"","permalink":"http://unknownfor.github.io/2021/05/09/Taro使用笔记/","excerpt":"","text":"最近小程序做的实在是踩坑辛酸泪，做个笔记记录下吧 官方使用文档对脚手架的下载和项目创建和运行项目，仔细看完快速上手很详细，就是很多运行起来意料之外的bug 路由配置配置路由中我们要注意，创建的页面不会像uniapp那样自动给配置进全局配置里，需要手动对app.jsx进行配置。这里的报错就是没找到这个module，配置了还不行，改变了app.js必须重新运行，才会生效。 12345678// src/app.jsxpages: [ // 路由 'pages/home/index', 'pages/kind/index', 'pages/cart/index', 'pages/user/index', 'pages/index/index'] 页面配置在Taro中的页面配置并没有分一个单独的写，而是直接在组件中写 当然你想要下拉刷新的时候必须在这里面进行配置，否则就算在下拉刷新的周期里写了也不会有任何反应 12345678910class Home extends Component&#123; config = &#123; navigationBarBackgroundColor: '#ffffff', navigationBarTextStyle: 'black', navigationBarTitleText: '测试', backgroundColor: '#eeeeee', backgroundTextStyle: 'light', enablePullDownRefresh:true &#125; ｝ 公共请求封装在请求数据的时候，单独写的一个js让全部请求都能够使用，你这时候就不能光看一个请求区适配，有些有数据传，有些没数据传。有些get有些post这是后你就需要给其设定默认值，需要考虑好封装的请求大兼容性 12345678910111213141516171819import Taro from '@tarojs/taro'const baseUrl=\"http://xxxx\"export function request(options)&#123; let &#123;url,method,data&#125;=options return new Promise((resolve,reject)=&gt;&#123; Taro.request(&#123; url:baseUrl+url, method:method||'GET', data:data||&#123;&#125;, success:res=&gt;&#123; resolve(res) &#125;, fail:res=&gt;&#123; reject(res) &#125; &#125;) &#125;)&#125; 计算页面高度页面滚动到某个元素的时候，固定导航栏，小程序需要获取某个元素的高度。这个元素在子组件中。 也就是如何获取自定义组件中某个元素的信息。微信官方是使用this.createSelectorQuery。但是在taro小程序中，子组件使用this.createSelectorQuery会报错，直接抛出 this.createSelectorQuery is not a function。大部分百度信息是加延时。但是加了延时也不作用～ taro中正确用法：使用in(this.$scope) 12345wx.createSelectorQuery().in(this.$scope).select('.replay-content').boundingClientRect(function (rect: any) &#123; // to do&#125;).exec() defaultProps子组件中接收的props需要定义defaultProps。否则小程序端报错 期间还踩了大坑，在 Taro 中，JS 代码里必须书写单引号，特别是 JSX 中，如果出现双引号，可能会导致编译错误 小程序受限于wxml语法，也不支持扩展运算符 jsx小程序端不支持在render()之外定义jsx。比如在外面renderForm() 最后一项就是我自己的问题了，在关于计算属性时，由于之前是使用vue，而我经常使用computed来计算值直接渲染视图，我在使用Taro的时候就一直在寻找有没有对应的函数能够给我使用，最后看过案例后，才想起数据渲染视图这句话，我并不需要对应的方法使用同样可以得到我想要的结果，我在componentDidShow(){}函数中用进入时请求的值先行计算赋给state然后在计算的值改变的操作中再次调用此函数，最后能够在数据改变的时候让计算的值得到更新。","categories":[],"tags":[{"name":"微信小程序","slug":"微信小程序","permalink":"http://unknownfor.github.io/tags/微信小程序/"},{"name":"前端","slug":"前端","permalink":"http://unknownfor.github.io/tags/前端/"},{"name":"学习","slug":"学习","permalink":"http://unknownfor.github.io/tags/学习/"}]},{"title":"宏任务还是微任务？","slug":"宏任务还是微任务？","date":"2021-04-26T14:22:02.000Z","updated":"2022-04-26T14:53:21.280Z","comments":true,"path":"2021/04/26/宏任务还是微任务？/","link":"","permalink":"http://unknownfor.github.io/2021/04/26/宏任务还是微任务？/","excerpt":"","text":"概述我们都知道js是一个单线程，里面的的请求方式分为两种，一种是同步请求，一种是异步请求，同步方法先执行完毕，然后再去异步任务队列中查看有没有异步任务，有才会执行。 在JavaScript中，所有的任务都可以分为 同步任务：立即执行的任务，同步任务一般会直接进入到主线程中执行 异步任务：异步执行的任务，比如ajax网络请求，setTimeout定时函数等 常见的宏任务script、setTimeout、setInterval、setImmediate 常见的微任务一个需要异步执行的函数，执行时机是在主函数执行结束之后、当前宏任务结束之前 Promise中的then、async、await、process.nextTick（Node.js）、MutationObserver（监听DOM变化的事件）、Object.observe（已废弃；Proxy 对象替代） 关于两者之间的区别：微任务是批量执行、宏任务则是一个一个的执行。 执行一个宏任务，如果遇到微任务就将它放到微任务的事件队列中 当前宏任务执行完成后，会查看微任务的事件队列，然后将里面的所有微任务依次执行完 这里我们可以看到，script标签包含的下面的代码块，那么这就属于是第一个异步任务，也就是宏任务，首先去执行它 123456789101112131415161718192021222324&lt;script&gt; console.log('1') setTimeout(function () &#123; console.log('2') &#125;); new Promise(function (resolve) &#123; console.log('3'); resolve(); &#125;).then(function () &#123; console.log('4') setTimeout(function () &#123; console.log('5') &#125;); &#125;); new Promise(function (resolve) &#123; console.log('6'); resolve(); &#125;).then(function () &#123; console.log('7') setTimeout(function () &#123; console.log('8') &#125;); &#125;);&lt;/script&gt; 1234567891011121314151617181920212223242526272829setTimeout(() =&gt; &#123; console.log(0)&#125;, 0) new Promise((resolve, reject) =&gt; &#123; console.log(1) resolve()&#125;).then(() =&gt; &#123; console.log(2) new Promise((resolve, reject) =&gt; &#123; console.log(3) resolve() &#125;).then(() =&gt; &#123; console.log(4) &#125;).then(() =&gt; &#123; console.log(5) &#125;)&#125;).then(() =&gt; &#123; console.log(6)&#125;) new Promise((resolve, reject) =&gt; &#123; console.log(7) resolve()&#125;).then(() =&gt; &#123; console.log(8)&#125;)172384650 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980console.log(1);new Promise((resolve, reject) =&gt; &#123; console.log(2); setTimeout(() = &gt;&#123; console.log(3) &#125;); resolve()&#125;).then(() =&gt;&#123; console.log(4)&#125;);setTimeout(() =&gt;&#123; console.log(5)&#125;);console.log(6)1，2，6，4，3，5&lt;script&gt; console.log('1') setTimeout(function () &#123; console.log('2') &#125;); new Promise(function (resolve) &#123; console.log('3'); resolve(); &#125;).then(function () &#123; console.log('4') setTimeout(function () &#123; console.log('5') &#125;); &#125;); new Promise(function (resolve) &#123; console.log('6'); resolve(); &#125;).then(function () &#123; console.log('7') setTimeout(function () &#123; console.log('8') &#125;); &#125;); console.log(9)&lt;/script&gt;136947258let promise = new Promise(resolve=&gt;&#123; setTimeout(()=&gt;&#123; resolve(); console.log('1') &#125;,0); console.log('2')&#125;).then(value=&gt;console.log('3'))console.log('4')2413console.log(1) // 遇到 console.log(1) ，直接打印 1// 遇到定时器，属于新的宏任务，留着后面执行setTimeout(()=&gt;&#123; console.log(2)&#125;, 0)// 遇到 new Promise，这个是直接执行的，打印 'new Promise'new Promise((resolve, reject)=&gt;&#123; console.log('new Promise') resolve()&#125;).then(()=&gt;&#123; // .then 属于微任务，放入微任务队列，后面再执行 console.log('then')&#125;)console.log(3) // 遇到 console.log(3) 直接打印 3// 好了本轮宏任务执行完毕，现在去微任务列表查看是否有微任务，发现 .then 的回调，执行它，打印 'then'// 当一次宏任务执行完，再去执行新的宏任务，这里就剩一个定时器的宏任务了，执行它，打印 2实际结果是：1=&gt;'new Promise'=&gt; 3 =&gt; 'then' =&gt; 2 总结同步&gt;微任务&gt;宏任务 async与awaitasync 是异步的意思，await则可以理解为 async wait。所以可以理解async就是用来声明一个异步方法，而 await是用来等待异步方法执行 async函数返回一个promise对象，下面两种方法是等效的 12345678function f() &#123; return Promise.resolve('TEST');&#125;// asyncF is equivalent to f!async function asyncF() &#123; return 'TEST';&#125; 正常情况下，await命令后面是一个 Promise对象，返回该对象的结果。如果不是 Promise对象，就直接返回对应的值。不管await后面跟着的是什么，await都会阻塞后面的代码 123456789101112async function fn1 ()&#123; console.log(1) await fn2() console.log(2) // 阻塞&#125;async function fn2 ()&#123; console.log('fn2')&#125;fn1()console.log(3) 上面的例子中，await会阻塞下面的代码（即加入微任务队列），先执行 async外面的同步代码，同步代码执行完，再回到 async 函数中，再执行之前阻塞的代码 所以上述输出结果为：1，fn2，3，2 参考文章 宏任务微任务 事件循环","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://unknownfor.github.io/tags/前端/"},{"name":"学习","slug":"学习","permalink":"http://unknownfor.github.io/tags/学习/"}]},{"title":"手写一个带有并发限制的异步调度器","slug":"手写一个带有并发限制的异步调度器","date":"2020-06-29T12:02:25.000Z","updated":"2022-04-19T14:06:42.291Z","comments":true,"path":"2020/06/29/手写一个带有并发限制的异步调度器/","link":"","permalink":"http://unknownfor.github.io/2020/06/29/手写一个带有并发限制的异步调度器/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364/** * 并发限制 */class Schedule &#123; constructor() &#123; this.waitList = [] // 异步任务等待队列 this.execList = [] // 异步任务执行队列 this.maxNum = 2 //最大并发数量 &#125; // 添加异步任务 add(callback) &#123; // 先判断异步任务执行队列长度 if(this.execList.length &lt; this.maxNum) &#123; //如果执行队列数量小于最大并发数量，则将该队列放入异步执行队列 this.execList.push(callback) // 并执行该任务 this.run(callback) &#125;else &#123; // 否则将该任务放入等待队列 this.waitList.push(callback) &#125; &#125; // 执行异步任务 run(callback) &#123; const len = this.execList.length let index = len - 1 //获取当前正在执行的异步任务的索引 // 执行该异步任务 callback().then(() =&gt; &#123; // 执行完将该任务移出执行队列 this.execList.splice(index, 1) // 再判断等待队列是否还有异步任务 if(this.waitList.length &gt; 0) &#123; this.run(this.waitList.shift()) &#125; &#125;) &#125;&#125;const timeout = time =&gt; new Promise((resolve, reject) =&gt; &#123; setTimeout(resolve, time)&#125;)const schedule = new Schedule()function addTask(time, index) &#123; schedule.add( ()=&gt;timeout(time).then(()=&gt;console.log(index, +new Date())) )&#125;addTask(1000, 1)addTask(500, 2)addTask(300, 3)addTask(400, 4)// 2,3,1,4/** * 先任务1进执行队列，任务1开始执行，接着任务2进执行队列，任务2开始执行 * 接着任务3进等待队列，任务4进等待队列。时间到了500ms，打印出2，任务2移出执行队列 * 任务3进执行队列，此时时间到了（500+300）800ms，打印出3，任务3移出执行队列 * 任务4进执行队列，此时时间到了1000ms，打印出1，任务1移出执行队列 * 等待队列没有任务了，此时时间到了（800+400）1200ms，打印出4 */ 最近看到一道面试题，题目如下： 红灯三秒亮一次，绿灯一秒亮一次，黄灯2秒亮一次；如何让三个灯不断交替重复亮灯？（用 Promise 实现） 三个亮灯函数已经存在：123456789function red()&#123; console.log('red');&#125;function green()&#123; console.log('green');&#125;function yellow()&#123; console.log('yellow');&#125; 利用 then 和递归实现：1234567891011121314151617181920212223242526272829303132333435function red()&#123; console.log('red');&#125;function green()&#123; console.log('green');&#125;function yellow()&#123; console.log('yellow');&#125;const lightUp = (timmer, callback) =&gt; &#123; return new Promise((resolve, reject) =&gt; &#123; setTimeout(() =&gt; &#123; callback(); resolve(); &#125;, timmer); &#125;)&#125;const trafficStep = () =&gt; &#123; Promise.resolve() .then(() =&gt; &#123; return light(3000, red); &#125;) .then(() =&gt; &#123; return light(2000, green); &#125;) .then(() =&gt; &#123; return light(1000, yellow); &#125;) .then(() =&gt; &#123; trafficStep(); // 执行完毕后，递归执行 &#125;)&#125;trafficStep() 执行效果如图所示","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://unknownfor.github.io/tags/前端/"},{"name":"面试","slug":"面试","permalink":"http://unknownfor.github.io/tags/面试/"}]},{"title":"H5开发配置","slug":"H5开发配置","date":"2020-03-11T08:46:44.000Z","updated":"2021-08-12T08:17:26.158Z","comments":true,"path":"2020/03/11/H5开发配置/","link":"","permalink":"http://unknownfor.github.io/2020/03/11/H5开发配置/","excerpt":"","text":"whistle全局安装 whistle , 文档地址 使用时用 git 命令行 w2 start，关闭使用w2 stop rules 目录配置 ip 地址为项目运行后npm run dev后的 ip 结果 value 目录下配置1234567vsconsole&lt;script src=\"https://cdn.bootcdn.net/ajax/libs/vConsole/3.3.4/vconsole.min.js\"&gt;&lt;/script&gt;run vsconsolevar vConsole = new VConsole(); 配置证书 1注意：证书必须安装在企业信任的目录下，不然配置不会成功 whistle script安装 script 插件，下载地址 12npm install -g whistlenpm install -g whistle.script Proxy SwitchyOmega谷歌浏览器安装插件，使用的时候选择【proxy】情景模式 服务器配置","categories":[],"tags":[{"name":"移动开发","slug":"移动开发","permalink":"http://unknownfor.github.io/tags/移动开发/"}]},{"title":"2019年终总结","slug":"2019年终总结","date":"2020-01-14T07:15:25.000Z","updated":"2021-08-12T05:54:36.356Z","comments":true,"path":"2020/01/14/2019年终总结/","link":"","permalink":"http://unknownfor.github.io/2020/01/14/2019年终总结/","excerpt":"","text":"a、2019年做了哪些工作，列举出最重要的三项并阐述每一项工作取得的效果； b、这三项工作当中有哪些做得好的，哪些做得不好的，要有详尽的分析； c、2020年自己的能力提升计划和关键动作是什么。 12345- 单店分析模型- 样式、地图- 户口簿- 单一模块拆分组件- 老平台支出预算模块优化 功能更加细化2019年的工作，主要做了支出预算管理优化、个人额度、万村批量付款、经营指标管理ce&amp;noi济南试点。从不懂为什么要做这样的需求，到逐渐理解。印象最深刻的就是【户口簿】【老平台支出预算模块优化】【单店分析模型】。 资产户口簿列表多，编辑逻辑复杂，因为是在新平台上开发，有严格的eslint规范，所以需要做到细分功能模块，做组件拆分和复用。详情涉及到36个Number类型字段，且都可以修改。不仅区分出手填和一般编辑，还细分出调值和调账功能。对用户角色做了可操作权限的严格区分。详情页的拆成一个table，只负责做展示功能，可编辑功能拆分表格，渲染不同的弹窗模式。 先判断当前用户权限，再去调用操作逻辑代码。 组件还有优化空间老平台支出预算模块优化。今年一年总是在【修修补补】这部分模块的功能。一点点的删除和替换旧语法和逻辑代码，换成es6的简介写法。尝试把多处重复使用的css文件改为less写法并压缩。把ajax请求改成手动异步模式。 但是目前为止还是下手紧张，进度缓慢。代码文件还是过大，部分js文件超过了100kb。 单店分析模型 也遇到了和户口簿一样的问题，表单多，需要拆分多个。比较特殊的是没有办法做到代码复用，每一个表单都是独一无二的。样式特殊，需要手动绘制页面，还涉及到饼图和柱状图。 最大的问题就是地图样式问题，因为时间紧迫使用了v-chart，缺少官方文档。没有研究出来如何自定义样式地图，是坤哥帮忙查看源码解决了这个问题，感谢坤哥。 2020年自己的能力提升计划需要从用户的角度思考功能点交互细节 持续思考提升工程质量的方式，如 TypeScript、Code Review 和自动化测试等 继续研究自动化测试相关。 对门店线一组对期望和想法。迭代时间最长不要超过三周。 更加严谨的执行测试用例。","categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"http://unknownfor.github.io/tags/生活/"}]},{"title":"手写节流函数和防抖函数","slug":"手写节流函数和防抖函数","date":"2019-08-13T15:50:04.000Z","updated":"2022-04-06T12:01:58.255Z","comments":true,"path":"2019/08/13/手写节流函数和防抖函数/","link":"","permalink":"http://unknownfor.github.io/2019/08/13/手写节流函数和防抖函数/","excerpt":"","text":"函数节流不断触发一个函数后，执行第一次，只有大于设定的执行周期后才会执行第二次 123456789101112131415161718/* 节流函数：fn:要被节流的函数，delay：规定的时间 */ function throttle(fn,delay)&#123; // 记录上一次函数出发的时间 var lastTime = 0 return function()&#123; // 记录当前函数触发的时间 var nowTime = new Date().getTime() // 当当前时间减去上一次执行时间大于这个指定间隔时间才让他触发这个函数 if(nowTime - lastTime &gt; delay)&#123; // 绑定this指向 fn.call(this) //同步时间 lastTime = nowTime &#125; &#125; &#125; 函数防抖不断触发一个函数，在规定时间内只让最后一次生效，前面都不生效 1234567891011function debounce(fn,delay)&#123; var timer = null // 清除上一次延时器 return function()&#123; clearTimeout(timer) // 重新设置一个新的延时器 timer = setTimeout(() =&gt; &#123; fn.call(this) &#125;, delay); &#125; &#125;","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://unknownfor.github.io/tags/前端/"},{"name":"面试","slug":"面试","permalink":"http://unknownfor.github.io/tags/面试/"}]},{"title":"人脸识别门禁功能","slug":"人脸识别门禁功能","date":"2019-07-18T07:53:28.000Z","updated":"2021-08-12T06:49:47.281Z","comments":true,"path":"2019/07/18/人脸识别门禁功能/","link":"","permalink":"http://unknownfor.github.io/2019/07/18/人脸识别门禁功能/","excerpt":"","text":"需求比较急，就用了微信的weui 1import weui from \"weui.js/dist/weui.min\"; 123456789101112131415161718//拉起微信的图片上传服务upload() &#123; $.utils.uploadImage(data =&gt; &#123; this.signedUrl = data.signedUrl; this.sendData.originUrl = data.originUrl; this.submit(data.originUrl); &#125;, true);&#125;, //预览图片preview(url) &#123; let urls = []; urls[0] = url; window.wx.previewImage(&#123; current: url, // 当前显示图片的http链接 urls: urls // 需要预览的图片http链接列表 &#125;);&#125;, 图片上传微信 API wx.chooseImage 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061InitJsSdk: function (callback) &#123; if (_wxInited) &#123; callback &amp;&amp; callback(); return; &#125; var url = \"/weixin/jssdksign\"; $.ajax( url , &#123; data: &#123; \"url\": window.location.href.split('#')[0] &#125;, type: \"GET\", success: function (data) &#123; if (data) &#123; data.jsApiList = [ \"previewImage\", \"getLocation\", \"openLocation\", \"chooseImage\", \"uploadImage\", \"onMenuShareTimeline\", //分享到朋友圈 \"onMenuShareAppMessage\", //发送给朋友 \"hideMenuItems\", //批量隐藏功能按钮 \"showMenuItems\" //批量显示功能按钮 ]; wx.config(data); wx.ready(function () &#123; wx.hideMenuItems(&#123; menuList: ['menuItem:share:appMessage','menuItem:share:timeline',\"menuItem:share:qq\",\"menuItem:share:QZone\",\"menuItem:copyUrl\"] &#125;); _wxInited = true; callback &amp;&amp; callback(); &#125;); &#125; &#125;, error:function(e)&#123; &#125; &#125;);&#125;,//微信上传图片uploadImage: function (callback,safe,count) &#123; _utils.InitJsSdk(function () &#123; wx.chooseImage(&#123; count: count || 1, // 默认9 // sizeType: ['original','compressed'], // 可以指定是原图还是压缩图，默认二者都有 // sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有 success: function (res) &#123; var localIds = res.localIds; try &#123; _utils.pushAllImg(localIds, safe, callback) &#125; catch (error) &#123; console.log(JSON.stringify(error)) &#125; &#125;, error:function(error)&#123; $.message.show('图片选取失败!') &#125; &#125;) &#125;)&#125;, 查看预览,返回的wx.preview 遇到了微信公众号开发者工具，调用这两个方法都是报错的问题。发布测试后就发现 ok 了，原来工具不支持这个方法，还是得真机调试。 封装好的请求和方法一定要调试好了之后再调试，不然不停发布测试实在是耽误时间和精力。 提前测试好文件上传，替换好。抓包测试。 12345678910[&#123;id: '', number: '',bank_num:''&#125;,&#123; id: '', number: '',bank_num:''&#125;] 提交报错后， 提交中 loading 态没有取消,需要处理 catch error","categories":[],"tags":[{"name":"工作笔记","slug":"工作笔记","permalink":"http://unknownfor.github.io/tags/工作笔记/"}]},{"title":"操作按钮展示逻辑","slug":"操作按钮展示逻辑","date":"2019-06-12T06:46:27.000Z","updated":"2021-08-26T07:34:11.590Z","comments":true,"path":"2019/06/12/操作按钮展示逻辑/","link":"","permalink":"http://unknownfor.github.io/2019/06/12/操作按钮展示逻辑/","excerpt":"","text":"合同申请 接口：/contract-expend/detail status为0 default，默认为新增状态 按钮 状态(data.detail.detail.status) 合同归档 data.detail.detail.hasFileManageTag 保存 0、1 提交 0、1 发起K2审批 14 撤回草稿 14 生成付款单 10 结算合同 10 查看审批流程 非0状态下都展示 删除 data.detail.operation.delete 作废 data.detail.operation.abolish 合同付款单申请 接口：无 status为0 默认为新增状态 url带newId 为重新发起的单据 区分付款方式 按钮 状态(data.detail.detail.status) 保存 0、url带newId、8、10、17、24 提交 0、url带newId、5、8、17、24 或者invoiceType为2，且status为10 发起K2审批 26、27 撤回草稿 26 冲账 12、或者invoiceType为1且status为10或者19 打印封面 2、3、4、9、15、16、 11, 18, 20, 21, 22, 23, 25、url带newId 复制&amp;重新发起 25 查看审批流程 非0、非5、非url带newId 删除 5、8、10、17、24，以上状态url不能带newId、非invoiceType为1且status为10 事项申请 接口：/expend-matter/get-edit-data status为0 默认为新增状态 按钮 状态（data.data.expenditure.status_cn） 提交 0、草稿 保存 0、草稿 删除 0、草稿 查看审批流程 != ‘草稿’ 或者 data.data.showFlag==true 撤回 等待审批 生成付款单 审批通过且data.data.expenditure.left_apply_amount大于0 事项已完成 审批通过 作废 审批通过且data.data.expenditure.invoices 小于等于0 发起k2审批 未发起K2审批 撤回到草稿 未发起K2审批 事项付款单 接口：/expend-matter/get-invoice-info status为0 默认为新增状态 按钮 状态（data.data.invoiceStatus） 提交 0、url带resend、5、8、10、17、24、!(type为1和status为10) 保存 0、url带resend、5 删除 5、8、10、17、24、!(type为1和status为10) 查看审批流程 != 5 或 data.data.hasK2.length 打印封面 0、1、2、3、4、6、7、9、11、12、13、14、15、16、18、20、21、22、23 冲账 type == 1 且 status 10、12、19 复制&amp;重新发起 25 发起k2审批 26、27 撤回草稿 26","categories":[],"tags":[{"name":"工作笔记","slug":"工作笔记","permalink":"http://unknownfor.github.io/tags/工作笔记/"}]},{"title":"ElementUI和第三方图标库Iconfont","slug":"ElementUI和第三方图标库Iconfont","date":"2019-05-27T07:39:38.000Z","updated":"2020-05-27T07:43:13.872Z","comments":true,"path":"2019/05/27/ElementUI和第三方图标库Iconfont/","link":"","permalink":"http://unknownfor.github.io/2019/05/27/ElementUI和第三方图标库Iconfont/","excerpt":"","text":"遇到一个需求，ElementUI没有符合的图标，需要插入ui提供的图标，所以使用iconfont。 在项目李找到该图标，本次使用的是【xitong】这个图标。选择font class，再选择在线链接，复制这个链接。在less文件里引入这个iconfont，插入到el-input即可使用。 1234567891011121314151617&lt;template&gt; &lt;el-input size=\"medium\" suffix-icon=\"iconfont icon-JYT-icon-xitong\" v-model=\"item.value\" &gt;&lt;/el-input&gt;&lt;/template&gt;&lt;script&gt;export default &#123; data() &#123; item: &#123;&#125; &#125;&#125;&lt;/script&gt;&lt;style scoped&gt;@import url('//at.alicdn.com/t/font_1712723_tp9lsy2fuua.css');&lt;/style&gt;","categories":[],"tags":[{"name":"Element","slug":"Element","permalink":"http://unknownfor.github.io/tags/Element/"}]},{"title":"ElementUI table 编辑拓展","slug":"ElementUI-table-编辑拓展","date":"2019-02-27T06:17:21.000Z","updated":"2020-05-27T07:43:09.528Z","comments":true,"path":"2019/02/27/ElementUI-table-编辑拓展/","link":"","permalink":"http://unknownfor.github.io/2019/02/27/ElementUI-table-编辑拓展/","excerpt":"","text":"被调到新的项目组，开始财务模块开发，涉及到大量报表和数字。最近的需求涉及到element table，各种详细的要求，要求拓展目前现有的table内容，期间也遇到了很多问题，现在记录下来。 目录 允许点击table任意一栏编辑 表头合并和样式自定义 允许上传附件 树状table，允许展开折叠操作 根据选择器选择的内容动态新增可编辑的字段 界面编辑操作，输入数据，光标丢失，感觉很卡 表格编辑 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143&lt;!DOCTYPE html&gt;&lt;html &gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt; &lt;title&gt;Demo&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"https://unpkg.com/element-ui/lib/theme-chalk/index.css\"&gt; &lt;style&gt; .el-table-add-row &#123; margin-top: 10px; width: 100%; height: 34px; border: 1px dashed #c1c1cd; border-radius: 3px; cursor: pointer; justify-content: center; display: flex; line-height: 34px;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"app\"&gt; &lt;el-row&gt; &lt;el-col span=\"24\"&gt; &lt;el-table size=\"mini\" :data=\"master_user.data\" border style=\"width: 100%\" highlight-current-row&gt; &lt;el-table-column type=\"index\"&gt;&lt;/el-table-column&gt; &lt;el-table-column v-for=\"(v,i) in master_user.columns\" :prop=\"v.field\" :label=\"v.title\" :width=\"v.width\"&gt; &lt;template slot-scope=\"scope\"&gt; &lt;span v-if=\"scope.row.isSet\"&gt; &lt;el-input size=\"mini\" placeholder=\"请输入内容\" v-model=\"master_user.sel[v.field]\"&gt; &lt;/el-input&gt; &lt;/span&gt; &lt;span v-else&gt;&#123;&#123;scope.row[v.field]&#125;&#125;&lt;/span&gt; &lt;/template&gt; &lt;/el-table-column&gt; &lt;el-table-column label=\"操作\" width=\"100\"&gt; &lt;template slot-scope=\"scope\"&gt; &lt;span class=\"el-tag el-tag--info el-tag--mini\" style=\"cursor: pointer;\" @click=\"pwdChange(scope.row,scope.$index,true)\"&gt; &#123;&#123;scope.row.isSet?'保存':\"修改\"&#125;&#125; &lt;/span&gt; &lt;span v-if=\"!scope.row.isSet\" class=\"el-tag el-tag--danger el-tag--mini\" style=\"cursor: pointer;\"&gt; 删除 &lt;/span&gt; &lt;span v-else class=\"el-tag el-tag--mini\" style=\"cursor: pointer;\" @click=\"pwdChange(scope.row,scope.$index,false)\"&gt; 取消 &lt;/span&gt; &lt;/template&gt; &lt;/el-table-column&gt; &lt;/el-table&gt; &lt;/el-col&gt; &lt;el-col span=\"24\"&gt; &lt;div class=\"el-table-add-row\" style=\"width: 99.2%;\" @click=\"addMasterUser()\"&gt;&lt;span&gt;+ 添加&lt;/span&gt;&lt;/div&gt; &lt;/el-col&gt; &lt;/el-row&gt; &lt;/div&gt; &lt;!-- import Vue before Element --&gt; &lt;script src=\"https://unpkg.com/vue@2.5.17/dist/vue.min.js\"&gt;&lt;/script&gt; &lt;!-- import JavaScript --&gt; &lt;script src=\"https://unpkg.com/element-ui/lib/index.js\"&gt;&lt;/script&gt; &lt;script&gt; //id生成工具 这个不用看 示例而已 模拟后台返回的id var generateId = &#123; _count: 1, get()&#123;return ((+new Date()) + \"_\" + (this._count++))&#125; &#125;; //主要内容 var app = new Vue(&#123; el: \"#app\", data: &#123; master_user: &#123; sel: null,//选中行 columns: [ &#123; field: \"type\", title: \"远程类型\", width: 120 &#125;, &#123; field: \"addport\", title: \"连接地址\", width: 150 &#125;, &#123; field: \"user\", title: \"登录用户\", width: 120 &#125;, &#123; field: \"pwd\", title: \"登录密码\", width: 220 &#125;, &#123; field: \"info\", title: \"其他信息\" &#125; ], data: [], &#125;, &#125;, methods: &#123; //读取表格数据 readMasterUser() &#123; //根据实际情况，自己改下啊 app.master_user.data.map(i =&gt; &#123; i.id = generateId.get();//模拟后台插入成功后有了id i.isSet=false;//给后台返回数据添加`isSet`标识 return i; &#125;); &#125;, //添加账号 addMasterUser() &#123; for (let i of app.master_user.data) &#123; if (i.isSet) return app.$message.warning(\"请先保存当前编辑项\"); &#125; let j = &#123; id: 0, \"type\": \"\", \"addport\": \"\", \"user\": \"\", \"pwd\": \"\", \"info\": \"\", \"isSet\": true, \"_temporary\": true &#125;; app.master_user.data.push(j); app.master_user.sel = JSON.parse(JSON.stringify(j)); &#125;, //修改 pwdChange(row, index, cg) &#123; //点击修改 判断是否已经保存所有操作 for (let i of app.master_user.data) &#123; if (i.isSet &amp;&amp; i.id != row.id) &#123; app.$message.warning(\"请先保存当前编辑项\"); return false; &#125; &#125; //是否是取消操作 if (!cg) &#123; if (!app.master_user.sel.id) app.master_user.data.splice(index, 1); return row.isSet = !row.isSet; &#125; //提交数据 if (row.isSet) &#123; //项目是模拟请求操作 自己修改下 (function () &#123; let data = JSON.parse(JSON.stringify(app.master_user.sel)); for (let k in data) row[k] = data[k]; app.$message(&#123; type: 'success', message: \"保存成功!\" &#125;); //然后这边重新读取表格数据 app.readMasterUser(); row.isSet = false; &#125;)(); &#125; else &#123; app.master_user.sel = JSON.parse(JSON.stringify(row)); row.isSet = true; &#125; &#125; &#125; &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 表头合并、自定样式、表格附件上传 表头合并参考了element官方文档，只需要在 el-table-column 里面嵌套 el-table-column，就可以实现多级表头；render-header 列标题 Label 区域渲染使用的 Function，就可以实现表头样式自定义 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667&lt;el-table-column label=\"关停期间损失\"&gt; &lt;el-table-column prop=\"landlord_liquidated_damages\" :render-header=\"renderHeader\" label=\"赔付给房东的违约金（元）\" &gt; &lt;template slot-scope=\"scope\"&gt; &#123;&#123; format(scope.row.landlord_liquidated_damages) &#125;&#125;&lt;/template &gt; &lt;/el-table-column&gt; &lt;el-table-column prop=\"tenant_liquidated_damages\" :render-header=\"renderHeader\" label=\"赔付给租客的违约金（元）\" &gt; &lt;template slot-scope=\"scope\"&gt;&#123;&#123; format(scope.row.tenant_liquidated_damages) &#125;&#125;&lt;/template&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=\"client_liquidated_damages\" :render-header=\"renderHeader\" label=\"赔付给委托方的违约金（元）\" &gt; &lt;template slot-scope=\"scope\"&gt;&#123;&#123; format(scope.row.client_liquidated_damages) &#125;&#125;&lt;/template&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=\"operating_loss\" :render-header=\"renderHeader\" label=\"经营亏损（元）\" &gt; &lt;template slot-scope=\"scope\"&gt;&#123;&#123; format(scope.row.operating_loss) &#125;&#125;&lt;/template&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=\"additional_investment\" :render-header=\"renderHeader\" label=\"追加投资（元）\" &gt; &lt;template slot-scope=\"scope\"&gt;&#123;&#123; format(scope.row.additional_investment) &#125;&#125;&lt;/template&gt; &lt;/el-table-column&gt;&lt;/el-table-column&gt;&lt;el-table-column prop=\"upload\" label=\"附件\"&gt; &lt;template slot-scope=\"scope\"&gt; &lt;div class=\"files-box\" v-for=\"(a, aIndex) in scope.row.upload\" :key=\"aIndex\" &gt; &lt;div class=\"files-box__name\" :title=\"a.name\"&gt;&#123;&#123; a.name &#125;&#125;&lt;/div&gt; &lt;div class=\"files-box__btn\"&gt; &lt;el-button type=\"text\" @click=\"checkFile(a.url)\"&gt;查看&lt;/el-button&gt; &lt;el-button v-if=\"!isDetail\" type=\"text\" @click=\"delFile(aIndex, scope.$index)\" &gt;删除&lt;/el-button &gt; &lt;/div&gt; &lt;/div&gt; &lt;/template&gt;&lt;/el-table-column&gt; 12345678910111213141516171819202122232425262728293031323334353637383940/** * 表头样式自定义 */ renderHeader(h, &#123; column, $index &#125;) &#123; let str = '' if ( column.label == '预计总投（万元)' || column.label == '预计NOI/GOP投资回报率（%）' ) &#123; str = '投资收益' &#125; else &#123; str = '关停信息' &#125; return ( &lt;span&gt; &#123;str&#125; &lt;br /&gt; &lt;span class=\"c6\"&gt;&#123;column.label&#125;&lt;/span&gt; &lt;/span&gt; ) &#125;, /** * 删除附件 * @param &#123;*&#125; i 附件index * @param &#123;*&#125; l list的index */ delFile(i, l) &#123; this.list[l].upload.splice(i, 1) &#125;, // 查看加密附件 async checkFile(url) &#123; try &#123; let res = await PmService.getSignedUrl(url) window.open(res.data.url, res.data.url) &#125; catch (e) &#123; console.error(e) &#125; return '#' &#125; 1234567891011121314151617181920212223242526&lt;style&gt;.c6 &#123; color: #606266;&#125;.c6::before &#123; content: \"*\"; color: #f56c6c; margin-right: 4px;&#125;.files-box &#123; position: relative;&#125;.files-box__name &#123; height: 40px; line-height: 40px; width: 110px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;&#125;.files-box__btn &#123; position: absolute; top: 0; right: 0;&#125;&lt;/style&gt; 树状table，允许展开折叠操作 default-expand-all 是否默认展开所有行，当 Table 包含展开行存在或者为树形表格时有效 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346&lt;template&gt; &lt;div class=\"f-mt\"&gt; &lt;el-table :data=\"data\" style=\"width: 100%;\" row-key=\"id\" :indent=\"6\" :default-expand-all=\"default_expand_all\" border :tree-props=\"&#123; children: 'children', hasChildren: 'hasChildren' &#125;\" &gt; &lt;el-table-column prop=\"name\" label=\"指标名称\"&gt; &lt;template slot-scope=\"scope\"&gt; &#123;&#123; scope.row.name &#125;&#125; &lt;f-tips v-if=\"scope.row.method\" top=\"25%\" :width=\"400\"&gt;&#123;&#123; scope.row.method &#125;&#125;&lt;/f-tips&gt; &lt;/template&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=\"systemValue\" label=\"前台系统取值（元）\"&gt; &lt;template slot-scope=\"scope\"&gt; &lt;!-- show_system_desc --&gt; &lt;el-tooltip effect=\"dark\" :content=\"scope.row.show_system_desc\" placement=\"top\" &gt; &lt;el-button type=\"text\"&gt;&#123;&#123; format(scope.row.systemValue) &#125;&#125;&lt;/el-button&gt; &lt;/el-tooltip&gt; &lt;/template&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=\"manualValue\" label=\"手工补录(元)\"&gt; &lt;template slot-scope=\"scope\"&gt; &lt;el-form&gt; &lt;el-form-item :key=\"scope.row.id\" :error=\"valid[scope.row.id + '_' + scope.row.name]\" &gt; &lt;el-tooltip effect=\"dark\" :content=\"scope.row.show_manual_desc\" placement=\"top\" &gt; &lt;el-input size=\"medium\" @input=\" checkInput( scope.row.manualValue, scope.row.id, scope.row.name ) \" v-model=\"scope.row.manualValue\" placeholder=\"请输入\" &gt;&lt;/el-input&gt; &lt;/el-tooltip&gt; &lt;/el-form-item&gt; &lt;/el-form&gt; &lt;/template&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=\"total\" label=\"合计(元)\"&gt; &lt;template slot-scope=\"scope\"&gt; &lt;el-tooltip effect=\"dark\" :content=\"scope.row.show_system_desc\" placement=\"top\" &gt; &lt;span&gt; &#123;&#123; scope.row.can_edit ? format( ( Number(scope.row.systemValue) + Number(scope.row.manualValue) ).toFixed(2) ) : format(scope.row.total) &#125;&#125; &lt;/span&gt; &lt;/el-tooltip&gt; &lt;/template&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=\"houses\" label=\"楼栋均摊(元)\" width=\"620\"&gt; &lt;template slot-scope=\"scope\"&gt; &lt;el-form :inline=\"true\" label-position=\"right\" label-width=\"120px\"&gt; &lt;el-form-item v-for=\"(item, index) in scope.row.show_houses\" :label=\"item.name\" :key=\"index\" :error=\"valid[item.id + '_' + scope.row.name]\" &gt; &lt;el-tooltip effect=\"dark\" placement=\"top\" :content=\"item.show_system_desc\" &gt; &lt;el-input size=\"medium\" style=\"width: 130px;\" :disabled=\"!item.can_edit\" @input=\" checkInput(item.value, item.id, scope.row.name, scope.row) \" v-model=\"item.value\" placeholder=\"请输入修改数值\" &gt;&lt;/el-input&gt; &lt;/el-tooltip&gt; &lt;/el-form-item&gt; &lt;el-button class=\"show-btn\" v-if=\"scope.row.houses &amp;&amp; scope.row.houses.length &gt; 2\" type=\"text\" @click=\"handleMore(scope.row)\" &gt;查看更多&lt;/el-button &gt; &lt;/el-form&gt; &lt;/template&gt; &lt;/el-table-column&gt; &lt;/el-table&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;function makeMsg(oriMsg, msg) &#123; return `$&#123;oriMsg&#125;$&#123;msg ? '，' + msg : ''&#125;`&#125;export default &#123; name: 'table-form', props: &#123; data: &#123; type: [Array], required: true &#125;, // 控制树展开折叠 default_expand_all: &#123; type: Boolean, required: true &#125; &#125;, data() &#123; return &#123; valid: &#123;&#125;, title: '', form: &#123; houses: [] &#125;, rules: &#123;&#125;, visible: false, active: ['1'], error_info: [], d_loading: false, list: [], field: &#123; visible: false, loading: false, title: '' &#125; &#125; &#125;, watch: &#123;&#125;, computed: &#123;&#125;, methods: &#123; /** * 编辑 ,校验输入合法 * @param &#123;*&#125; value * @param &#123;*&#125; id * @param &#123;*&#125; name * @param &#123;*&#125; item 当前编辑的item */ checkInput(value, id, name, item) &#123; let i = 14 let f = 2 let all_true = false this.valid[id + '_' + name] = '' let reg = new RegExp(`^-?\\\\d&#123;1,$&#123;i&#125;&#125;(\\\\.\\\\d&#123;1,$&#123;f&#125;&#125;)?$`) if (!reg.test(value)) &#123; this.valid[id + '_' + name] = `最多$&#123;i&#125;位整数$&#123;f&#125;位小数` &#125; // 校验是否还存在其他valid for (let v in this.valid) &#123; if (this.valid[v]) &#123; all_true = false break &#125; else &#123; all_true = true &#125; &#125; let res = 0 if (item.houses &amp;&amp; item.houses.length) &#123; item.houses.forEach((h) =&gt; &#123; res = Utils.floatAdd(res, h.value, 2) &#125;) &#125; item.manualValue = res // 同步更新当前手工补录值 this.$emit('checkInput', all_true) // 通过输入合法性校验 &#125;, // 查看更多楼栋信息 handleMore(data) &#123; this.form = _.clone(data) this.title = data.name this.visible = true &#125;, // 查看明细 goTo(url) &#123; this.$emit('goTo', url) &#125;, /** * 正浮点数限制 * @param &#123;Number&#125; i 整数最大位数 * @param &#123;Number&#125; f 小数最大位数 * @param &#123;Object&#125; options 配置 * isMoreThanZero: 是否强制大于0 * canNegative: 是否允许输入负数 */ float(i, f, options = &#123;&#125;) &#123; return &#123; validator: (rule, value, callback) =&gt; &#123; let reg let msg if (f == 0) &#123; reg = new RegExp(`^-?\\\\d&#123;1,$&#123;i&#125;&#125;$`) &#125; else &#123; reg = new RegExp(`^-?\\\\d&#123;1,$&#123;i&#125;&#125;(\\\\.\\\\d&#123;1,$&#123;f&#125;&#125;)?$`) &#125; if (!value) &#123; callback() &#125; else &#123; if (reg.test(value)) &#123; if ( (options.isMoreThanZero &amp;&amp; Number(value) &lt;= 0) || (!options.canNegative &amp;&amp; Number(value) &lt; 0) ) &#123; msg = '请输入大于零的数值' &#125; else &#123; callback() &#125; &#125; else &#123; msg = `最多$&#123;i&#125;位整数` if (f != 0) &#123; msg += `$&#123;f&#125;位小数` &#125; &#125; &#125; if (msg) &#123; callback(new Error(makeMsg(msg, options.extraMsg))) &#125; &#125;, trigger: 'blur' &#125; &#125;, /* 不允许输入全部是空格 */ notAllBlank(label) &#123; return &#123; validator: (rule, value = '', callback) =&gt; &#123; if (value.trim().length == 0) &#123; callback(new Error(`$&#123;label&#125;不能全部是空格`)) &#125; else &#123; callback() &#125; &#125;, trigger: 'blur' &#125; &#125;, /** * 千分位 * @param &#123;*&#125; str 字符串数字 */ format(str) &#123; if (!str) return str str = str.toString() let minus = false if (/^-/.test(str)) &#123; minus = true str = str.replace(/^-/, '') &#125; let [int, float] = str.split('.') let result = [] for (let i = 0; i &lt; int.length; i++) &#123; result = [int[int.length - i - 1], ...result] if (i % 3 == 2 &amp;&amp; i != int.length - 1) &#123; result = [',', ...result] &#125; &#125; if (float) &#123; return `$&#123;minus ? '-' : ''&#125;$&#123;result.join('')&#125;.$&#123;float&#125;` &#125; return `$&#123;minus ? '-' : ''&#125;$&#123;result.join('')&#125;` &#125; &#125;&#125;&lt;/script&gt;&lt;style lang=\"less\" scoped&gt;@import '~__assets/var.less';@import url('//at.alicdn.com/t/font_1712723_tp9lsy2fuua.css');.f-fr &#123; float: right;&#125;.f-tooltip &#123; max-width: 700px !important; word-wrap: break-word !important;&#125;.show-btn &#123; position: absolute; right: 20px; top: 13px;&#125;/deep/ .cell &#123; user-select: text;&#125;/deep/ .el-table__row &#123; td &#123; &amp;:last-child &#123; .cell &#123; max-height: 60px; &#125; &#125; &#125;&#125;.dialog-total &#123; height: 32px; text-align: right;&#125;.error-info &#123; color: @c-err; font-size: 16px; line-height: 24px;&#125;.f-i-btn &#123; font-size: 16px;&#125;&lt;/style&gt; 参考链接： Table 表格 elementUi中input输入字符光标在输入一个字符后，光标失去焦点","categories":[],"tags":[{"name":"Element","slug":"Element","permalink":"http://unknownfor.github.io/tags/Element/"}]},{"title":"图片或背景实现等比自适应缩放","slug":"图片或背景实现等比自适应缩放","date":"2019-01-26T12:49:47.000Z","updated":"2022-04-19T14:06:44.713Z","comments":true,"path":"2019/01/26/图片或背景实现等比自适应缩放/","link":"","permalink":"http://unknownfor.github.io/2019/01/26/图片或背景实现等比自适应缩放/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\" /&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" /&gt; &lt;title&gt;React App&lt;/title&gt; &lt;style&gt; body &#123; margin: 0px; padding: 0px; background-color: #f8f6f7; &#125; .ly-container &#123; display: flex; flex-wrap: wrap; justify-content: space-between; &#125; .ly-temp-item &#123; width: 23%; &#125; .ly-temp-bodyer &#123; overflow: hidden; position: relative; border-radius: 8px; padding-bottom: calc(1500% / 11); background-color: white; &#125; .ly-temp-image &#123; top: 0px; left: 0px; right: 0px; bottom: 0px; position: absolute; margin-bottom: 5%; background-size: 100%; &#125; .ly-temp-footer &#123; font-size: 14px; margin-top: 8px; text-align: center; line-height: 24px; margin-bottom: 8px; &#125; &lt;/style&gt;&lt;/head&gt; &lt;body&gt; &lt;div class=\"ly-container\"&gt; &lt;div class=\"ly-temp-item\"&gt; &lt;div class=\"ly-temp-bodyer\"&gt; &lt;div class=\"ly-temp-image\" style=\"background-image: url(./image/1.png);\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"ly-temp-footer\"&gt;标题1&lt;/div&gt; &lt;/div&gt; &lt;div class=\"ly-temp-item\"&gt; &lt;div class=\"ly-temp-bodyer\"&gt; &lt;div class=\"ly-temp-image\" style=\"background-image: url(./image/2.png);\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"ly-temp-footer\"&gt;标题1&lt;/div&gt; &lt;/div&gt; &lt;div class=\"ly-temp-item\"&gt; &lt;div class=\"ly-temp-bodyer\"&gt; &lt;div class=\"ly-temp-image\" style=\"background-image: url(./image/3.png);\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"ly-temp-footer\"&gt;标题1&lt;/div&gt; &lt;/div&gt; &lt;div class=\"ly-temp-item\"&gt; &lt;div class=\"ly-temp-bodyer\"&gt; &lt;div class=\"ly-temp-image\" style=\"background-image: url(./image/4.png);\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"ly-temp-footer\"&gt;标题1&lt;/div&gt; &lt;/div&gt; &lt;div class=\"ly-temp-item\"&gt; &lt;div class=\"ly-temp-bodyer\"&gt; &lt;div class=\"ly-temp-image\" style=\"background-image: url(./image/5.png);\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"ly-temp-footer\"&gt;标题1&lt;/div&gt; &lt;/div&gt; &lt;div class=\"ly-temp-item\"&gt; &lt;div class=\"ly-temp-bodyer\"&gt; &lt;div class=\"ly-temp-image\" style=\"background-image: url(./image/6.png);\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"ly-temp-footer\"&gt;标题1&lt;/div&gt; &lt;/div&gt; &lt;div class=\"ly-temp-item\"&gt; &lt;div class=\"ly-temp-bodyer\"&gt; &lt;div class=\"ly-temp-image\" style=\"background-image: url(./image/7.png);\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"ly-temp-footer\"&gt;标题1&lt;/div&gt; &lt;/div&gt; &lt;div class=\"ly-temp-item\"&gt; &lt;div class=\"ly-temp-bodyer\"&gt; &lt;div class=\"ly-temp-image\" style=\"background-image: url(./image/8.png);\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"ly-temp-footer\"&gt;标题1&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt; &lt;/html&gt;","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://unknownfor.github.io/tags/前端/"},{"name":"学习","slug":"学习","permalink":"http://unknownfor.github.io/tags/学习/"}]},{"title":"webview更新地址没有发起请求","slug":"webview更新地址没有发起请求","date":"2018-08-14T13:13:56.000Z","updated":"2020-01-10T08:33:05.698Z","comments":true,"path":"2018/08/14/webview更新地址没有发起请求/","link":"","permalink":"http://unknownfor.github.io/2018/08/14/webview更新地址没有发起请求/","excerpt":"","text":"场景app启动的时候会预加载web页面，web页面依赖app的相关权限数据（例如aoo定位坐标） 首次进入app，用户据胡娥授权定位或者手机定位未开启，这时候web页面已经预加载。(以hash路由为例) 1https://www.baidu.com/index.html#/ 获取不到定位，页面先加载北京的数据。 用户开启手机定位，app获取到经纬度，重新请求一次接口，url地址为 1https://www.baidu.com/index.html#/?lat=143.232232&amp;lon=32.234432 问题url更新并没有请求接口更新数据 解决问题利用watch监听router中query的变化 1234567watch: &#123; '$route' (to, from) &#123; //监听路由是否变化 if(to.query.lat != from.query.lat)&#123; this.loadData();//重新加载数据 &#125; &#125;&#125; APP加载的一直是https://www.baidu.com/index.html#/这个地址，只是后边追加的参数不同，再回想下vue单页面路由的原理，只有访问到对应的路由才会触发对应的页面加载（当前路由和要跳转的路由对应同一个组件时，组件不会被更新，生命周期不会被执行），才会触发页面中的vue的生命周期，所以，可以利用watch来监听路由参数的变化。 参考文章 官方说明","categories":[],"tags":[{"name":"移动端","slug":"移动端","permalink":"http://unknownfor.github.io/tags/移动端/"},{"name":"前端","slug":"前端","permalink":"http://unknownfor.github.io/tags/前端/"},{"name":"vue","slug":"vue","permalink":"http://unknownfor.github.io/tags/vue/"}]},{"title":"学习单元测试 - Jest","slug":"学习单元测试 - Jest","date":"2018-05-04T09:07:56.000Z","updated":"2019-12-12T09:33:15.389Z","comments":true,"path":"2018/05/04/学习单元测试 - Jest/","link":"","permalink":"http://unknownfor.github.io/2018/05/04/学习单元测试 - Jest/","excerpt":"","text":"现在系统功能趋于稳定，想着接入单元测试使用一下。尝试着为公共组件和公共方法编写覆盖全面的单元测试。 Jestvue-cli 自带Jest,开箱即用。在根目录中创建一个名为 jest.config.js 的配置文件。配置文档 1234567891011121314151617181920212223242526module.exports = &#123; // 文件后缀 moduleFileExtensions: ['js', 'jsx', 'json', 'vue'], // 文件如何转换 transform: &#123; '^.+\\\\.vue$': 'vue-jest', '.+\\\\.(css|styl|less|sass|scss|svg|png|jpg|ttf|woff|woff2)$': 'jest-transform-stub', '^.+\\\\.jsx?$': 'babel-jest' &#125;, // 忽略的文件 transformIgnorePatterns: ['/node_modules/'], // 生成快照需要的插件 snapshotSerializers: ['jest-serializer-vue'], // 需要执行哪些目录下的测试用例 testMatch: [ '**/tests/unit/**/*.spec.(js|jsx|ts|tsx)|**/__tests__/*.(js|jsx|ts|tsx)' ], // 在执行用例前的配置文件 setupFiles: ['./tests/setup.js'], // 测试覆盖率配置 collectCoverage: true, coverageReporters: ['html', 'lcov', 'text-summary'], coverageDirectory: './test/coverage', collectCoverageFrom: ['components/**/*.vue']&#125; 安装1vue add unit-jest 语法断言、异步代码测试、Mock 函数、快照参考文档 异步获取数据肯定是一个常见场景了。异步代码通常会有两种写法，分别为： 回调函数 函数返回 promise 在测试异步代码的时候，通常返回的数据是不确定的，因此我们只需要测试异步代码是否正常返回数据即可。 1234567891011121314// 回调函数的写法，通过 done 来让测试代码一直等待test('fetch success', done =&gt; &#123; fetch(data =&gt; &#123; expect(data.success).toBe(true) done() &#125;)&#125;)// 函数返回 promise 的写法，注意要加上 return// 当然对于返回 promise 的函数我们也可以直接使用 awaittest('fetch success', () =&gt; &#123; return fetch().then(data =&gt; &#123; expect(data.success).toBe(true) &#125;)&#125;) 实践单元测试case部署在tests/unit文件夹中，使用Jest编写。可以测试引入的公共方法，也可以测试一个单文件组件。建议按照代码组织结构来编写对应的单元测试case。 使用npm run unit来运行单元测试，测试结果会在命令行中显示。在构建测试环境的时候会自动运行单元测试，如果单元测试存在未通过的case，则构建会失败并终止。构建beta环境和生产环境暂时不会运行单元测试。 一个简单的关于为数字加入千位分隔符的方法的单元测试： 123456789describe('Utils suits', function () &#123; it('should add commas for numbers', function () &#123; let fn = Utils.addNumberCommas expect(fn(123)).toBe('123') expect(fn(12345)).toBe('12,345') expect(fn(1234567.89)).toBe('1,234,567.89') expect(fn(-1234567.89)).toBe('-1,234,567.89') &#125;)&#125;) 输出示例： 参考链接： Jest Vue单元测试 Vue_Test_Utils","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://unknownfor.github.io/tags/前端/"},{"name":"学习","slug":"学习","permalink":"http://unknownfor.github.io/tags/学习/"},{"name":"单元测试","slug":"单元测试","permalink":"http://unknownfor.github.io/tags/单元测试/"}]},{"title":"请求封装","slug":"请求与封装","date":"2018-03-29T13:32:01.000Z","updated":"2019-12-11T09:38:41.530Z","comments":true,"path":"2018/03/29/请求与封装/","link":"","permalink":"http://unknownfor.github.io/2018/03/29/请求与封装/","excerpt":"","text":"目前后台是微服务架构，所以不同的业务模块会请求到不同的地址，而不同的环境（测试/beta/生产）会携带不同的请求头进行区分，同时每个请求都有固定的参数携带，所以需要对请求进行统一的封装和管理。在这里记录一下封装请求的代码。 目前请求统一封装至 services 文件夹，按照后台模块名进行区分。每个请求都会封装成一个Promise，使用async/await进行异步请求管理。注意同时发起的多个请求使用Promise.all封装为一个新的Promise进行管理，防止串行请求影响性能。 12345let resp = await OpService.getProjects()console.log(resp)let requests = [UcService.getCurrentDeptLoginInfo(), UcService.getDepts()]let [currentDeptResp, deptsResp] = await Promise.all(requests) 1 utils/request.js 封装请求 1234567891011121314151617181920212223//module区分模块，模块名称封装在 【src/config/module.js】里//path 是请求的文件路径//data 是传入数据//noAccessToken 大部分时间都是false ，极端情况 比如登陆、投诉之类的不需要 get(module, path, data, noAccessToken = false) &#123; let p = new Promise(async function (resolve, reject) &#123; try &#123; let config = await BaseService.getConfig() let client = await BaseService.getClient(module) let services = config.services[module] let resp = await client.get(makeUrl(services.host, path, data, noAccessToken), &#123; headers: &#123; accept: 'application/json', &#125; &#125;) resolve(resp) &#125; catch (e) &#123; await handleError(e) reject(e) &#125; &#125;) return p &#125;, 2 eg: src\\services.js 封装请求 123456789101112131415161718/** * 登录后获取当前基础信息接口 */ //R是在build/webpack.base.conf.js里声明过的封装方法 //里面包含了基础的请求信息 function getCurrentDeptLoginInfo() &#123; let p = new Promise(async function (res, rej) &#123; try &#123; let resp = await R.get(Config.module.UC, '/user/get_current_dept_login_info') res(resp) &#125; catch (e) &#123; rej(e) &#125; &#125;) return p&#125; 3 应用请求 src\\app.js 调用封装的方法 123456789101112131415161718async handleDeptCommand(id) &#123; Loading.show() try &#123; let resp = await UserService.switchDept(id) if (resp.errcode == 0) &#123; let resp2 = await UserService.getCurrentDeptLoginInfo() BaseService.setBasicData(resp2.info) this._renderBasicData(resp2.info) this.$router.push('/') &#125; else &#123; console.error(new Error('errcode: ' + resp.errcode)) &#125; &#125; catch (e) &#123; console.error(e) &#125; finally &#123; Loading.hide() &#125; &#125;","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://unknownfor.github.io/tags/前端/"},{"name":"VUE","slug":"VUE","permalink":"http://unknownfor.github.io/tags/VUE/"}]},{"title":"前端页面内权限控制规范","slug":"前端页面内权限控制规范","date":"2018-03-13T11:46:04.000Z","updated":"2019-12-11T09:04:00.317Z","comments":true,"path":"2018/03/13/前端页面内权限控制规范/","link":"","permalink":"http://unknownfor.github.io/2018/03/13/前端页面内权限控制规范/","excerpt":"","text":"201809更新v-auth控制弹窗内元素渲染会出现首次渲染成功后，第二次打开弹窗为false的情况，导致权限判断失败，页面样式错位，所以无法在弹窗内使用该方法。 解决方法：因为只需要页面初次加载时判断用户有无功能权限，通过接口查询一次后赋值给data的xx属性，通过属性的值来判断。 12345678910111213async created() &#123; // do someting // 查询有无删除调账记录权限 try &#123; let valid = await this.fCheckAuth('household.HOUSEHOLD_DELSUBJECT') if (valid) &#123; this.show_del = true &#125; &#125; catch (e) &#123; console.log(e) &#125;&#125;, 前端页面内权限控制规范目前的权限系统支持到动作点的细粒度控制，前端支持前置判断权限从而控制节点的展示与隐藏，执行相关逻辑等。前端通过 mixin 混入权限控制模块进行判断和处理。 自定义组件需要单独import &#39;@/mixin/auth&#39;，如果是已经引入了@/mixin的页面组件则不需要额外引入该模块。 该模块提供一个自定义指令v-auth和一个公共方法fCheckAuth，前者用来根据权限控制一个节点的展示或隐藏，后者通过该方法查询当前角色是否有某权限。 动作点管理动作点统一添加到@/config/auth。动作点通过模块管理，值为后台刷新的动作点名。 123456export default &#123; // 账单 bill: &#123; CONFIRM_OFFLINE_PAYMENT: 'accounting_billcenter_confirmofflinepayment' // 确认财务收款 &#125;&#125; v-authv-auth接收多种格式的参数。 传入字符串可以传入一个形如&#39;bill.CONFIRM_OFFLINE_PAYMENT&#39;的字符串，指令会到配置中寻找对应的路径查询当前动作点是否有权限，如果没有权限，则移除这个 DOM。 注意：传入的是字符串&#39;bill.CONFIRM_OFFLINE_PAYMENT&#39;，而不是bill.CONFIRM_OFFLINE_PAYMENT，后者会被框架当做组件的data值去获取。 传入对象可以传入的是一个对象： 参数名 类型 解释 auth String 逻辑处理同字符串参数 hide Boolean 如果为true，则将其display属性置为none（而不是从 dom 中移除这个节点） reverse Boolean 如果为true，则展示逻辑与正常相反，即无权限时展示该节点，有权限时移除这个节点 传入布尔值如果传入的是一个布尔值且该布尔值为false，则移除这个 DOM。作用同v-if。 fCheckAuth()方法使用this.fCheckAuth(auth)方法判断当前是否有auth权限，auth参数同v-auth自定义指令接收的字符串参数。 注意，这是一个异步方法。使用 1234let valid = await this.fCheckAuth('bill.CONFIRM_OFFLINE_PAYMENT')if (valid) &#123; // do something&#125; 或者 12345this.fCheckAuth('bill.CONFIRM_OFFLINE_PAYMENT').then(valid =&gt; &#123; if (valid) &#123; // do something &#125;&#125;) 判断是否具有相关权限。","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://unknownfor.github.io/tags/前端/"},{"name":"开发文档","slug":"开发文档","permalink":"http://unknownfor.github.io/tags/开发文档/"}]},{"title":"手动实现all、bind、apply","slug":"手动实现all、bind、apply","date":"2017-09-23T10:32:59.000Z","updated":"2019-12-12T08:47:08.540Z","comments":true,"path":"2017/09/23/手动实现all、bind、apply/","link":"","permalink":"http://unknownfor.github.io/2017/09/23/手动实现all、bind、apply/","excerpt":"","text":"call原生call 123456789function test(arg1, arg2) &#123; console.log(arg1, arg2) console.log(this.a, this.b)&#125;run.call(&#123; a: 'a', b: 'b'&#125;, 1, 2) 在实现的过程有个关键： 如果一个函数作为一个对象的属性，那么通过对象的.运算符调用此函数，this 就是此对象 1234567891011let obj = &#123; a: 'a', b: 'b', test: function (arg1, arg2) &#123; console.log(arg1, arg2) // this.a 就是 a; this.b 就是 b console.log(this.a, this.b) &#125;&#125;obj.test(1, 2) 手动模拟call123456789101112131415161718192021222324252627282930Function.prototype.call2 = function(context) &#123; if(typeof this !== 'function') &#123; throw new TypeError('Error') &#125; // 默认上下文是window context = context || window // 保存默认的fn const &#123; fn &#125; = context // 前面讲的关键，将函数本身作为对象context的属性调用，自动绑定this context.fn = this const args = [...arguments].slice(1) const result = context.fn(...args) // 恢复默认的fn context.fn = fn return result&#125;// 以下是测试代码function test(arg1, arg2) &#123; console.log(arg1, arg2) console.log(this.a, this.b)&#125;test.call2(&#123; a: 'a', b: 'b'&#125;, 1, 2) bindbind有两个特点： 本身返回一个全新的函数，所以需要考虑new的清空 可以保留参数，内部实现了参数的拼接 123456789101112131415161718192021222324252627282930313233343536Function.prototype.bind2 = function(context) &#123; if(typeof this !== 'function') &#123; throw new TypeError('Error') &#125; const that = this // 保留之前的参数，为了下面的参数拼接 const args = [...arguments].slice(1) return function F() &#123; // 如果被new创建实例，不会被改变上下文！ if(this instanceof F) &#123; return new that(...args, ...arguments) &#125; // args.concat(...arguments): 拼接之前和现在的参数 // 注意：arguments是个类Array的Object, 用解构运算符..., 直接拿值拼接 return that.apply(context, args.concat(...arguments)) &#125;&#125;/** * 以下是测试代码 */function test(arg1, arg2) &#123; console.log(arg1, arg2) console.log(this.a, this.b)&#125;const test2 = test.bind2(&#123; a: 'a', b: 'b'&#125;, 1) // 参数 1test2(2) // 参数 2 applyapply和call实现类似，只是传入的参数形式是数组形式，而不是逗号分隔的参数序列。 因此，借助es6提供的…运算符，就可以很方便的实现数组和参数序列的转化。 12345678910111213141516171819202122232425262728293031323334Function.prototype.apply2 = function(context) &#123; if(typeof this !== 'function') &#123; throw new TypeError('Error') &#125; context = context || window const &#123; fn &#125; = context context.fn = this let result if(Array.isArray(arguments[1])) &#123; // 通过...运算符将数组转换为用逗号分隔的参数序列 result = context.fn(...arguments[1]) &#125; else &#123; result = context.fn() &#125; context.fn = fn return result&#125;/** * 以下是测试代码 */function test(arg1, arg2) &#123; console.log(arg1, arg2) console.log(this.a, this.b)&#125;test.apply2(&#123; a: 'a', b: 'b'&#125;, [1, 2])","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://unknownfor.github.io/tags/前端/"},{"name":"面试","slug":"面试","permalink":"http://unknownfor.github.io/tags/面试/"}]},{"title":"记录hexo替换主题","slug":"记录hexo替换主题","date":"2017-09-09T07:57:42.000Z","updated":"2019-12-11T09:06:52.962Z","comments":true,"path":"2017/09/09/记录hexo替换主题/","link":"","permalink":"http://unknownfor.github.io/2017/09/09/记录hexo替换主题/","excerpt":"","text":"博客也是上线了一年了，结果拖拖拉拉一直没什么东西写，今天闲来无事想着更换看腻了的博客主题。在 hexo主题官网 找到了一款极简的主题 polarbear ,安装替换现有主题都是常规流程。参考制作人的readme步骤。 12$ npm install hexo-renderer-scss --save$ git clone https://github.com/frostfan/hexo-theme-polarbear themes/polarbear 修改配置 _config.yml123456789101112# Extensions## Plugins: http://hexo.io/plugins/## Themes: http://hexo.io/themes/theme: polarbear# 在归档页面显示所有文章 （Show all articles on archive page.）# 需要安装(Need to install) hexo-generator-archive 插件支持archive_generator: per_page: 0 yearly: false monthly: false daily: false 结果 archive 和 about 遇到了问题。右上角的归档页和关于我找不到路径。 更换自己喜欢的网页图标网上搜索自己喜欢的图片，尺寸小，注意格式要是.ico,替换本地themes文件夹下的favicon.icon文件即可。 解决about找不到排查了一下问题，可能是文件找不到。终于找到了相关教程，new了文件 12hexo new page \"about\"hexo new page \"archives\" 执行命令后在本地站点的source目录下生成一个about文件夹，修改about文件夹下的index.md。相应的archives也要修改type 12345---title: aboutdate: 2016-03-23 14:24:06type: about--- 12345---title: archivesdate: 2016-03-23 14:24:06type: archive--- 重启服务就发现about可以正常跳转一个空页了。 解决archive找不到百思不得其解为什么hexo没有自动生成archive，明明是安装了插件就可以支持的。重新执行了一下安装命令。1npm install --save hexo-generator-archive 在node_modules下找到了相应的hexo-generator-archive，证明插件安装成功。但是还是没有自动生成。 终于排查到了问题，_config.yml 网站配置文件里的文件目录写错了 1234# 错误archive_dir: archive# 正确archive_dir: archives 终于成功了！ 以下是9月10日更新：侧边栏没有展示自定义的widget 修改本地站点的 _config.yml 的相关配置语句并没有生效，经过排查发现是主题的 _config.yml 的相关配置是false，看来主题的配置权重更高。修改为false之后就发现了自定义的 widget_custom 出现了。 参考文章 官方说明 Hexo安装配置详解","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://unknownfor.github.io/tags/hexo/"}]},{"title":"Element日期选择组件时间选择限定","slug":"Element日期选择组件时间选择限定","date":"2017-07-18T07:50:38.000Z","updated":"2019-12-12T09:19:34.420Z","comments":true,"path":"2017/07/18/Element日期选择组件时间选择限定/","link":"","permalink":"http://unknownfor.github.io/2017/07/18/Element日期选择组件时间选择限定/","excerpt":"","text":"2018 年 12 月更新：要求禁用时间不能小于启用时间。问题： 启用时间是动态更新的，不同数据启用时间不同，导致禁用时间范围也不一样。在data初始赋值后不会再更新pickerOptions解决方法：watch 启用时间，每次更新启用时间都动态更新一次pickerOptions Template12345678910111213141516171819202122232425262728&lt;el-form-item label=\"启用月份\" prop=\"start_year_month\"&gt; &lt;el-date-picker v-model=\"form.start_year_month\" type=\"month\" format=\"yyyy 年 MM\" value-format=\"yyyyMM\" style=\"width: 100%\" placeholder=\"请选择启用月份\" :clearable=\"false\" :editable=\"false\" &gt;&lt;/el-date-picker&gt; &lt;/el-form-item&gt; &lt;el-form-item label=\"禁用月份\" prop=\"stop_year_month\" &gt; &lt;el-date-picker :picker-options=\"pickerOptions\" v-model=\"form.stop_year_month\" :clearable=\"false\" :editable=\"false\" type=\"month\" style=\"width: 100%\" format=\"yyyy 年 MM\" value-format=\"yyyyMM\" placeholder=\"请选择禁用月份\" &gt;&lt;/el-date-picker&gt; &lt;/el-form-item&gt; Script123456789101112131415161718192021data: &#123; pickerOptions: &#123;&#125;, form: &#123; start_year_month: '', stop_year_month: '' &#125;&#125;watch: &#123; // time.getTime是把选中的时间转化成自1970年1月1日 00:00:00 UTC到当前时间的毫秒数 // 当前启用日期为 ‘201912’ ，只包含日期，导致return范围不对，需要转换为‘2019-12’ ['form.start_year_month'](val) &#123; this.pickerOptions = Object.assign(&#123;&#125;, this.pickerOptions, &#123; // disabledDate 为true表示不可选,false表示可选 disabledDate: (time) =&gt; &#123; let str = val.slice(0, 4) + '-' + val.slice(4, 7) str = new Date(str).getTime() return time.getTime() &lt; str // 可选时间范围大于等于启用日期 &#125; &#125;)&#125; 实现效果 2018 年 7 月更新：产品觉得饿了么的时间范围选择器不方便，要求使用两个单独的时间选择器做时间范围筛选。 Template1234567891011121314151617&lt;el-date-picker v-model=\"startDate\" type=\"date\" placeholder=\"选择开始日期\" :picker-options=\"pickerOptionsStart\" @change=\"changeEnd\"&gt;&lt;/el-date-picker&gt;&lt;el-date-picker v-model=\"endDate\" type=\"date\" placeholder=\"选择结束日期\" :picker-options=\"pickerOptionsEnd\" @change=\"changeStart\"&gt;&lt;/el-date-picker&gt; Script123456789101112131415161718192021222324data() &#123; return &#123; pickerOptionsStart: &#123;&#125;, pickerOptionsEnd:&#123;&#125;, startDate: '', endDate: '', &#125;;methods:&#123; changeStart ()&#123; this.pickerOptionsStart = Object.assign(&#123;&#125;,this.pickerOptionsStart,&#123; disabledDate: (time) =&gt; &#123; return time.getTime() &gt; this.endDate &#125; &#125;) &#125;, changeEnd ()&#123; this.pickerOptionsEnd = Object.assign(&#123;&#125;,this.pickerOptionsEnd,&#123; disabledDate: (time) =&gt; &#123; return time.getTime() &lt; this.startDate &#125; &#125;) &#125; &#125; 2018 年 4 月更新：做企业合同办理入住遇到新的需求，特此记录一下。 12345678910111213141516171819202122import moment from 'moment'export default function () &#123; let that = this return &#123; /** * * 不允许选择未来日期 * 允许选择合同开始前的30天,（即往前推29天） * 如果合同租期已结束，可选最大时间为租期结束时间 */ pickerOptions: &#123; disabledDate(time) &#123; let curDate = (new Date()).getTime() let start = new Date(that.form.rent_start).getTime() let end = new Date(that.form.rent_end).getTime() let three = 30 * 24 * 3600 * 1000 if (moment().isAfter(that.form.rent_end, 'day')) &#123; return time.getTime() &lt; start - three || time.getTime() &gt; end &#125; return time.getTime() &lt; start - three || time.getTime() &gt; curDate &#125; &#125; &#125; 应用场景：双栏日期选择。选定开始日期后，结束日期只能限定在开始日期后三个月内的任意一天。 缺点:内部循环遍历所有日期，性能较差 代码： datepick.html 123&lt;div id=\"datepick\"&gt; &lt;datepick&gt;&lt;/datepick&gt;&lt;/div&gt; datepick.vue 1234567891011121314151617181920212223242526272829303132333435363738&lt;template&gt; &lt;div class=\"block\"&gt; &lt;el-date-picker v-model=\"value1\" type=\"date\" placeholder=\"开始日期\" :picker-options=\"pickerOptions0\"&gt; &lt;/el-date-picker&gt; &lt;el-date-picker v-model=\"value2\" type=\"date\" placeholder=\"结束日期\" :picker-options=\"pickerOptions1\"&gt; &lt;/el-date-picker&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt; export default &#123; data()&#123; return &#123; value1:'', value2:'', pickerOptions1: &#123; //disabledDate是日期组件的一个方法 disabledDate: (time) =&gt; &#123; //这里就涉及到日期的指定了 setMonth()函数可以设置月份 let currentTime = this.value1; let threeMonths = currentTime.setMonth(currentTime.getMonth()+3); //一开始我没加下面减三个月的那个语句，他的值会一直累加 currentTime.setMonth(currentTime.getMonth()-3) return time.getTime() &lt; this.value1 || time.getTime() &gt; threeMonths ; &#125; &#125; &#125; &#125; &#125; &lt;/script&gt; datepick.js 123456789101112import Vue from 'vue';import ElementUI from 'element-ui';import 'element-ui/lib/theme-chalk/index.css';import datepick from '../components/datepick.vue';Vue.use(ElementUI);new Vue(&#123; el: \"#datepick\", template:'&lt;datepick/&gt;', components: &#123;datepick&#125;&#125;)","categories":[],"tags":[{"name":"Element","slug":"Element","permalink":"http://unknownfor.github.io/tags/Element/"}]},{"title":"元素水平垂直居中","slug":"元素水平垂直居中","date":"2017-07-09T07:27:42.000Z","updated":"2019-12-11T08:33:34.549Z","comments":true,"path":"2017/07/09/元素水平垂直居中/","link":"","permalink":"http://unknownfor.github.io/2017/07/09/元素水平垂直居中/","excerpt":"","text":"方法一：position加margin 方法二： diaplay:table-cell 方法三：position加 transform 方法四：flex;align-items: center;justify-content: center 方法五：display:flex;margin:auto 方法六：transfer -50% 方法七：兼容低版本浏览器，不固定宽高 示例图 1.position加margin父元素和子元素高宽都固定，使用绝对定位的方法居中1234567891011121314151617181920212223/**html**/&lt;div class=\"parent\"&gt; &lt;div class=\"child\"&gt;&lt;/div&gt;&lt;/div&gt;/**css**/.parent &#123; width: 200px; height: 200px; background: yellow; position: relative;&#125;.child &#123; width: 100px; height: 100px; background: green; margin: auto; position: absolute; left: 0; right: 0; top: 0; bottom: 0;&#125; 2.display:tabel-cell父元素必须为tabel-cell，子元素必须为display：inline-block 123456789101112131415161718192021&lt;!-- html --&gt;&lt;div class=\"parent\"&gt; &lt;div class=\"child\"&gt;&lt;/div&gt;&lt;/div&gt;/*css*/.parent &#123; width: 200px; height: 200px; background: yellow; display: table-cell; vertical-align: middle; text-align: center;&#125;.child&#123; display: inline-block; vertical-align: middle; width: 100px; height: 100px; background: green;&#125; 3.position加 transform不需要考虑父元素的高宽，可以做自适应，但是子元素的高宽必须限定 12345678910111213141516171819202122&lt;!-- html --&gt;&lt;div class=\"parent\"&gt; &lt;div class=\"child\"&gt;&lt;/div&gt;&lt;/div&gt; /* css */.parentss &#123; position: relative; background: yellow; width: 200px; height: 200px;&#125;.child &#123; position: absolute; background: green; top:50%; left:50%; -webkit-transform:translate(-50%,-50%); transform:translate(-50%,-50%); width: 100px; height: 100px;&#125; 4.flex;alige-item:center;justify-content: center子元素和父元素都无需限定高宽，移动端兼容性良好 1234567891011121314151617181920&lt;!-- html --&gt;&lt;div class=\"parent\"&gt; &lt;div class=\"child\"&gt;&lt;/div&gt;&lt;/div&gt;/* css */.parent &#123; background: yellow; width: 200px; height: 200px; display: flex; align-items: center; justify-content: center;&#125;.child &#123; background: green; width: 100px; height: 100px;&#125; 5.display:flex;margin:auto兼容性没测试过，移动端适用 12345678910111213141516171819&lt;!-- html --&gt;&lt;div class=\"parent\"&gt; &lt;div class=\"child\"&gt;&lt;/div&gt;&lt;/div&gt;/* css */.parent &#123; background: yellow; width: 200px; height: 200px; display: flex; &#125;.child &#123; background: green; width: 100px; height: 100px; margin: auto;&#125; 6.tranfer -50%百分比来设置宽高 123456789101112//vertical center.vertical-center&#123; position absolute top 50% transform translate(0,-50%)&#125;.vertical-horizontal&#123; position absolute left 50% top 50% transform translate(-50%,-50%)&#125; 12345678910111213141516171819202122&lt;!-- html --&gt;&lt;div class=\"parent\"&gt; &lt;div class=\"child\"&gt;&lt;/div&gt;&lt;/div&gt;/* css */.parent &#123; &#125;.child &#123; position: absolute; top: 50%; left: 50%; width:50%; height:30%; padding:20px; text-align:center; background:#393; color:#fff; transform: translate(-50%, -50%);&#125; 7.高宽不定1234567891011121314151617181920212223242526272829303132&lt;!-- html --&gt;&lt;div class=\"table\"&gt; &lt;div class=\"tableCell\"&gt; &lt;div class=\"content\"&gt;不固定宽高，自适应&lt;/div&gt; &lt;/div&gt;&lt;/div&gt; /*css*/.table &#123; height: 200px;/*高度值不能少*/ width: 200px;/*宽度值不能少*/ display: table; position: relative; float:left; background: yellow;&#125; .tableCell &#123; display: table-cell; vertical-align: middle; text-align: center; *position: absolute; padding: 10px; *top: 50%; *left: 50%;&#125;.content &#123; *position:relative; *top: -50%; *left: -50%; background: green;&#125;","categories":[],"tags":[{"name":"移动开发","slug":"移动开发","permalink":"http://unknownfor.github.io/tags/移动开发/"}]},{"title":"Vue中样式覆盖-style的scoped属性","slug":"Vue中样式覆盖-style的scoped属性","date":"2017-07-06T07:01:37.000Z","updated":"2019-12-11T08:05:07.866Z","comments":true,"path":"2017/07/06/Vue中样式覆盖-style的scoped属性/","link":"","permalink":"http://unknownfor.github.io/2017/07/06/Vue中样式覆盖-style的scoped属性/","excerpt":"","text":"背景 &emsp;项目使用Vue和ElementUi，想要覆盖ElementUi默认的输入框样式，新增自定义CSS样式，根据el-input编译后生成的class修改，但是样式并不生效。 后来发现修改1&lt;style type=\"text/css\" scoped&gt;&lt;/style&gt; 标签里的scoped删除就生效了。 原因 &emsp;scope可以做到样式私有化，及当前样式只作用于当前模块，不会影响全局。 &emsp;通过查看DOM结构发现：vue通过在DOM结构以及css样式上加唯一不重复的标记，以保证唯一，达到样式私有化模块化的目的。具体的渲染结果是怎样的，通过一个例子来说明。 举个栗子 &emsp;一个公共组件button，为了样式模块化，给其加上scoped属性 1234567891011121314151617//button.vue&lt;template&gt; &lt;div class=\"button-warp\"&gt; &lt;button class=\"button\"&gt;text&lt;/button&gt; &lt;/div&gt;&lt;/template&gt;...&lt;style scoped&gt; .button-warp&#123; display:inline-block; &#125; .button&#123; padding: 5px 10px; font-size: 12px; border-radus: 2px; &#125;&lt;/style&gt; &emsp;浏览器渲染的button组件，其html和css结构如下： 123&lt;div data-v-2311c06a class=\"button-warp\"&gt; &lt;button data-v-2311c06a class=\"button\"&gt;text&lt;/button&gt;&lt;/div&gt; 12345678.button-warp[data-v-2311c06a]&#123; display:inline-block;&#125;.button[data-v-2311c06a]&#123; padding: 5px 10px; font-size: 12px; border-radus: 2px;&#125; &emsp;从上面的案例可以看出，添加了scoped属性的组件，为了达到组件样式模块化，做了两个处理： 给 HTML的 DOM节点加一个不重复data属性(形如：data-v-2311c06a)来表示他的唯一性 在每句 css选择器的末尾（编译后的生成的css语句）加一个当前组件的data属性选择器（如[data-v-2311c06a]）来私有化样式 &emsp;但这势必影响到css的优先级，scoped虽然达到了组件样式模块化，但是会导致每个样式的权重加重。理论上我们要修改这个样式的话，需要更高的权重去修改，增加了复杂度。 外部引用&emsp;栗子说明了单个组件渲染，当遇到组件相互调用，如果组件内部包含有其他组件，只会给其他组件的最外层标签加上当前组件的data属性。 解决方案&emsp;vue-loader的深度作用选择器。 &emsp;在vue.js中，&lt;style scoped&gt;的作用域在本html页面，&lt;style&gt;样式的作用域则是全局（即所有html页面），由于我把其中一个html页面的&lt;style scoped&gt;scoped去掉，这个页面的样式就变成了全局样式，当其它页面和这些全局样式重class名时，样式会被覆盖（vue默认全局样式覆盖局部样式），这样就导致当前页面定义样式影响到全局样式。 &emsp;如何在&lt;style scoped&gt;局部样式中覆盖全局样式：父组件cssName+ /deep/+第三方库需要更改的cssName 123比如修改class为el-input__inner的元素，它的父class为input_percent，则在style中写入input_percent /deep/ .el-input__inner &#123;&#125;即可","categories":[],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://unknownfor.github.io/tags/Vue/"}]},{"title":"markdown语法","slug":"markdown语法","date":"2017-03-08T16:04:37.000Z","updated":"2021-08-12T06:40:32.468Z","comments":true,"path":"2017/03/09/markdown语法/","link":"","permalink":"http://unknownfor.github.io/2017/03/09/markdown语法/","excerpt":"","text":"强调 分割线 引用 嵌套列表 段落缩进（空格） 字体、字号、颜色 标签 换行 首行缩进 流程图（mermaid语法） 当前目录使用的索引超链的方式 强调1234567**强调文字**__强调文字__*强调文字强调文字*_强调文字_ 强调文字强调文字 强调文字强调文字 强调文字 分割线12--- 引用12&gt;引用 &gt;&gt;引用中的引用 引用 引用中的引用 嵌套列表123456- 嵌套列表1 + 嵌套列表2 + 嵌套列表3 - 嵌套列表4 * 嵌套列表5- 嵌套列表6 嵌套列表1 嵌套列表2 嵌套列表3 嵌套列表4 嵌套列表5 嵌套列表6 段落缩进1234半方大的空白&amp;ensp;或&amp;#8194;看，飞碟全方大的空白&amp;emsp;或&amp;#8195;看，飞碟不断行的空白格&amp;nbsp;或&amp;#160;看，飞碟&amp;emsp;&amp;emsp;段落从此开始。 半方大的空白&ensp;或&#8194;看，飞碟 全方大的空白&emsp;或&#8195;看，飞碟 不断行的空白格&nbsp;或&#160;看，飞碟 &emsp;&emsp;段落从此开始。 字体、字号、颜色123456&lt;font face=\"黑体\"&gt;我是黑体字&lt;/font&gt;&lt;font face=\"微软雅黑\"&gt;我是微软雅黑&lt;/font&gt;&lt;font face=\"STCAIYUN\"&gt;我是华文彩云&lt;/font&gt;&lt;font color=#0099ff size=12 face=\"黑体\"&gt;黑体&lt;/font&gt;&lt;font color=#00ffff size=3&gt;null&lt;/font&gt;&lt;font color=gray size=5&gt;gray&lt;/font&gt; 我是黑体字 我是微软雅黑 我是华文彩云 黑体 null gray 标签1行内标签` 这是一个有颜色的标签 换行 使用br标签 在末尾敲击两个以上空白，然后回车 首行缩进使用特殊占位符不同占位符所占空白是不一样大的。 123&amp;ensp;或&amp;#8194; //半角&amp;emsp;或&amp;#8195; //全角&amp;nbsp;或&amp;#160; 全角输入情况下双击两次空格这个方法我遇到一个问题：首段不能缩进 流程图（mermaid语法）书写graph XX，用以确定将要绘制的流程图及其类型（XX表示流程图类型）。流程图分为竖向和横向两大类，竖向包括自上而下和自下而上两种顺序，横向包括从右到左和从左到右两种顺序。其对应语法分别为：graph TB/graph BT/graph RL/graph LR。 TB - top bottom（自上而下）BT - bottom top（自下而上）RL - right left（从右到左）LR - left right（从左到右）TD: 默认方向，从上到下 连接线与箭头一个箭头 -&gt; 只能表示一条线要表示箭头，需要两个箭头 -&gt;&gt;虚线用两个虚线表示 –&gt;&gt; 123456graph TDA[模块A] --&gt;|A1| B(模块B)B --&gt; C&#123;判断条件C&#125;C --&gt;|条件C1| D&gt;模块D]C --&gt;|条件C2| E((模块E))C --&gt;|条件C3| F[\"模块F(引号可转义特殊字符)\"] 例子： 123- id 为汽车主键id- scar-id 为汽车车系id- 主要车的系列判断id为车辆系列ids 123sequenceDiagramcarmodel-&gt;&gt;carinfo: http://XX/index.php/src/index/carmodel/id/1carinfo-&gt;&gt;carmodel: http://XX/index.php/Src/index/carinfo?car_id=13&amp;scar_id=19 123sequenceDiagramenginesize-&gt;&gt;caryear: http://XX/index.php/Src/index/enginesize?car_id=13&amp;scar_id=19caryear-&gt;&gt;enginesize: http://XX/index.php/Src/index/cartype?car_id=13&amp;scar_id=19&amp;dis_id=1&amp;year_id=1","categories":[],"tags":[{"name":"学习","slug":"学习","permalink":"http://unknownfor.github.io/tags/学习/"}]}],"categories":[],"tags":[{"name":"工作笔记","slug":"工作笔记","permalink":"http://unknownfor.github.io/tags/工作笔记/"},{"name":"VUE","slug":"VUE","permalink":"http://unknownfor.github.io/tags/VUE/"},{"name":"uniapp开发","slug":"uniapp开发","permalink":"http://unknownfor.github.io/tags/uniapp开发/"},{"name":"uniapp","slug":"uniapp","permalink":"http://unknownfor.github.io/tags/uniapp/"},{"name":"微信小程序","slug":"微信小程序","permalink":"http://unknownfor.github.io/tags/微信小程序/"},{"name":"移动端","slug":"移动端","permalink":"http://unknownfor.github.io/tags/移动端/"},{"name":"前端","slug":"前端","permalink":"http://unknownfor.github.io/tags/前端/"},{"name":"学习","slug":"学习","permalink":"http://unknownfor.github.io/tags/学习/"},{"name":"vue3","slug":"vue3","permalink":"http://unknownfor.github.io/tags/vue3/"},{"name":"ts","slug":"ts","permalink":"http://unknownfor.github.io/tags/ts/"},{"name":"面试","slug":"面试","permalink":"http://unknownfor.github.io/tags/面试/"},{"name":"移动开发","slug":"移动开发","permalink":"http://unknownfor.github.io/tags/移动开发/"},{"name":"生活","slug":"生活","permalink":"http://unknownfor.github.io/tags/生活/"},{"name":"Element","slug":"Element","permalink":"http://unknownfor.github.io/tags/Element/"},{"name":"vue","slug":"vue","permalink":"http://unknownfor.github.io/tags/vue/"},{"name":"单元测试","slug":"单元测试","permalink":"http://unknownfor.github.io/tags/单元测试/"},{"name":"开发文档","slug":"开发文档","permalink":"http://unknownfor.github.io/tags/开发文档/"},{"name":"hexo","slug":"hexo","permalink":"http://unknownfor.github.io/tags/hexo/"},{"name":"Vue","slug":"Vue","permalink":"http://unknownfor.github.io/tags/Vue/"}]}